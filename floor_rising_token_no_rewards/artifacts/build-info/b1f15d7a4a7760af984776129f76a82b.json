{
  "id": "b1f15d7a4a7760af984776129f76a82b",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.11",
  "solcLongVersion": "0.8.11+commit.d7f03943",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/test.sol": {
        "content": "//SPDX-License-Identifier: No License\npragma solidity ^0.8.0;\n \n// Made in partnership with Tokify\n \n/**\n * SAFEMATH LIBRARY\n */\nlibrary SafeMath {\n \n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n \n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n \n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n \n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n}\n \ninterface IBEP20 {\n    function totalSupply() external view returns (uint256);\n    function decimals() external view returns (uint8);\n    function symbol() external view returns (string memory);\n    function name() external view returns (string memory);\n    function getOwner() external view returns (address);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address _owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n \nabstract contract Auth {\n    address internal owner;\n    mapping (address => bool) internal authorizations;\n \n    constructor(address _owner) {\n        owner = _owner;\n        authorizations[_owner] = true;\n    }\n \n    /**\n     * Function modifier to require caller to be contract owner\n     */\n    modifier onlyOwner() {\n        require(isOwner(msg.sender), \"!OWNER\"); _;\n    }\n \n    /**\n     * Function modifier to require caller to be authorized\n     */\n    modifier authorized() {\n        require(isAuthorized(msg.sender), \"!AUTHORIZED\"); _;\n    }\n \n    /**\n     * Authorize address. Owner only\n     */\n    function authorize(address adr) public onlyOwner {\n        authorizations[adr] = true;\n    }\n \n    /**\n     * Remove address' authorization. Owner only\n     */\n    function unauthorize(address adr) public onlyOwner {\n        authorizations[adr] = false;\n    }\n \n    /**\n     * Check if address is owner\n     */\n    function isOwner(address account) public view returns (bool) {\n        return account == owner;\n    }\n \n    /**\n     * Return address' authorization status\n     */\n    function isAuthorized(address adr) public view returns (bool) {\n        return authorizations[adr];\n    }\n \n    /**\n     * Transfer ownership to new address. Caller must be owner. Leaves old owner authorized\n     */\n    function transferOwnership(address payable adr) public onlyOwner {\n        owner = adr;\n        authorizations[adr] = true;\n        emit OwnershipTransferred(adr);\n    }\n \n    event OwnershipTransferred(address owner);\n}\n \ninterface IDEXFactory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n \ninterface IDEXPair {\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 bassetPoolLockTimestampLast);\n    function token0() external view returns (address);\n}\n \ninterface IDEXRouter {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n \n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n \n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n \n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n \ninterface IDividendDistributor {\n    function setDistributionCriteria(uint256 _minDistribution) external;\n    function setShare(address shareholder, uint256 amount) external;\n    function processDividend() external;\n    function viewDividendTokenAddress() external view returns (address tokenAddress);\n    function setDividendToken(address _dividendTokenAddress) external;\n}\n \ncontract DividendDistributor is IDividendDistributor {\n    using SafeMath for uint256;\n \n    address _token;\n    address _rewardsPool;\n \n    struct Share {\n        uint256 amount;\n        uint256 totalExcluded;\n        uint256 totalRealised;\n    }\n \n    IBEP20 dividendToken;\n    address WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\n    IDEXRouter router;\n \n    address[] shareholders;\n    mapping (address => uint256) shareholderIndexes;\n \n    mapping (address => Share) public shares;\n \n    uint256 public totalShares;\n    uint256 public totalDividends;\n    uint256 public totalDistributed;\n    uint256 public dividendsPerShare;\n    uint256 public dividendsPerShareAccuracyFactor = 10 ** 36;\n    uint256 public minDistribution = 0;\n \n    uint256 currentIndex;\n \n    bool public isDistributing;\n    bool public neverDistributed = true;\n    uint256 startingIndex;\n \n    bool initialized;\n    modifier initialization() {\n        require(!initialized);\n        _;\n        initialized = true;\n    }\n \n    modifier onlyToken() {\n        require(msg.sender == _token); _;\n    }\n\n     modifier onlyRewardsPool() {\n        require(msg.sender == _rewardsPool); _;\n    }\n \n    constructor (address _router, address _rewardTokenAddress, address _rewardsPoolAddress) {\n        router = _router != address(0)\n        ? IDEXRouter(_router)\n        : IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\n        _token = msg.sender;\n        _rewardsPool = _rewardsPoolAddress;\n        dividendToken = IBEP20(_rewardTokenAddress);\n        currentIndex = 0;\n        isDistributing = false;\n    }\n \n    function setDistributionCriteria(uint256 _minDistribution) external override onlyToken {\n        minDistribution = _minDistribution;\n    }\n \n    function setShare(address shareholder, uint256 amount) external override onlyToken {\n        if(shares[shareholder].amount > 0){\n            distributeDividend(shareholder);\n        }\n \n        if(amount > 0 && shares[shareholder].amount == 0){\n            addShareholder(shareholder);\n        }else if(amount == 0 && shares[shareholder].amount > 0){\n            removeShareholder(shareholder);\n        }\n \n        totalShares = totalShares.sub(shares[shareholder].amount).add(amount);\n        shares[shareholder].amount = amount;\n        shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\n    }\n\n    function setDividendToken(address _dividendTokenAddress) external override onlyToken {\n        require(neverDistributed == true, 'Cannot change dividend token after the first distribution has started');\n        dividendToken = IBEP20(_dividendTokenAddress);\n    }\n \n    receive() external payable onlyRewardsPool {\n        uint256 balanceBefore = dividendToken.balanceOf(address(this));\n \n        address[] memory path = new address[](2);\n        path[0] = WBNB;\n        path[1] = address(dividendToken);\n \n        router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: msg.value}(\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n \n        uint256 amount = dividendToken.balanceOf(address(this)).sub(balanceBefore);\n \n        totalDividends = totalDividends.add(amount);\n        dividendsPerShare = dividendsPerShare.add(dividendsPerShareAccuracyFactor.mul(amount).div(totalShares));\n \n        startingIndex = currentIndex;\n        isDistributing = true;\n        neverDistributed = false;\n    }\n \n    function processDividend() external override onlyToken {\n        uint256 shareholderCount = shareholders.length;\n \n        if(shareholderCount == 0) { return; }\n        if(isDistributing == false) { return; }\n \n        uint256 iterations = 0;\n \n        while(iterations < 4) {\n            if(currentIndex >= shareholderCount){\n                currentIndex = 0;\n            }\n \n            if(shouldDistribute(shareholders[currentIndex])){\n                distributeDividend(shareholders[currentIndex]);\n            }\n \n            currentIndex++;\n            iterations++;\n            if(currentIndex == startingIndex) {\n                isDistributing = false;\n            }\n        }\n    }\n \n    function shouldDistribute(address shareholder) internal view returns (bool) {\n        return getUnpaidEarnings(shareholder) > minDistribution;\n    }\n \n    function distributeDividend(address shareholder) internal {\n        if(shares[shareholder].amount == 0){ return; }\n \n        uint256 amount = getUnpaidEarnings(shareholder);\n        if(amount > 0){\n            totalDistributed = totalDistributed.add(amount);\n            dividendToken.transfer(shareholder, amount);\n            shares[shareholder].totalRealised = shares[shareholder].totalRealised.add(amount);\n            shares[shareholder].totalExcluded = getCumulativeDividends(shares[shareholder].amount);\n        }\n    }\n \n    function getUnpaidEarnings(address shareholder) public view returns (uint256) {\n        if(shares[shareholder].amount == 0){ return 0; }\n \n        uint256 shareholderTotalDividends = getCumulativeDividends(shares[shareholder].amount);\n        uint256 shareholderTotalExcluded = shares[shareholder].totalExcluded;\n \n        if(shareholderTotalDividends <= shareholderTotalExcluded){ return 0; }\n \n        return shareholderTotalDividends.sub(shareholderTotalExcluded);\n    }\n \n    function getCumulativeDividends(uint256 share) internal view returns (uint256) {\n        return share.mul(dividendsPerShare).div(dividendsPerShareAccuracyFactor);\n    }\n \n    function addShareholder(address shareholder) internal {\n        shareholderIndexes[shareholder] = shareholders.length;\n        shareholders.push(shareholder);\n    }\n \n    function removeShareholder(address shareholder) internal {\n        shareholders[shareholderIndexes[shareholder]] = shareholders[shareholders.length-1];\n        shareholderIndexes[shareholders[shareholders.length-1]] = shareholderIndexes[shareholder];\n        shareholders.pop();\n    }\n \n    function viewDividendTokenAddress() external view override returns (address tokenAddress) {\n        return address(dividendToken);\n    }\n}\n \ninterface IRewardsPool {\n    function transferBNBToAddress(address recipient, uint256 amount) external;\n}\n \n/// @dev Contract to store and distribute BNB rewards accrued through taxes in the parent token contract\ncontract RewardsPool is IRewardsPool {\n    using SafeMath for uint256;\n \n    address _token;\n \n    bool initialized;\n    modifier initialization() {\n        require(!initialized);\n        _;\n        initialized = true;\n    }\n \n    /// @dev Require the caller to be the parent token contract\n    modifier onlyToken() {\n        require(msg.sender == _token); _;\n    }\n \n    constructor () {\n        _token = msg.sender;\n    }\n \n    receive() external payable{}\n \n    /// @dev Transfer the BNB reward from the contract to a recipient\n    function transferBNBToAddress(address recipient, uint256 amount) external override onlyToken {\n        (bool success,) = address(recipient).call{value: amount}(\"\");\n        require(success);\n    }\n}\n \n/** @dev this token is backed by BNB, which can be sent to the contract by anyone and can be redeemed by burning the token. \n \nThere are two BNB pools - the asset pool which is simply the amount of BNB the contract holds, \nand the reward pool, which is the amount of BNB collected through taxes and is stored in a separate contract (RewardsPool).\n \nWhen burning the token, the amount of BNB given is calculated by taking (token amount)/(circulating supply) and giving that fraction of the asset pool BNB.\nHowever if there is BNB in the rewards pool, that is given first before dipping into the asset pool. This raises the floor price of the token when burning it as less BNB leaves the asset pool.\n \nThe rewards pool is separated because the owner of the token can also choose to distribute a fraction of the rewards pool at specific points in time to reward holders.\n*/ \n \ncontract TokifyRisingFloor is IBEP20, Auth {\n    using SafeMath for uint256;\n \n    uint256 public constant MASK = type(uint128).max;\n    address public WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\n    address DEAD = 0x000000000000000000000000000000000000dEaD;\n    address ZERO = 0x0000000000000000000000000000000000000000;\n    address DEAD_NON_CHECKSUM = 0x000000000000000000000000000000000000dEaD;\n \n    string constant _name = \"Tokify Rising Floor\";\n    string constant _symbol = \"TRF\";\n    uint8 constant _decimals = 9;\n \n    uint256 _totalSupply = 1_000_000_000_000_000 * (10 ** _decimals);\n    uint256 public _maxTxAmount = _totalSupply.div(400); // 0.25%\n \n    mapping (address => uint256) _balances;\n    mapping (address => mapping (address => uint256)) _allowances;\n \n    mapping (address => bool) isFeeExempt;\n    mapping (address => bool) isTxLimitExempt;\n    mapping (address => bool) isDividendExempt;\n    mapping (address => bool) isExcludedFromPause;\n \n    /// @dev liquidityFee determines tax to send to the liquidity pool\n    uint256 liquidityFee = 200;\n    /// @dev rewardsFee determines tax to send to the rewards pool\n    uint256 rewardsFee = 200;\n    /// @dev backingFee determines tax to send to the asset pool, which backs the token\n    uint256 backingFee = 200;\n    /// @dev marketingFee determines tax to send to the marketing wallet\n    uint256 marketingFee = 200;\n    uint256 totalFee = liquidityFee.add(rewardsFee).add(backingFee).add(marketingFee);\n    /// @dev fee denominator allows taxes to be decimal number percentages\n    uint256 feeDenominator = 10000;\n    uint256 public maxSellFee = 5000;\n    uint256 public maxSellMultiplier = 50000;\n\n    uint256 public baseTaxesAccumulated;\n    uint256 public sellingTaxAccumulated;\n \n    address public autoLiquidityReceiver;\n    address public marketingFeeReceiver;\n    address generatorFeeReceiver = 0xF6bF36933149030ed4B212F0a79872306690e48e;\n    uint256 generatorFee = 500;\n \n    /// @dev takeFeeActive allows to temporarily pause any taxes\n    bool takeFeeActive = true;\n \n    uint256 targetLiquidity = 25;\n    uint256 targetLiquidityDenominator = 100;\n \n    IDEXRouter public router;\n    address public pair;\n \n    RewardsPool rewardsPool;\n    address public rewardsPoolAddress;\n \n    DividendDistributor dividendDistributor;\n    address public dividendDistributorAddress;\n\n    uint256 public assetPoolLockTimestamp;\n    uint256 public assetPoolLockTime;\n    uint256 public pauseTimestamp;\n    uint256 public pauseTime;\n \n    /// @dev before processing taxes in BNB, the taxed token is accumulated in the contract to save on gas fees\n    /// @dev the swap to BNB will only occur once the swapThreshold is reached\n    bool public swapEnabled = true;\n    uint256 public swapThreshold = _totalSupply / 2000; // 0.05%\n    uint256 public sellingSwapThreshold = _totalSupply / 8000; // 0.0125%\n    bool inSwap;\n    modifier swapping() { inSwap = true; _; inSwap = false; }\n \n    constructor (\n        address _dexRouter,\n        address _marketingFeeReceiver,\n        address _rewardTokenAddress\n        ) Auth(msg.sender) {\n        /// @dev set the router address and create pair\n        router = IDEXRouter(_dexRouter);\n        pair = IDEXFactory(router.factory()).createPair(WBNB, address(this));\n        _allowances[address(this)][address(router)] = _totalSupply;\n        WBNB = router.WETH();\n \n        /// @dev create the rewards pool to store BNB rewards\n        rewardsPool = new RewardsPool();\n        rewardsPoolAddress = address(rewardsPool);\n \n        /// @dev create the dividend distributor to distribute BNB rewards\n        dividendDistributor = new DividendDistributor(_dexRouter, _rewardTokenAddress, rewardsPoolAddress);\n        dividendDistributorAddress = address(dividendDistributor);\n \n        isFeeExempt[msg.sender] = true;\n        isExcludedFromPause[msg.sender] = true;\n        isTxLimitExempt[msg.sender] = true;\n        isDividendExempt[pair] = true;\n        isDividendExempt[address(this)] = true;\n        isDividendExempt[DEAD] = true;\n        isDividendExempt[ZERO] = true;\n \n        autoLiquidityReceiver = msg.sender;\n        marketingFeeReceiver = _marketingFeeReceiver;\n \n        approve(_dexRouter, _totalSupply);\n        approve(address(pair), _totalSupply);\n        _balances[msg.sender] = _totalSupply;\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n \n    receive() external payable {}\n \n    function totalSupply() external view override returns (uint256) { return _totalSupply; }\n    function decimals() external pure override returns (uint8) { return _decimals; }\n    function symbol() external pure override returns (string memory) { return _symbol; }\n    function name() external pure override returns (string memory) { return _name; }\n    function getOwner() external view override returns (address) { return owner; }\n    function balanceOf(address account) public view override returns (uint256) { return _balances[account]; }\n    function allowance(address holder, address spender) external view override returns (uint256) { return _allowances[holder][spender]; }\n \n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _allowances[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n \n    function approveMax(address spender) external returns (bool) {\n        return approve(spender, _totalSupply);\n    }\n \n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        return _transferFrom(msg.sender, recipient, amount);\n    }\n \n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        if(_allowances[sender][msg.sender] != _totalSupply){\n            _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount, \"Insufficient Allowance\");\n        }\n \n        return _transferFrom(sender, recipient, amount);\n    }\n \n    function _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\n        if(isPaused()){\n          require(isExcludedFromPause[sender] == true || isExcludedFromPause[recipient] == true,\"WARNING: contract is in pause for maintenance\");\n        }\n        /// @dev if the token is currently being swapped by the contract into BNB, then no taxes apply\n        if(inSwap){ return _basicTransfer(sender, recipient, amount); }\n        /// @dev if the token is being burned then the recipient will be reimbursed with BNB according to the amount in the asset pool\n        if(recipient == DEAD){ return _burnForBNB(sender, amount); }\n        /// @dev check that the size of the transaction is not over the transaction limit\n        checkTxLimit(sender, amount);\n        /// @dev check if enough of the token has been accumulated in the contract to swap into BNB and if so then swap the token accumulated in contract to BNB\n        /// @dev only do either selling or base tax swap back at a single time\n        if(shouldSwapBack()){ swapBack(); }\n        else if(shouldSwapBackSelling()){ swapBackSelling(); }\n \n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\n \n        uint256 amountReceived = shouldTakeFee(sender) ? takeFee(sender, recipient, amount) : amount;\n \n        _balances[recipient] = _balances[recipient].add(amountReceived);\n        if(recipient == address(this)) {sellingTaxAccumulated = sellingTaxAccumulated.add(amount);}\n \n        /// @dev set the new shares of the token holders according to the balances after this transfer has occurred\n        if(!isDividendExempt[sender]){ try dividendDistributor.setShare(sender, _balances[sender]) {} catch {} }\n        if(!isDividendExempt[recipient]){ try dividendDistributor.setShare(recipient, _balances[recipient]) {} catch {} }\n \n        if(dividendDistributor.isDistributing()){try dividendDistributor.processDividend() {} catch {}}\n \n        emit Transfer(sender, recipient, amountReceived);\n        return true;\n    }\n \n    function _basicTransfer(address sender, address recipient, uint256 amount) internal returns (bool) {\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n//        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n \n    function checkTxLimit(address sender, uint256 amount) internal view {\n        require(amount <= _maxTxAmount || isTxLimitExempt[sender], \"TX Limit Exceeded\");\n    }\n \n    /// @dev check if taking fee is active and if yes if the sender is exempt from the fee\n    function shouldTakeFee(address sender) internal view returns (bool) {\n        if (takeFeeActive == false) {\n            return false;\n        }\n        return !isFeeExempt[sender];\n    }\n \n    /// @dev multiply fee by selling multiplier if person is selling the token\n    /// @dev sell multiplier is set depending on the current gap ratio proportionally\n    function getSellMultipliedFee() public view returns (uint256) {\n        uint256 sellMultiplier = getCurrentGapRatio(feeDenominator);\n        if(sellMultiplier <= feeDenominator){\n            sellMultiplier = feeDenominator;\n        }\n        if(sellMultiplier >= maxSellMultiplier){\n            sellMultiplier = maxSellMultiplier;\n        }\n        uint256 sellFee = totalFee.mul(sellMultiplier).div(feeDenominator);\n        /// @dev allow a maximum sell fee of 5000\n        if(sellFee > maxSellFee){\n            sellFee = maxSellFee;\n        }\n        return sellFee;\n    }\n \n    /// @dev check ratio of LP price and the floor price determined by the BNB held in asset pool\n    function getCurrentGapRatio(uint256 denominator) public view returns (uint256) {\n        IDEXPair routerPair = IDEXPair(pair);\n        address token0 = routerPair.token0();\n        uint256 reservesBNB;\n        uint256 reservesToken;\n        if(token0 == WBNB) {\n            (reservesBNB, reservesToken,) = routerPair.getReserves();\n        } else if (token0 == address(this)) {\n            (reservesToken, reservesBNB,) = routerPair.getReserves();\n        }\n        uint256 gapRatio = denominator.mul(getCirculatingSupply().mul(reservesBNB)).div(reservesToken.mul(getAmountBNBInAssetPool()));\n        return gapRatio;\n    }\n\n    /// @dev calculae the total fee to be taken on the transaction\n    function getTotalFee(bool selling) public view returns (uint256) {\n        if(selling){ return getSellMultipliedFee(); }\n        return totalFee;\n    }\n\n    /// @dev figure out the amount transferred when taxes are deducted and add the taxes to this contract\n    function takeFee(address sender, address receiver, uint256 amount) internal returns (uint256) {\n        bool selling = receiver == pair;\n        uint256 feeAmount = amount.mul(getTotalFee(selling)).div(feeDenominator);\n        if (selling) {\n            uint256 baseFee = amount.mul(totalFee).div(feeDenominator);\n            uint256 sellingFee = feeAmount.sub(baseFee);\n            sellingTaxAccumulated = sellingTaxAccumulated.add(sellingFee);\n            baseTaxesAccumulated = baseTaxesAccumulated.add(baseFee);\n        } else {\n            baseTaxesAccumulated = baseTaxesAccumulated.add(feeAmount);\n        }\n \n        _balances[address(this)] = _balances[address(this)].add(feeAmount);\n\n\n        emit Transfer(sender, address(this), feeAmount);\n \n        return amount.sub(feeAmount);\n    }\n \n    function shouldSwapBack() internal view returns (bool) {\n        return msg.sender != pair\n        && !isPaused()\n        && !inSwap\n        && swapEnabled\n        && baseTaxesAccumulated >= swapThreshold;\n    }\n \n    /// @dev function to swap the token accumulated in the contract through taxes into BNB\n    /// @dev the BNB is then accordingly distributed into the rewards pool, the liquidity pool and the marketing wallet\n    function swapBack() internal swapping {\n        uint256 dynamicLiquidityFee = isOverLiquified(targetLiquidity, targetLiquidityDenominator) ? 0 : liquidityFee;\n        uint256 amountToLiquify = swapThreshold.mul(dynamicLiquidityFee).div(totalFee).div(2);\n        uint256 amountToSwap = swapThreshold.sub(amountToLiquify);\n \n        /// @dev set the path through which the contract exchanges the token to BNB\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = WBNB;\n        uint256 balanceBefore = address(this).balance;\n \n        /// @dev exchange the token for BNB\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            amountToSwap,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n\n        baseTaxesAccumulated = balanceOf(address(this)).sub(sellingTaxAccumulated);\n \n        /// @dev caluculate how much new BNB has been converted\n        uint256 amountBNB = address(this).balance.sub(balanceBefore);\n \n        uint256 totalBNBFee = totalFee.sub(dynamicLiquidityFee.div(2));\n \n        /// @dev since adding to liquidity pool requires both BNB and the token, we only convert half of it\n        uint256 amountBNBLiquidity = amountBNB.mul(dynamicLiquidityFee).div(totalBNBFee).div(2);\n        uint256 amountBNBMarketing = amountBNB.mul(marketingFee).div(totalBNBFee);\n        uint256 amountBNBReflection = amountBNB.mul(rewardsFee).div(totalBNBFee);\n        /// @dev there is no value here for the backing fee in BNB, since it would be in the contract after conversion to BNB anyway\n \n        sendSwappedBNB(amountBNBMarketing, amountBNBReflection);\n \n        /// @dev transfer the portion of taxes taken for liquidity pool to the liquidity pool\n        if(amountToLiquify > 0){\n            router.addLiquidityETH{value: amountBNBLiquidity}(\n                address(this),\n                amountToLiquify,\n                0,\n                0,\n                autoLiquidityReceiver,\n                block.timestamp\n            );\n            baseTaxesAccumulated = balanceOf(address(this)).sub(sellingTaxAccumulated);\n            emit AutoLiquify(amountBNBLiquidity, amountToLiquify);\n        }\n    }\n\n    function shouldSwapBackSelling() internal view returns (bool) {\n        return msg.sender != pair\n        && !isPaused()\n        && !inSwap\n        && swapEnabled\n        && sellingTaxAccumulated >= sellingSwapThreshold;\n    }\n\n    /// @dev function to swap the token accumulated in extra selling taxes to go to asset pool\n    function swapBackSelling() internal swapping {\n \n        /// @dev set the path through which the contract exchanges the token to BNB\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = WBNB;\n \n        /// @dev exchange the token for BNB\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            sellingSwapThreshold,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        );\n\n        sellingTaxAccumulated = balanceOf(address(this)).sub(baseTaxesAccumulated);\n    }\n\n    function sendSwappedBNB(uint256 amountBNBMarketing, uint256 amountBNBReflection) internal {\n        /// @dev transfer the portion of taxes taken for rewards to the rewards pool\n        (bool rewardsTransferSuccess,) = address(rewardsPoolAddress).call{value: amountBNBReflection}(\"\");\n        require(rewardsTransferSuccess);\n \n        /// @dev tax on the marketing wallet going towards the contract generator platform\n        uint256 generatorAmount = amountBNBMarketing.mul(generatorFee).div(\n            feeDenominator\n        );\n        uint256 marketingAmount = amountBNBMarketing.sub(generatorAmount);\n \n        (bool marketingTransferSuccess,) = address(marketingFeeReceiver).call{value: marketingAmount}(\"\");\n        require(marketingTransferSuccess);\n        (bool generatorTransferSuccess,) = address(generatorFeeReceiver).call{value: generatorAmount}(\"\");\n        require(generatorTransferSuccess);\n    }\n \n    /// @dev set the transaction limit\n    function setTxLimit(uint256 amount) external authorized {\n        require(amount >= _totalSupply / 1000);\n        _maxTxAmount = amount;\n    }\n\n    /// @dev change the token the dividend distributor distributes. This can only be done before the dividend distributor starts its first distribution\n    function setDividendToken(address _dividendTokenAddress) external authorized {\n        require(dividendDistributor.neverDistributed() == true, 'Cannot change dividend token after the first distribution has started');\n        dividendDistributor.setDividendToken(_dividendTokenAddress);\n    }\n\n    /// @dev set the maximum sell fee that can be applied with a denominator of 10,000\n    function setMaxSellFeeDenominator10000(uint256 _maxSellFee) external authorized {\n        require(_maxSellFee <= 5000, \"Value too high\");\n        require(_maxSellFee >= totalFee, \"Value too low\");\n        maxSellFee = _maxSellFee;\n    }\n\n    /// @dev set the maximum sell multiplier that can be applied with a denominator of 10,000\n    function setMaxSellMultiplierDenominator10000(uint256 _maxSellMultiplier) external authorized {\n        require(_maxSellMultiplier <= 100000, \"Value too high\");\n        require(_maxSellMultiplier >= 10000, \"Value too low\");\n        maxSellMultiplier = _maxSellMultiplier;\n    }\n \n    /// @dev set whether an address is exempt from the reward\n    function setIsDividendExempt(address holder, bool exempt) external authorized {\n        require(holder != address(this) && holder != pair);\n        isDividendExempt[holder] = exempt;\n        if(exempt){\n            dividendDistributor.setShare(holder, 0);\n        }else{\n            dividendDistributor.setShare(holder, _balances[holder]);\n        }\n    }\n \n    /// @dev set whether an address is exempt from the fee\n    function setIsFeeExempt(address holder, bool exempt) external authorized {\n        isFeeExempt[holder] = exempt;\n    }\n \n    /// @dev set whether an address is exempt from the maximum transaction limit\n    function setIsTxLimitExempt(address holder, bool exempt) external authorized {\n        isTxLimitExempt[holder] = exempt;\n    }\n \n    /// @dev set the fees with a denominator of 10000\n    function setFeesWithDenominator10000(\n        uint256 _liquidityFee,\n        uint256 _rewardsFee,\n        uint256 _backingFee,\n        uint256 _marketingFee\n    ) external authorized {\n        liquidityFee = _liquidityFee;\n        rewardsFee = _rewardsFee;\n        backingFee = _backingFee;\n        marketingFee = _marketingFee;\n        totalFee = _liquidityFee.add(_rewardsFee).add(_backingFee).add(_marketingFee);\n        if(totalFee > maxSellFee) {\n            maxSellFee = totalFee;\n        }\n        require(totalFee < feeDenominator / 4);\n    }\n \n    /// @dev set the addresses that benefit from the marketing fee and those that receive the liquidity\n    function setFeeReceivers(address _autoLiquidityReceiver, address _marketingFeeReceiver) external authorized {\n        autoLiquidityReceiver = _autoLiquidityReceiver;\n        marketingFeeReceiver = _marketingFeeReceiver;\n    }\n \n    /// @dev set whether the contract can swap back its accumulated token into BNB and set the threshold for this\n    function setSwapBackSettings(bool _enabled, uint256 _amount, uint256 _sellingAmount) external authorized {\n        swapEnabled = _enabled;\n        swapThreshold = _amount;\n        sellingSwapThreshold = _sellingAmount;\n    }\n\n    /// @dev set the maximum amount of liquidity up to which taxes keep being sent to the pool\n    function setTargetLiquidity(uint256 _target, uint256 _denominator) external authorized {\n        targetLiquidity = _target;\n        targetLiquidityDenominator = _denominator;\n    }\n\n    /// @dev enable or disable the fee\n    function setFeeActive(bool setTakeFeeActive) external authorized {\n        takeFeeActive = setTakeFeeActive;\n    }\n \n    function setDistributionCriteria(uint256 _minDistribution) external authorized {\n        dividendDistributor.setDistributionCriteria(_minDistribution);\n    }\n \n    /// @dev get the token supply not stored in the burn wallets\n    function getCirculatingSupply() public view returns (uint256) {\n        return _totalSupply.sub(balanceOf(DEAD)).sub(balanceOf(ZERO));\n    }\n \n    /// @dev check whether too much of the token is in the liquidity pool\n    function isOverLiquified(uint256 target, uint256 accuracy) public view returns (bool) {\n        return accuracy.mul(balanceOf(pair).mul(2)).div(getCirculatingSupply()) > target;\n    }\n \n    /// @dev pay out a fraction of the BNB stored in the reward pool contract (RewardsPool)\n    function payoutFractionOfRewardsPool(uint256 numerator, uint256 denominator) external authorized {\n        uint256 rewardsPoolBalance = rewardsPoolAddress.balance;\n        uint256 toDistribute = rewardsPoolBalance.mul(numerator).div(denominator);\n        rewardsPool.transferBNBToAddress(dividendDistributorAddress, toDistribute);\n    }\n \n    /// @dev get amount of BNB stored in the asset pool (this contract)\n    function getAmountBNBInAssetPool() public view returns (uint256) {\n        return address(this).balance;\n    }\n \n    /// @dev get amount of BNB stored in the rewards pool (RewardsPool contract)\n    function getAmountBNBInRewardsPool() public view returns (uint256) {\n        return rewardsPoolAddress.balance;\n    }\n \n    function getDividendTokenAddress() public view returns (address) {\n        return dividendDistributor.viewDividendTokenAddress();\n    }\n\n    function lockAssetRewardPools(uint256 _numberOfDays) external onlyOwner {\n        assetPoolLockTimestamp = block.timestamp;\n        assetPoolLockTime = _numberOfDays.mul(1 days);\n    }\n\n    /// @dev necessary for contract upgrades. Can do at most every 10 days\n    function pauseContract(uint256 _numberOfDays) external onlyOwner {\n        require(block.timestamp >= pauseTimestamp + pauseTime + 10 days, \"Not enough days passed since last pause\");\n        require(_numberOfDays <= 2, \"Desired pause too long\");\n        pauseTimestamp = block.timestamp;\n        pauseTime = _numberOfDays.mul(1 days);\n    }\n\n    function isPaused() public view returns (bool) {\n        return block.timestamp < pauseTimestamp + pauseTime;\n    }\n\n    /// @dev exclude specific wallets from the pause\n    function excludeFromPause(address account) public authorized {\n        isExcludedFromPause[account] = true;\n    }\n\n    /// @dev include and address in the pause\n    function includeInPause(address account) public authorized {\n        require(isOwner(account) == false, \"ERR: owner can't be included\");\n        isExcludedFromPause[account] = false;\n    }\n\n\n    /// @dev necessary for contract upgrades\n    function moveAssetPool(address recipient) external onlyOwner {\n        require(block.timestamp >= assetPoolLockTimestamp + assetPoolLockTime, \"Asset pool currently locked\");\n        uint256 amountAssetPoolBNBToTransfer = address(this).balance;\n        (bool success,) = address(recipient).call{value: amountAssetPoolBNBToTransfer}(\"\");\n        require(success);\n    }\n\n    /// @dev necessary for contract upgrades\n    function moveRewardPool(address recipient) external onlyOwner {\n        require(block.timestamp >= assetPoolLockTimestamp + assetPoolLockTime, \"Rewards pool currently locked\");\n        uint256 rewardsPoolBalance = rewardsPoolAddress.balance;\n        rewardsPool.transferBNBToAddress(recipient, rewardsPoolBalance);\n    }\n \n    /// @dev allow holders to burn their token in exchange for BNB stored in the asset and rewards pool\n    function burnForBNB(uint256 amount) external returns (bool) {\n \n        address sender = msg.sender;\n        return _burnForBNB(sender, amount);\n    }\n \n    /// @dev function to process the sending of BNB to person burning the token\n    function _burnForBNB(address sender, uint256 amount) internal returns (bool) {\n        if(isPaused()){\n          require(isExcludedFromPause[sender] == true,\"WARNING: contract is in pause for upgrade\");\n        }\n        /// @dev calculate amount BNB to transfer to wallet burning the token\n        /// @dev this is done by taking the fraction of the circulating supply being burned and multiplying it with the BNB stored in the asset pool\n        uint256 amountBNBToTransfer = getAmountBNBInAssetPool().mul(amount).div(getCirculatingSupply());\n \n        address recipient = DEAD;\n        /// @dev if not enough token to burn then transaction will be reverted and BNB will not be sent\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n \n        /// @dev when sending BNB, first the BNB from the rewards pool is sent according to amount calculated\n        /// @dev if there is not enough BNB in the rewards pool then the rest is covered by BNB in the asset pool\n        /// @dev this ensurees that the floor price rises when a holder burns the token as the asset pool decreases at a slower rate than the token is burned\n        if(getAmountBNBInRewardsPool() >= amountBNBToTransfer) {\n            rewardsPool.transferBNBToAddress(sender, amountBNBToTransfer);\n        } else {\n            uint256 amountAssetPoolBNBToTransfer = amountBNBToTransfer.sub(getAmountBNBInRewardsPool());\n            rewardsPool.transferBNBToAddress(sender, getAmountBNBInRewardsPool());\n            (bool success,) = address(sender).call{value: amountAssetPoolBNBToTransfer}(\"\");\n            require(success);\n        }\n \n        /// @dev set the new share of the wallet burning the token\n        if(!isDividendExempt[sender]){ try dividendDistributor.setShare(sender, _balances[sender]) {} catch {} }\n \n        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n \n    event AutoLiquify(uint256 amountBNB, uint256 amountBOG);\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/test.sol": {
        "Auth": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isOwner",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "authorize(address)": "b6a5d7de",
              "isAuthorized(address)": "fe9fbb80",
              "isOwner(address)": "2f54bf6e",
              "transferOwnership(address)": "f2fde38b",
              "unauthorize(address)": "f0b37c04"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorize(address)\":{\"notice\":\"Authorize address. Owner only\"},\"isAuthorized(address)\":{\"notice\":\"Return address' authorization status\"},\"isOwner(address)\":{\"notice\":\"Check if address is owner\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership to new address. Caller must be owner. Leaves old owner authorized\"},\"unauthorize(address)\":{\"notice\":\"Remove address' authorization. Owner only\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"Auth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "DividendDistributor": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_router",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_rewardTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_rewardsPoolAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "dividendsPerShare",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dividendsPerShareAccuracyFactor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "shareholder",
                  "type": "address"
                }
              ],
              "name": "getUnpaidEarnings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isDistributing",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minDistribution",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "neverDistributed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "processDividend",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_minDistribution",
                  "type": "uint256"
                }
              ],
              "name": "setDistributionCriteria",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dividendTokenAddress",
                  "type": "address"
                }
              ],
              "name": "setDividendToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "shareholder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "setShare",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "shares",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalExcluded",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRealised",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalDistributed",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalDividends",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalShares",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "viewDividendTokenAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_559": {
                  "entryPoint": null,
                  "id": 559,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 659,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
                  "entryPoint": 682,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 613,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 581,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 576,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 633,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1511:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:1",
                            "type": ""
                          }
                        ],
                        "src": "7:75:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "411:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "400:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:1",
                            "type": ""
                          }
                        ],
                        "src": "334:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "511:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "521:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "550:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "532:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "532:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "521:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "493:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "503:7:1",
                            "type": ""
                          }
                        ],
                        "src": "466:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "611:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "668:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "677:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "680:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "670:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "670:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "670:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "634:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "659:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "641:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "641:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "631:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "631:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "621:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "604:5:1",
                            "type": ""
                          }
                        ],
                        "src": "568:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "759:80:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "769:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "784:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "778:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "778:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "769:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "800:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "800:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "737:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "745:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "753:5:1",
                            "type": ""
                          }
                        ],
                        "src": "696:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "956:552:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1002:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1004:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1004:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1004:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "977:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "986:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "973:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "973:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "998:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "969:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "969:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "966:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1095:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1110:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1124:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1114:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1139:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1185:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1196:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1181:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1181:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1205:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1149:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1149:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1139:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1233:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1248:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1262:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1252:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1278:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1324:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1335:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1320:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1320:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1344:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1288:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1288:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1278:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1372:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1387:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1401:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1391:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1417:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1463:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1474:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1459:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1459:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1483:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1427:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1427:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1417:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "910:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "921:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "933:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "941:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "949:6:1",
                            "type": ""
                          }
                        ],
                        "src": "845:663:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405273bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506ec097ce7bc90715b34b9f1000000000600c556000600d556001600f60016101000a81548160ff0219169083151502179055503480156200009957600080fd5b5060405162001f1538038062001f158339818101604052810190620000bf9190620002aa565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000110577310ed43c718714eb63d5aa57b78b54704e256024e62000112565b825b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600e819055506000600f60006101000a81548160ff02191690831515021790555050505062000306565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002728262000245565b9050919050565b620002848162000265565b81146200029057600080fd5b50565b600081519050620002a48162000279565b92915050565b600080600060608486031215620002c657620002c562000240565b5b6000620002d68682870162000293565b9350506020620002e98682870162000293565b9250506040620002fc8682870162000293565b9150509250925092565b611bff80620003166000396000f3fe6080604052600436106100ec5760003560e01c80637bf7d61b1161008a578063997664d711610059578063997664d7146106da578063ce7c2ac214610705578063e2d2e21914610744578063efca2eed1461076f57610504565b80637bf7d61b146106445780638bd2da9a1461066f57806394799d861461068657806398e5bfee146106b157610504565b806328fd3198116100c657806328fd3198146105865780633a98ef39146105c357806345153af8146105ee5780634fab0ae81461061957610504565b806311ce023d1461050957806314b6ca961461053457806320ffe2fd1461055d57610504565b3661050457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014b57600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101a891906114f1565b602060405180830381865afa1580156101c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e99190611547565b90506000600267ffffffffffffffff81111561020857610207611574565b5b6040519080825280602002602001820160405280156102365781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106102705761026f6115a3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106102e1576102e06115a3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6f9de953460008430426040518663ffffffff1660e01b815260040161037e94939291906116e4565b6000604051808303818588803b15801561039757600080fd5b505af11580156103ab573d6000803e3d6000fd5b5050505050600061046083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161041191906114f1565b602060405180830381865afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190611547565b61079a90919063ffffffff16565b9050610477816009546107b090919063ffffffff16565b6009819055506104ba6104a960085461049b84600c546107c690919063ffffffff16565b6107dc90919063ffffffff16565b600b546107b090919063ffffffff16565b600b81905550600e546010819055506001600f60006101000a81548160ff0219169083151502179055506000600f60016101000a81548160ff021916908315150217905550505050005b600080fd5b34801561051557600080fd5b5061051e6107f2565b60405161052b9190611730565b60405180910390f35b34801561054057600080fd5b5061055b6004803603810190610556919061178c565b6107f8565b005b34801561056957600080fd5b50610584600480360381019061057f91906117cc565b610ab7565b005b34801561059257600080fd5b506105ad60048036038101906105a891906117cc565b610ba9565b6040516105ba9190611730565b60405180910390f35b3480156105cf57600080fd5b506105d8610cc3565b6040516105e59190611730565b60405180910390f35b3480156105fa57600080fd5b50610603610cc9565b6040516106109190611814565b60405180910390f35b34801561062557600080fd5b5061062e610cdc565b60405161063b9190611730565b60405180910390f35b34801561065057600080fd5b50610659610ce2565b60405161066691906114f1565b60405180910390f35b34801561067b57600080fd5b50610684610d0c565b005b34801561069257600080fd5b5061069b610ead565b6040516106a89190611814565b60405180910390f35b3480156106bd57600080fd5b506106d860048036038101906106d3919061182f565b610ec0565b005b3480156106e657600080fd5b506106ef610f22565b6040516106fc9190611730565b60405180910390f35b34801561071157600080fd5b5061072c600480360381019061072791906117cc565b610f28565b60405161073b9392919061185c565b60405180910390f35b34801561075057600080fd5b50610759610f52565b6040516107669190611730565b60405180910390f35b34801561077b57600080fd5b50610784610f58565b6040516107919190611730565b60405180910390f35b600081836107a891906118c2565b905092915050565b600081836107be91906118f6565b905092915050565b600081836107d4919061194c565b905092915050565b600081836107ea91906119d5565b905092915050565b600c5481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461085057600080fd5b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156108a5576108a482610f5e565b5b6000811180156108f757506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b1561090a57610905826111b2565b61096c565b60008114801561095c57506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154115b1561096b5761096a82611261565b5b5b6109d5816109c7600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015460085461079a90919063ffffffff16565b6107b090919063ffffffff16565b60088190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550610a6d600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611468565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0f57600080fd5b60011515600f60019054906101000a900460ff16151514610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c90611aaf565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610bfe5760009050610cbe565b6000610c4b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611468565b90506000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050808211610ca657600092505050610cbe565b610cb9818361079a90919063ffffffff16565b925050505b919050565b60085481565b600f60009054906101000a900460ff1681565b600d5481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6457600080fd5b600060058054905090506000811415610d7d5750610eab565b60001515600f60009054906101000a900460ff1615151415610d9f5750610eab565b60005b6004811015610ea85781600e5410610dbd576000600e819055505b610e066005600e5481548110610dd657610dd56115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661149a565b15610e5557610e546005600e5481548110610e2457610e236115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f5e565b5b600e6000815480929190610e6890611acf565b91905055508080610e7890611acf565b915050601054600e541415610ea3576000600f60006101000a81548160ff0219169083151502179055505b610da2565b50505b565b600f60019054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f1857600080fd5b80600d8190555050565b60095481565b60076020528060005260406000206000915090508060000154908060010154908060020154905083565b600b5481565b600a5481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610fae576111af565b6000610fb982610ba9565b905060008111156111ad57610fd981600a546107b090919063ffffffff16565b600a81905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161103c929190611b18565b6020604051808303816000875af115801561105b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107f9190611b6d565b506110d581600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546107b090919063ffffffff16565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550611166600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611468565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b505b50565b600580549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6005600160058054905061127591906118c2565b81548110611286576112856115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110611304576113036115a3565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460066000600560016005805490506113a491906118c2565b815481106113b5576113b46115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060058054806114305761142f611b9a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b6000611493600c54611485600b54856107c690919063ffffffff16565b6107dc90919063ffffffff16565b9050919050565b6000600d546114a883610ba9565b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114db826114b0565b9050919050565b6114eb816114d0565b82525050565b600060208201905061150660008301846114e2565b92915050565b600080fd5b6000819050919050565b61152481611511565b811461152f57600080fd5b50565b6000815190506115418161151b565b92915050565b60006020828403121561155d5761155c61150c565b5b600061156b84828501611532565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6000819050919050565b60006116016115fc6115f7846115d2565b6115dc565b611511565b9050919050565b611611816115e6565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61164c816114d0565b82525050565b600061165e8383611643565b60208301905092915050565b6000602082019050919050565b600061168282611617565b61168c8185611622565b935061169783611633565b8060005b838110156116c85781516116af8882611652565b97506116ba8361166a565b92505060018101905061169b565b5085935050505092915050565b6116de81611511565b82525050565b60006080820190506116f96000830187611608565b818103602083015261170b8186611677565b905061171a60408301856114e2565b61172760608301846116d5565b95945050505050565b600060208201905061174560008301846116d5565b92915050565b611754816114d0565b811461175f57600080fd5b50565b6000813590506117718161174b565b92915050565b6000813590506117868161151b565b92915050565b600080604083850312156117a3576117a261150c565b5b60006117b185828601611762565b92505060206117c285828601611777565b9150509250929050565b6000602082840312156117e2576117e161150c565b5b60006117f084828501611762565b91505092915050565b60008115159050919050565b61180e816117f9565b82525050565b60006020820190506118296000830184611805565b92915050565b6000602082840312156118455761184461150c565b5b600061185384828501611777565b91505092915050565b600060608201905061187160008301866116d5565b61187e60208301856116d5565b61188b60408301846116d5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118cd82611511565b91506118d883611511565b9250828210156118eb576118ea611893565b5b828203905092915050565b600061190182611511565b915061190c83611511565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561194157611940611893565b5b828201905092915050565b600061195782611511565b915061196283611511565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561199b5761199a611893565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119e082611511565b91506119eb83611511565b9250826119fb576119fa6119a6565b5b828204905092915050565b600082825260208201905092915050565b7f43616e6e6f74206368616e6765206469766964656e6420746f6b656e2061667460008201527f65722074686520666972737420646973747269627574696f6e2068617320737460208201527f6172746564000000000000000000000000000000000000000000000000000000604082015250565b6000611a99604583611a06565b9150611aa482611a17565b606082019050919050565b60006020820190508181036000830152611ac881611a8c565b9050919050565b6000611ada82611511565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b0d57611b0c611893565b5b600182019050919050565b6000604082019050611b2d60008301856114e2565b611b3a60208301846116d5565b9392505050565b611b4a816117f9565b8114611b5557600080fd5b50565b600081519050611b6781611b41565b92915050565b600060208284031215611b8357611b8261150c565b5b6000611b9184828501611b58565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122034740ff4bda85b06c00bf54c8a9f9e3e049aacb674c838f7f9fb42e3e52c635264736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH1 0xC SSTORE PUSH1 0x0 PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0xF PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F15 CODESIZE SUB DUP1 PUSH3 0x1F15 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xBF SWAP2 SWAP1 PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x110 JUMPI PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E PUSH3 0x112 JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x306 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x272 DUP3 PUSH3 0x245 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x284 DUP2 PUSH3 0x265 JUMP JUMPDEST DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A4 DUP2 PUSH3 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2C5 PUSH3 0x240 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D6 DUP7 DUP3 DUP8 ADD PUSH3 0x293 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2E9 DUP7 DUP3 DUP8 ADD PUSH3 0x293 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2FC DUP7 DUP3 DUP8 ADD PUSH3 0x293 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1BFF DUP1 PUSH3 0x316 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF7D61B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x997664D7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x997664D7 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xCE7C2AC2 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0xE2D2E219 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xEFCA2EED EQ PUSH2 0x76F JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x7BF7D61B EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x8BD2DA9A EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x94799D86 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x98E5BFEE EQ PUSH2 0x6B1 JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x28FD3198 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x28FD3198 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x45153AF8 EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0x4FAB0AE8 EQ PUSH2 0x619 JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x11CE023D EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x14B6CA96 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x20FFE2FD EQ PUSH2 0x55D JUMPI PUSH2 0x504 JUMP JUMPDEST CALLDATASIZE PUSH2 0x504 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x236 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x270 JUMPI PUSH2 0x26F PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E1 JUMPI PUSH2 0x2E0 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6F9DE95 CALLVALUE PUSH1 0x0 DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0x460 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x477 DUP2 PUSH1 0x9 SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0x4BA PUSH2 0x4A9 PUSH1 0x8 SLOAD PUSH2 0x49B DUP5 PUSH1 0xC SLOAD PUSH2 0x7C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51E PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D8 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x603 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x684 PUSH2 0xD0C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69B PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EF PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x759 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x784 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x8A5 JUMPI PUSH2 0x8A4 DUP3 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x8F7 JUMPI POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x90A JUMPI PUSH2 0x905 DUP3 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 ISZERO PUSH2 0x95C JUMPI POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A DUP3 PUSH2 0x1261 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0x9C7 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA6D PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xF PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5C SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4B PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT PUSH2 0xCA6 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xCBE JUMP JUMPDEST PUSH2 0xCB9 DUP2 DUP4 PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xD7D JUMPI POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xD9F JUMPI POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xEA8 JUMPI DUP2 PUSH1 0xE SLOAD LT PUSH2 0xDBD JUMPI PUSH1 0x0 PUSH1 0xE DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xE06 PUSH1 0x5 PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xDD6 JUMPI PUSH2 0xDD5 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x149A JUMP JUMPDEST ISZERO PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH1 0x5 PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE68 SWAP1 PUSH2 0x1ACF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0xE78 SWAP1 PUSH2 0x1ACF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x10 SLOAD PUSH1 0xE SLOAD EQ ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xDA2 JUMP JUMPDEST POP POP JUMPDEST JUMP JUMPDEST PUSH1 0xF PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xFAE JUMPI PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 DUP3 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x11AD JUMPI PUSH2 0xFD9 DUP2 PUSH1 0xA SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103C SWAP3 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST POP PUSH2 0x10D5 DUP2 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1166 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1286 JUMPI PUSH2 0x1285 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1304 JUMPI PUSH2 0x1303 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x13A4 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x1430 JUMPI PUSH2 0x142F PUSH2 0x1B9A JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1493 PUSH1 0xC SLOAD PUSH2 0x1485 PUSH1 0xB SLOAD DUP6 PUSH2 0x7C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x14A8 DUP4 PUSH2 0xBA9 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DB DUP3 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EB DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1506 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1524 DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP2 EQ PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1541 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155D JUMPI PUSH2 0x155C PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156B DUP5 DUP3 DUP6 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1601 PUSH2 0x15FC PUSH2 0x15F7 DUP5 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x1511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x15E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164C DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165E DUP4 DUP4 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1682 DUP3 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x168C DUP2 DUP6 PUSH2 0x1622 JUMP JUMPDEST SWAP4 POP PUSH2 0x1697 DUP4 PUSH2 0x1633 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C8 JUMPI DUP2 MLOAD PUSH2 0x16AF DUP9 DUP3 PUSH2 0x1652 JUMP JUMPDEST SWAP8 POP PUSH2 0x16BA DUP4 PUSH2 0x166A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x169B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DE DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16F9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1608 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x170B DUP2 DUP7 PUSH2 0x1677 JUMP JUMPDEST SWAP1 POP PUSH2 0x171A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x1727 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1745 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1754 DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1771 DUP2 PUSH2 0x174B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1786 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F0 DUP5 DUP3 DUP6 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180E DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1829 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1805 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1853 DUP5 DUP3 DUP6 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1871 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x187E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x188B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18CD DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D8 DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x190C DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1957 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x1962 DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19E0 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EB DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x19A6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206368616E6765206469766964656E6420746F6B656E20616674 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65722074686520666972737420646973747269627574696F6E20686173207374 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6172746564000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A99 PUSH1 0x45 DUP4 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA4 DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC8 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADA DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1B0D JUMPI PUSH2 0x1B0C PUSH2 0x1893 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B2D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x1B3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B4A DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B67 DUP2 PUSH2 0x1B41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B83 JUMPI PUSH2 0x1B82 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B91 DUP5 DUP3 DUP6 ADD PUSH2 0x1B58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH21 0xFF4BDA85B06C00BF54C8A9F9E3E049AACB674C838 0xF7 0xF9 0xFB TIMESTAMP 0xE3 0xE5 0x2C PUSH4 0x5264736F PUSH13 0x634300080B0033000000000000 ",
              "sourceMap": "4712:6080:0:-:0;;;5007:42;4992:57;;;;;;;;;;;;;;;;;;;;5402:8;5353:57;;5449:1;5416:34;;5549:4;5518:35;;;;;;;;;;;;;;;;;;;;5886:414;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6012:1;5993:21;;:7;:21;;;;:116;;6066:42;5993:116;;;6036:7;5993:116;5984:6;;:125;;;;;;;;;;;;;;;;;;6128:10;6119:6;;:19;;;;;;;;;;;;;;;;;;6163;6148:12;;:34;;;;;;;;;;;;;;;;;;6215:19;6192:13;;:43;;;;;;;;;;;;;;;;;;6260:1;6245:12;:16;;;;6288:5;6271:14;;:22;;;;;;;;;;;;;;;;;;5886:414;;;4712:6080;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;4712:6080:0:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_784": {
                  "entryPoint": null,
                  "id": 784,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@addShareholder_1014": {
                  "entryPoint": 4530,
                  "id": 1014,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@add_16": {
                  "entryPoint": 1968,
                  "id": 16,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@distributeDividend_933": {
                  "entryPoint": 3934,
                  "id": 933,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@div_58": {
                  "entryPoint": 2012,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@dividendsPerShareAccuracyFactor_461": {
                  "entryPoint": 2034,
                  "id": 461,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@dividendsPerShare_456": {
                  "entryPoint": 3922,
                  "id": 456,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getCumulativeDividends_995": {
                  "entryPoint": 5224,
                  "id": 995,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getUnpaidEarnings_979": {
                  "entryPoint": 2985,
                  "id": 979,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isDistributing_468": {
                  "entryPoint": 3273,
                  "id": 468,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@minDistribution_464": {
                  "entryPoint": 3292,
                  "id": 464,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@mul_44": {
                  "entryPoint": 1990,
                  "id": 44,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@neverDistributed_471": {
                  "entryPoint": 3757,
                  "id": 471,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@processDividend_854": {
                  "entryPoint": 3340,
                  "id": 854,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@removeShareholder_1051": {
                  "entryPoint": 4705,
                  "id": 1051,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setDistributionCriteria_572": {
                  "entryPoint": 3776,
                  "id": 572,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setDividendToken_681": {
                  "entryPoint": 2743,
                  "id": 681,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setShare_659": {
                  "entryPoint": 2040,
                  "id": 659,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@shares_448": {
                  "entryPoint": 3880,
                  "id": 448,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@shouldDistribute_868": {
                  "entryPoint": 5274,
                  "id": 868,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@sub_30": {
                  "entryPoint": 1946,
                  "id": 30,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@totalDistributed_454": {
                  "entryPoint": 3928,
                  "id": 454,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalDividends_452": {
                  "entryPoint": 3874,
                  "id": 452,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@totalShares_450": {
                  "entryPoint": 3267,
                  "id": 450,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@viewDividendTokenAddress_1063": {
                  "entryPoint": 3298,
                  "id": 1063,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_t_address": {
                  "entryPoint": 5986,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 7000,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 6007,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 5426,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 6092,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 6028,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 7021,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 6191,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 5447,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_t_address_to_t_address": {
                  "entryPoint": 5714,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_to_t_address": {
                  "entryPoint": 5699,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 5346,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 5751,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 6149,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
                  "entryPoint": 5640,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 6796,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 5845,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 5361,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 6936,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 6164,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 5860,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 6831,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 5936,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": 6236,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 5683,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 5655,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 5738,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 5666,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 6662,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 6390,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 6613,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 6476,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 6338,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 5328,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 6137,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_0_by_1": {
                  "entryPoint": 5586,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 5296,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 5393,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_0_by_1_to_t_uint256": {
                  "entryPoint": 5606,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": 5596,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 6863,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 6291,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 6566,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x31": {
                  "entryPoint": 7066,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 5539,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 5492,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 5388,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475": {
                  "entryPoint": 6679,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 5963,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_bool": {
                  "entryPoint": 6977,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 5403,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:11710:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "77:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "84:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "73:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "62:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "44:7:1",
                            "type": ""
                          }
                        ],
                        "src": "7:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "184:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "194:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "223:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "205:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "205:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "166:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "176:7:1",
                            "type": ""
                          }
                        ],
                        "src": "139:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "306:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "323:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "346:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "316:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "316:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "316:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "294:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "301:3:1",
                            "type": ""
                          }
                        ],
                        "src": "241:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "463:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "473:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "485:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "496:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "553:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "566:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "577:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "562:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "509:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "509:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "509:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "435:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "447:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "458:4:1",
                            "type": ""
                          }
                        ],
                        "src": "365:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "633:35:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "643:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "659:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "653:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "653:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "643:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "626:6:1",
                            "type": ""
                          }
                        ],
                        "src": "593:75:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "763:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "780:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "783:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "773:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "773:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "773:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "674:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "886:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "903:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "906:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "896:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "896:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "896:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "797:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "965:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "975:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "986:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "975:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "947:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "957:7:1",
                            "type": ""
                          }
                        ],
                        "src": "920:77:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1046:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1103:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1112:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1115:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1105:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1105:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1105:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1069:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1094:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "1076:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1076:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1066:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1066:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1059:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1059:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1056:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1039:5:1",
                            "type": ""
                          }
                        ],
                        "src": "1003:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1194:80:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1204:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1219:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1213:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1213:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1204:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1262:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1235:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1235:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1235:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1172:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1180:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1188:5:1",
                            "type": ""
                          }
                        ],
                        "src": "1131:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1357:274:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1403:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1405:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1405:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1405:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1378:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1387:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1374:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1374:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1399:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1370:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1370:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1367:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1496:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1511:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1525:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1515:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1540:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1586:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1597:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1582:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1582:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1606:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1550:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1550:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1540:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1327:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1338:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1350:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1280:351:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1665:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1682:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1685:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1675:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1675:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1675:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1779:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1782:4:1",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1772:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1772:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1772:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1803:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1806:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1796:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1796:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1796:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1637:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1851:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1868:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1871:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1861:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1861:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1861:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1965:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1968:4:1",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1958:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1958:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1958:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1989:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1992:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1982:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1982:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1982:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1823:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2062:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2072:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2083:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2072:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_rational_0_by_1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2044:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2054:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2009:85:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2132:28:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2142:12:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2149:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "2142:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "identity",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2118:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "2128:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2100:60:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2234:90:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2244:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2310:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_rational_0_by_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2284:25:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2284:32:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nodeType": "YulIdentifier",
                                      "src": "2275:8:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2275:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2257:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2257:61:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "2244:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_rational_0_by_1_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2214:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "2224:9:1",
                            "type": ""
                          }
                        ],
                        "src": "2166:158:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2403:74:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2420:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2464:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_rational_0_by_1_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2425:38:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2425:45:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2413:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2413:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2413:58:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2391:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2398:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2330:147:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2557:40:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2568:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2584:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2578:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2578:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2568:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2540:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2550:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2483:114:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2714:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2731:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2736:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2724:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2724:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2724:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2752:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2771:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2776:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2767:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2767:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2752:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2686:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2691:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "2702:11:1",
                            "type": ""
                          }
                        ],
                        "src": "2603:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2865:60:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2875:11:1",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "2883:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "2875:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2896:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2908:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2913:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2904:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2904:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "2896:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "2852:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "2860:4:1",
                            "type": ""
                          }
                        ],
                        "src": "2793:132:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2986:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3003:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3026:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3008:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3008:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2996:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2996:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2996:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2974:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2981:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2931:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3125:99:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3169:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3177:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3135:33:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3135:46:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3135:46:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3190:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3208:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3213:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3204:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3204:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3190:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3098:6:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3106:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "3114:10:1",
                            "type": ""
                          }
                        ],
                        "src": "3045:179:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3305:38:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3315:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3327:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3332:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3323:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3323:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "3315:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "3292:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "3300:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3230:113:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3503:608:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3513:68:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3575:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3527:47:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3527:54:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3517:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3590:93:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3671:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3676:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3597:73:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3597:86:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3590:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3692:71:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3757:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3707:49:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3707:56:1"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "3696:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3772:21:1",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "3786:7:1"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3776:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3862:224:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3876:34:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3903:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "3897:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3897:13:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "3880:13:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3923:70:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3974:13:1"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "3989:3:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "3930:43:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3930:63:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3923:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4006:70:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "4069:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4016:52:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4016:60:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4006:6:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3824:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3827:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3821:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3821:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3835:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3837:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3846:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3849:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3842:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3842:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3837:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3806:14:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3808:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3817:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "3812:1:1",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "3802:284:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4095:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4102:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4095:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3482:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3489:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3498:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3379:732:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4182:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4199:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4222:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4204:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4204:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4192:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4192:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4192:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4170:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4177:3:1",
                            "type": ""
                          }
                        ],
                        "src": "4117:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4481:480:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4491:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4503:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4514:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4499:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4499:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4491:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4580:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4593:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4604:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4589:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4589:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4528:51:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4528:79:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4528:79:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4628:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4639:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4624:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4624:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "4648:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4654:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4644:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4644:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4617:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4617:48:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4617:48:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4674:116:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4776:6:1"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "4785:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4682:93:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4682:108:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4674:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4844:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4857:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4868:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4853:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4853:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4800:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4800:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4800:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4926:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4939:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4950:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4935:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4935:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4882:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4882:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4882:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4429:9:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4441:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4449:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4457:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4465:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4476:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4241:720:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5065:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5075:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5087:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5098:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5083:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5083:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5075:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5155:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5168:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5179:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5164:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5164:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5111:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5111:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5111:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5037:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5049:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5060:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4967:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5238:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5295:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5304:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5307:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5297:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5297:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5297:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5261:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5286:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "5268:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5268:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5258:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5258:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5251:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5251:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5248:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5231:5:1",
                            "type": ""
                          }
                        ],
                        "src": "5195:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5375:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5385:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5407:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5394:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5394:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5385:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5450:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5423:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5423:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5423:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5353:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5361:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5369:5:1",
                            "type": ""
                          }
                        ],
                        "src": "5323:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5520:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5530:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5552:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5539:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5539:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5530:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5595:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "5568:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5568:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5568:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "5498:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5506:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5514:5:1",
                            "type": ""
                          }
                        ],
                        "src": "5468:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5696:391:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5742:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "5744:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5744:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5744:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5717:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5726:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5713:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5713:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5738:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5709:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5709:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5706:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5835:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5850:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5864:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5854:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5879:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5914:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5925:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5910:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5910:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5934:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5889:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5889:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5879:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5962:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5977:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5991:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5981:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6007:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6042:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6053:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6038:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6038:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6062:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6017:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6017:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6007:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5658:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5669:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5681:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5689:6:1",
                            "type": ""
                          }
                        ],
                        "src": "5613:474:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6159:263:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6205:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "6207:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6207:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6207:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6180:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6189:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6176:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6176:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6201:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6172:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6172:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6169:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6298:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6313:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6327:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6317:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6342:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6377:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6388:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6373:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6373:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6397:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6352:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6352:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "6342:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6129:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6140:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6152:6:1",
                            "type": ""
                          }
                        ],
                        "src": "6093:329:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6470:48:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6480:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6505:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6498:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6498:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6491:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6491:21:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6480:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6452:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6462:7:1",
                            "type": ""
                          }
                        ],
                        "src": "6428:90:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6583:50:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6600:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6620:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "6605:14:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6605:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6593:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6593:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6593:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6571:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6578:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6524:109:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6731:118:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6741:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6753:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6764:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6749:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6749:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6741:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6815:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6828:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6839:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6824:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6824:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6777:37:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6777:65:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6777:65:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6703:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6715:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6726:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6639:210:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6921:263:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6967:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "6969:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6969:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6969:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6942:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6951:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6938:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6938:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6963:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6934:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6934:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6931:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7060:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7075:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7089:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7079:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7104:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7139:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7150:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7135:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7135:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7159:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7114:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7114:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "7104:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6891:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6902:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6914:6:1",
                            "type": ""
                          }
                        ],
                        "src": "6855:329:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7344:288:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7354:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7366:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7377:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7362:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7362:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7354:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7434:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7447:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7458:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7443:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7443:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7390:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7390:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7390:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7515:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7528:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7539:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7524:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7524:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7471:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7471:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7471:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7597:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7610:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7621:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7606:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7606:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7553:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7553:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7553:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7300:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7312:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7320:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7328:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7339:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7190:442:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7666:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7683:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7686:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7676:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7676:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7676:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7780:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7783:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7773:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7773:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7773:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7804:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7807:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7797:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7797:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7797:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7638:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7869:146:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7879:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7902:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "7884:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7884:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "7879:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7913:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7936:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "7918:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7918:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "7913:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7960:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7962:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7962:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7962:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7954:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7957:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7951:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7951:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "7948:34:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7992:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8004:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8007:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8000:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8000:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "7992:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7855:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7858:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "7864:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7824:191:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8065:261:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8075:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8098:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8080:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8080:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "8075:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8109:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8132:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8114:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8114:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "8109:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8272:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8274:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8274:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8274:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8193:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8200:66:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "8268:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8196:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8196:74:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8190:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8190:81:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8187:107:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8304:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8315:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8318:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8311:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8311:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "8304:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8052:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8055:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "8061:3:1",
                            "type": ""
                          }
                        ],
                        "src": "8021:305:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8380:300:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8390:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8413:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8395:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8395:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "8390:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8424:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8447:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8429:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8429:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "8424:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8622:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "8624:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8624:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8624:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "8534:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "8527:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8527:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "8520:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8520:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "8542:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8549:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "8617:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "8545:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8545:74:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8539:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8539:81:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "8516:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8516:105:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8513:131:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8654:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8669:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8672:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "8665:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8665:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "8654:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8363:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8366:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "8372:7:1",
                            "type": ""
                          }
                        ],
                        "src": "8332:348:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8714:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8731:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8734:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8724:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8724:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8724:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8828:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8831:4:1",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8821:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8821:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8821:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8852:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8855:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8845:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8845:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8845:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "8686:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8914:143:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8924:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8947:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8929:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8929:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "8924:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8958:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "8981:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8963:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8963:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "8958:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9005:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9007:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9007:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9007:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9002:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8995:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8995:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8992:35:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9037:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "9046:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9049:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "9042:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9042:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "9037:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "8903:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "8906:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "8912:1:1",
                            "type": ""
                          }
                        ],
                        "src": "8872:185:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9159:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9176:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9181:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9169:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9169:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9169:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9197:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9216:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9221:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9212:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9212:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9197:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9131:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "9136:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "9147:11:1",
                            "type": ""
                          }
                        ],
                        "src": "9063:169:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9344:187:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9366:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9374:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9362:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9362:14:1"
                                  },
                                  {
                                    "hexValue": "43616e6e6f74206368616e6765206469766964656e6420746f6b656e20616674",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9378:34:1",
                                    "type": "",
                                    "value": "Cannot change dividend token aft"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9355:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9355:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9355:58:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9434:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9442:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9430:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9430:15:1"
                                  },
                                  {
                                    "hexValue": "65722074686520666972737420646973747269627574696f6e20686173207374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9447:34:1",
                                    "type": "",
                                    "value": "er the first distribution has st"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9423:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9423:59:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9423:59:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9503:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9511:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9499:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9499:15:1"
                                  },
                                  {
                                    "hexValue": "6172746564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9516:7:1",
                                    "type": "",
                                    "value": "arted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9492:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9492:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9492:32:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "9336:6:1",
                            "type": ""
                          }
                        ],
                        "src": "9238:293:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9683:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9693:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9759:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9764:2:1",
                                    "type": "",
                                    "value": "69"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9700:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9700:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9693:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9865:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                                  "nodeType": "YulIdentifier",
                                  "src": "9776:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9776:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9776:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9878:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9889:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9894:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9885:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9885:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9878:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9671:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9679:3:1",
                            "type": ""
                          }
                        ],
                        "src": "9537:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10080:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10090:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10102:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10113:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10098:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10098:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10090:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10137:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10148:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10133:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10133:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "10156:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10162:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10152:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10152:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10126:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10126:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10126:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10182:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10316:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10190:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10190:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10182:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10060:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10075:4:1",
                            "type": ""
                          }
                        ],
                        "src": "9909:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10377:190:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10387:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10414:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "10396:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10396:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "10387:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10510:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "10512:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10512:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10512:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10435:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10442:66:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "10432:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10432:77:1"
                              },
                              "nodeType": "YulIf",
                              "src": "10429:103:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10541:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10552:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10559:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10548:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10548:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "10541:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10363:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "10373:3:1",
                            "type": ""
                          }
                        ],
                        "src": "10334:233:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10699:206:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10709:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10721:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10732:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10717:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10717:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10709:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10789:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10802:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10813:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10798:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10798:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10745:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10745:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10745:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10870:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10883:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10894:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10879:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10879:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10826:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10826:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10826:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10663:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10675:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10683:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10694:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10573:332:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10951:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11005:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11014:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11017:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "11007:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11007:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11007:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "10974:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "10996:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "10981:14:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10981:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "10971:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10971:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "10964:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10964:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "10961:60:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10944:5:1",
                            "type": ""
                          }
                        ],
                        "src": "10911:116:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11093:77:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11103:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "11118:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11112:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11112:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "11103:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11158:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "11134:23:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11134:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11134:30:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "11071:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11079:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11087:5:1",
                            "type": ""
                          }
                        ],
                        "src": "11033:137:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11250:271:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11296:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "11298:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11298:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11298:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11271:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11280:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11267:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11267:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11292:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11263:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11263:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "11260:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "11389:125:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "11404:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11418:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "11408:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11433:71:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "11476:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "11487:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11472:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11472:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11496:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "11443:28:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11443:61:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11433:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11220:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "11231:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11243:6:1",
                            "type": ""
                          }
                        ],
                        "src": "11176:345:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11555:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11572:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11575:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11565:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11565:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11565:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11669:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11672:4:1",
                                    "type": "",
                                    "value": "0x31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11662:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11662:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11662:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11693:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11696:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11686:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11686:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11686:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x31",
                        "nodeType": "YulFunctionDefinition",
                        "src": "11527:180:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot change dividend token aft\")\n\n        mstore(add(memPtr, 32), \"er the first distribution has st\")\n\n        mstore(add(memPtr, 64), \"arted\")\n\n    }\n\n    function abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 69)\n        store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF7D61B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x997664D7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x997664D7 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xCE7C2AC2 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0xE2D2E219 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xEFCA2EED EQ PUSH2 0x76F JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x7BF7D61B EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x8BD2DA9A EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x94799D86 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x98E5BFEE EQ PUSH2 0x6B1 JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x28FD3198 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x28FD3198 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x45153AF8 EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0x4FAB0AE8 EQ PUSH2 0x619 JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x11CE023D EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x14B6CA96 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x20FFE2FD EQ PUSH2 0x55D JUMPI PUSH2 0x504 JUMP JUMPDEST CALLDATASIZE PUSH2 0x504 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x236 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x270 JUMPI PUSH2 0x26F PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E1 JUMPI PUSH2 0x2E0 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6F9DE95 CALLVALUE PUSH1 0x0 DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0x460 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x477 DUP2 PUSH1 0x9 SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0x4BA PUSH2 0x4A9 PUSH1 0x8 SLOAD PUSH2 0x49B DUP5 PUSH1 0xC SLOAD PUSH2 0x7C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51E PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D8 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x603 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x684 PUSH2 0xD0C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69B PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EF PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x759 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x784 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x8A5 JUMPI PUSH2 0x8A4 DUP3 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x8F7 JUMPI POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x90A JUMPI PUSH2 0x905 DUP3 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 ISZERO PUSH2 0x95C JUMPI POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A DUP3 PUSH2 0x1261 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0x9C7 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA6D PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xF PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5C SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4B PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT PUSH2 0xCA6 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xCBE JUMP JUMPDEST PUSH2 0xCB9 DUP2 DUP4 PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xD7D JUMPI POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xD9F JUMPI POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xEA8 JUMPI DUP2 PUSH1 0xE SLOAD LT PUSH2 0xDBD JUMPI PUSH1 0x0 PUSH1 0xE DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xE06 PUSH1 0x5 PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xDD6 JUMPI PUSH2 0xDD5 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x149A JUMP JUMPDEST ISZERO PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH1 0x5 PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE68 SWAP1 PUSH2 0x1ACF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0xE78 SWAP1 PUSH2 0x1ACF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x10 SLOAD PUSH1 0xE SLOAD EQ ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xDA2 JUMP JUMPDEST POP POP JUMPDEST JUMP JUMPDEST PUSH1 0xF PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xFAE JUMPI PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 DUP3 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x11AD JUMPI PUSH2 0xFD9 DUP2 PUSH1 0xA SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103C SWAP3 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST POP PUSH2 0x10D5 DUP2 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1166 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1286 JUMPI PUSH2 0x1285 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1304 JUMPI PUSH2 0x1303 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x13A4 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x1430 JUMPI PUSH2 0x142F PUSH2 0x1B9A JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1493 PUSH1 0xC SLOAD PUSH2 0x1485 PUSH1 0xB SLOAD DUP6 PUSH2 0x7C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x14A8 DUP4 PUSH2 0xBA9 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DB DUP3 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EB DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1506 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1524 DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP2 EQ PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1541 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155D JUMPI PUSH2 0x155C PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156B DUP5 DUP3 DUP6 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1601 PUSH2 0x15FC PUSH2 0x15F7 DUP5 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x1511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x15E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164C DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165E DUP4 DUP4 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1682 DUP3 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x168C DUP2 DUP6 PUSH2 0x1622 JUMP JUMPDEST SWAP4 POP PUSH2 0x1697 DUP4 PUSH2 0x1633 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C8 JUMPI DUP2 MLOAD PUSH2 0x16AF DUP9 DUP3 PUSH2 0x1652 JUMP JUMPDEST SWAP8 POP PUSH2 0x16BA DUP4 PUSH2 0x166A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x169B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DE DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16F9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1608 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x170B DUP2 DUP7 PUSH2 0x1677 JUMP JUMPDEST SWAP1 POP PUSH2 0x171A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x1727 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1745 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1754 DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1771 DUP2 PUSH2 0x174B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1786 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F0 DUP5 DUP3 DUP6 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180E DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1829 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1805 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1853 DUP5 DUP3 DUP6 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1871 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x187E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x188B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18CD DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D8 DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x190C DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1957 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x1962 DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19E0 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EB DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x19A6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206368616E6765206469766964656E6420746F6B656E20616674 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65722074686520666972737420646973747269627574696F6E20686173207374 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6172746564000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A99 PUSH1 0x45 DUP4 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA4 DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC8 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADA DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1B0D JUMPI PUSH2 0x1B0C PUSH2 0x1893 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B2D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x1B3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B4A DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B67 DUP2 PUSH2 0x1B41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B83 JUMPI PUSH2 0x1B82 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B91 DUP5 DUP3 DUP6 ADD PUSH2 0x1B58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH21 0xFF4BDA85B06C00BF54C8A9F9E3E049AACB674C838 0xF7 0xF9 0xFB TIMESTAMP 0xE3 0xE5 0x2C PUSH4 0x5264736F PUSH13 0x634300080B0033000000000000 ",
              "sourceMap": "4712:6080:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5856:12;;;;;;;;;;;5842:26;;:10;:26;;;5834:35;;;;;;7413:21:::1;7437:13;;;;;;;;;;;:23;;;7469:4;7437:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7413:62;;7487:21;7525:1;7511:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7487:40;;7547:4;;;;;;;;;;;7537;7542:1;7537:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;::::0;::::1;7579:13;;;;;;;;;;;7561:4;7566:1;7561:7;;;;;;;;:::i;:::-;;;;;;;:32;;;;;;;;;::::0;::::1;7605:6;;;;;;;;;;;:57;;;7670:9;7694:1;7709:4;7735;7754:15;7605:174;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;7791:14;7808:57;7851:13;7808;;;;;;;;;;;:23;;;7840:4;7808:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;:57;;;;:::i;:::-;7791:74;;7894:26;7913:6;7894:14;;:18;;:26;;;;:::i;:::-;7877:14;:43;;;;7950:83;7972:60;8020:11;;7972:43;8008:6;7972:31;;:35;;:43;;;;:::i;:::-;:47;;:60;;;;:::i;:::-;7950:17;;:21;;:83;;;;:::i;:::-;7930:17;:103;;;;8061:12;;8045:13;:28;;;;8100:4;8083:14;;:21;;;;;;;;;;;;;;;;;;8133:5;8114:16;;:24;;;;;;;;;;;;;;;;;;7403:742;;;4712:6080:::0;;;;;5353:57;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6452:632;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7090:263;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9537:473;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5211:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5486;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5416:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10654:136;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8152:690;;;;;;;;;;;;;:::i;:::-;;5518:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6307:138;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5243:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5163:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5315:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5278:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:96;315:7;345:1;341;:5;;;;:::i;:::-;334:12;;257:96;;;;:::o;154:::-;212:7;242:1;238;:5;;;;:::i;:::-;231:12;;154:96;;;;:::o;360:::-;418:7;448:1;444;:5;;;;:::i;:::-;437:12;;360:96;;;;:::o;463:::-;521:7;551:1;547;:5;;;;:::i;:::-;540:12;;463:96;;;;:::o;5353:57::-;;;;:::o;6452:632::-;5773:6;;;;;;;;;;5759:20;;:10;:20;;;5751:29;;;;;;6577:1:::1;6548:6;:19;6555:11;6548:19;;;;;;;;;;;;;;;:26;;;:30;6545:90;;;6593:31;6612:11;6593:18;:31::i;:::-;6545:90;6658:1;6649:6;:10;:45;;;;;6693:1;6663:6;:19;6670:11;6663:19;;;;;;;;;;;;;;;:26;;;:31;6649:45;6646:210;;;6709:27;6724:11;6709:14;:27::i;:::-;6646:210;;;6765:1;6755:6;:11;:45;;;;;6799:1;6770:6;:19;6777:11;6770:19;;;;;;;;;;;;;;;:26;;;:30;6755:45;6752:104;;;6815:30;6833:11;6815:17;:30::i;:::-;6752:104;6646:210;6881:55;6929:6;6881:43;6897:6;:19;6904:11;6897:19;;;;;;;;;;;;;;;:26;;;6881:11;;:15;;:43;;;;:::i;:::-;:47;;:55;;;;:::i;:::-;6867:11;:69;;;;6975:6;6946;:19;6953:11;6946:19;;;;;;;;;;;;;;;:26;;:35;;;;7027:50;7050:6;:19;7057:11;7050:19;;;;;;;;;;;;;;;:26;;;7027:22;:50::i;:::-;6991:6;:19;6998:11;6991:19;;;;;;;;;;;;;;;:33;;:86;;;;6452:632:::0;;:::o;7090:263::-;5773:6;;;;;;;;;;5759:20;;:10;:20;;;5751:29;;;;;;7213:4:::1;7193:24;;:16;;;;;;;;;;;:24;;;7185:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;7324:21;7301:13;;:45;;;;;;;;;;;;;;;;;;7090:263:::0;:::o;9537:473::-;9606:7;9658:1;9628:6;:19;9635:11;9628:19;;;;;;;;;;;;;;;:26;;;:31;9625:48;;;9669:1;9662:8;;;;9625:48;9684:33;9720:50;9743:6;:19;9750:11;9743:19;;;;;;;;;;;;;;;:26;;;9720:22;:50::i;:::-;9684:86;;9780:32;9815:6;:19;9822:11;9815:19;;;;;;;;;;;;;;;:33;;;9780:68;;9892:24;9863:25;:53;9860:70;;9926:1;9919:8;;;;;;9860:70;9948:55;9978:24;9948:25;:29;;:55;;;;:::i;:::-;9941:62;;;;9537:473;;;;:::o;5211:26::-;;;;:::o;5486:::-;;;;;;;;;;;;;:::o;5416:34::-;;;;:::o;10654:136::-;10722:20;10769:13;;;;;;;;;;;10754:29;;10654:136;:::o;8152:690::-;5773:6;;;;;;;;;;5759:20;;:10;:20;;;5751:29;;;;;;8217:24:::1;8244:12;:19;;;;8217:46;;8298:1;8278:16;:21;8275:37;;;8303:7;;;8275:37;8342:5;8324:23;;:14;;;;;;;;;;;:23;;;8321:39;;;8351:7;;;8321:39;8371:18;8405:431;8424:1;8411:10;:14;8405:431;;;8460:16;8444:12;;:32;8441:85;;8510:1;8495:12;:16;;;;8441:85;8544:44;8561:12;8574;;8561:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8544:16;:44::i;:::-;8541:127;;;8607:46;8626:12;8639;;8626:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8607:18;:46::i;:::-;8541:127;8683:12;;:14;;;;;;;;;:::i;:::-;;;;;;8711:12;;;;;:::i;:::-;;;;8756:13;;8740:12;;:29;8737:89;;;8806:5;8789:14;;:22;;;;;;;;;;;;;;;;;;8737:89;8405:431;;;8207:635;;5782:1;8152:690::o:0;5518:35::-;;;;;;;;;;;;;:::o;6307:138::-;5773:6;;;;;;;;;;5759:20;;:10;:20;;;5751:29;;;;;;6422:16:::1;6404:15;:34;;;;6307:138:::0;:::o;5243:29::-;;;;:::o;5163:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5315:32::-;;;;:::o;5278:31::-;;;;:::o;9004:526::-;9105:1;9075:6;:19;9082:11;9075:19;;;;;;;;;;;;;;;:26;;;:31;9072:46;;;9109:7;;9072:46;9129:14;9146:30;9164:11;9146:17;:30::i;:::-;9129:47;;9198:1;9189:6;:10;9186:338;;;9233:28;9254:6;9233:16;;:20;;:28;;;;:::i;:::-;9214:16;:47;;;;9275:13;;;;;;;;;;;:22;;;9298:11;9311:6;9275:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9368:45;9406:6;9368;:19;9375:11;9368:19;;;;;;;;;;;;;;;:33;;;:37;;:45;;;;:::i;:::-;9332:6;:19;9339:11;9332:19;;;;;;;;;;;;;;;:33;;:81;;;;9463:50;9486:6;:19;9493:11;9486:19;;;;;;;;;;;;;;;:26;;;9463:22;:50::i;:::-;9427:6;:19;9434:11;9427:19;;;;;;;;;;;;;;;:33;;:86;;;;9186:338;9062:468;9004:526;;:::o;10192:164::-;10290:12;:19;;;;10256:18;:31;10275:11;10256:31;;;;;;;;;;;;;;;:53;;;;10319:12;10337:11;10319:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10192:164;:::o;10363:284::-;10478:12;10511:1;10491:12;:19;;;;:21;;;;:::i;:::-;10478:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10430:12;10443:18;:31;10462:11;10443:31;;;;;;;;;;;;;;;;10430:45;;;;;;;;:::i;:::-;;;;;;;;;;:83;;;;;;;;;;;;;;;;;;10581:18;:31;10600:11;10581:31;;;;;;;;;;;;;;;;10523:18;:55;10542:12;10575:1;10555:12;:19;;;;:21;;;;:::i;:::-;10542:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10523:55;;;;;;;;;;;;;;;:89;;;;10622:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;10363:284;:::o;10017:168::-;10087:7;10113:65;10146:31;;10113:28;10123:17;;10113:5;:9;;:28;;;;:::i;:::-;:32;;:65;;;;:::i;:::-;10106:72;;10017:168;;;:::o;8849:148::-;8919:4;8975:15;;8942:30;8960:11;8942:17;:30::i;:::-;:48;8935:55;;8849:148;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:143::-;1188:5;1219:6;1213:13;1204:22;;1235:33;1262:5;1235:33;:::i;:::-;1131:143;;;;:::o;1280:351::-;1350:6;1399:2;1387:9;1378:7;1374:23;1370:32;1367:119;;;1405:79;;:::i;:::-;1367:119;1525:1;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1496:128;1280:351;;;;:::o;1637:180::-;1685:77;1682:1;1675:88;1782:4;1779:1;1772:15;1806:4;1803:1;1796:15;1823:180;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:85;2054:7;2083:5;2072:16;;2009:85;;;:::o;2100:60::-;2128:3;2149:5;2142:12;;2100:60;;;:::o;2166:158::-;2224:9;2257:61;2275:42;2284:32;2310:5;2284:32;:::i;:::-;2275:42;:::i;:::-;2257:61;:::i;:::-;2244:74;;2166:158;;;:::o;2330:147::-;2425:45;2464:5;2425:45;:::i;:::-;2420:3;2413:58;2330:147;;:::o;2483:114::-;2550:6;2584:5;2578:12;2568:22;;2483:114;;;:::o;2603:184::-;2702:11;2736:6;2731:3;2724:19;2776:4;2771:3;2767:14;2752:29;;2603:184;;;;:::o;2793:132::-;2860:4;2883:3;2875:11;;2913:4;2908:3;2904:14;2896:22;;2793:132;;;:::o;2931:108::-;3008:24;3026:5;3008:24;:::i;:::-;3003:3;2996:37;2931:108;;:::o;3045:179::-;3114:10;3135:46;3177:3;3169:6;3135:46;:::i;:::-;3213:4;3208:3;3204:14;3190:28;;3045:179;;;;:::o;3230:113::-;3300:4;3332;3327:3;3323:14;3315:22;;3230:113;;;:::o;3379:732::-;3498:3;3527:54;3575:5;3527:54;:::i;:::-;3597:86;3676:6;3671:3;3597:86;:::i;:::-;3590:93;;3707:56;3757:5;3707:56;:::i;:::-;3786:7;3817:1;3802:284;3827:6;3824:1;3821:13;3802:284;;;3903:6;3897:13;3930:63;3989:3;3974:13;3930:63;:::i;:::-;3923:70;;4016:60;4069:6;4016:60;:::i;:::-;4006:70;;3862:224;3849:1;3846;3842:9;3837:14;;3802:284;;;3806:14;4102:3;4095:10;;3503:608;;;3379:732;;;;:::o;4117:118::-;4204:24;4222:5;4204:24;:::i;:::-;4199:3;4192:37;4117:118;;:::o;4241:720::-;4476:4;4514:3;4503:9;4499:19;4491:27;;4528:79;4604:1;4593:9;4589:17;4580:6;4528:79;:::i;:::-;4654:9;4648:4;4644:20;4639:2;4628:9;4624:18;4617:48;4682:108;4785:4;4776:6;4682:108;:::i;:::-;4674:116;;4800:72;4868:2;4857:9;4853:18;4844:6;4800:72;:::i;:::-;4882;4950:2;4939:9;4935:18;4926:6;4882:72;:::i;:::-;4241:720;;;;;;;:::o;4967:222::-;5060:4;5098:2;5087:9;5083:18;5075:26;;5111:71;5179:1;5168:9;5164:17;5155:6;5111:71;:::i;:::-;4967:222;;;;:::o;5195:122::-;5268:24;5286:5;5268:24;:::i;:::-;5261:5;5258:35;5248:63;;5307:1;5304;5297:12;5248:63;5195:122;:::o;5323:139::-;5369:5;5407:6;5394:20;5385:29;;5423:33;5450:5;5423:33;:::i;:::-;5323:139;;;;:::o;5468:::-;5514:5;5552:6;5539:20;5530:29;;5568:33;5595:5;5568:33;:::i;:::-;5468:139;;;;:::o;5613:474::-;5681:6;5689;5738:2;5726:9;5717:7;5713:23;5709:32;5706:119;;;5744:79;;:::i;:::-;5706:119;5864:1;5889:53;5934:7;5925:6;5914:9;5910:22;5889:53;:::i;:::-;5879:63;;5835:117;5991:2;6017:53;6062:7;6053:6;6042:9;6038:22;6017:53;:::i;:::-;6007:63;;5962:118;5613:474;;;;;:::o;6093:329::-;6152:6;6201:2;6189:9;6180:7;6176:23;6172:32;6169:119;;;6207:79;;:::i;:::-;6169:119;6327:1;6352:53;6397:7;6388:6;6377:9;6373:22;6352:53;:::i;:::-;6342:63;;6298:117;6093:329;;;;:::o;6428:90::-;6462:7;6505:5;6498:13;6491:21;6480:32;;6428:90;;;:::o;6524:109::-;6605:21;6620:5;6605:21;:::i;:::-;6600:3;6593:34;6524:109;;:::o;6639:210::-;6726:4;6764:2;6753:9;6749:18;6741:26;;6777:65;6839:1;6828:9;6824:17;6815:6;6777:65;:::i;:::-;6639:210;;;;:::o;6855:329::-;6914:6;6963:2;6951:9;6942:7;6938:23;6934:32;6931:119;;;6969:79;;:::i;:::-;6931:119;7089:1;7114:53;7159:7;7150:6;7139:9;7135:22;7114:53;:::i;:::-;7104:63;;7060:117;6855:329;;;;:::o;7190:442::-;7339:4;7377:2;7366:9;7362:18;7354:26;;7390:71;7458:1;7447:9;7443:17;7434:6;7390:71;:::i;:::-;7471:72;7539:2;7528:9;7524:18;7515:6;7471:72;:::i;:::-;7553;7621:2;7610:9;7606:18;7597:6;7553:72;:::i;:::-;7190:442;;;;;;:::o;7638:180::-;7686:77;7683:1;7676:88;7783:4;7780:1;7773:15;7807:4;7804:1;7797:15;7824:191;7864:4;7884:20;7902:1;7884:20;:::i;:::-;7879:25;;7918:20;7936:1;7918:20;:::i;:::-;7913:25;;7957:1;7954;7951:8;7948:34;;;7962:18;;:::i;:::-;7948:34;8007:1;8004;8000:9;7992:17;;7824:191;;;;:::o;8021:305::-;8061:3;8080:20;8098:1;8080:20;:::i;:::-;8075:25;;8114:20;8132:1;8114:20;:::i;:::-;8109:25;;8268:1;8200:66;8196:74;8193:1;8190:81;8187:107;;;8274:18;;:::i;:::-;8187:107;8318:1;8315;8311:9;8304:16;;8021:305;;;;:::o;8332:348::-;8372:7;8395:20;8413:1;8395:20;:::i;:::-;8390:25;;8429:20;8447:1;8429:20;:::i;:::-;8424:25;;8617:1;8549:66;8545:74;8542:1;8539:81;8534:1;8527:9;8520:17;8516:105;8513:131;;;8624:18;;:::i;:::-;8513:131;8672:1;8669;8665:9;8654:20;;8332:348;;;;:::o;8686:180::-;8734:77;8731:1;8724:88;8831:4;8828:1;8821:15;8855:4;8852:1;8845:15;8872:185;8912:1;8929:20;8947:1;8929:20;:::i;:::-;8924:25;;8963:20;8981:1;8963:20;:::i;:::-;8958:25;;9002:1;8992:35;;9007:18;;:::i;:::-;8992:35;9049:1;9046;9042:9;9037:14;;8872:185;;;;:::o;9063:169::-;9147:11;9181:6;9176:3;9169:19;9221:4;9216:3;9212:14;9197:29;;9063:169;;;;:::o;9238:293::-;9378:34;9374:1;9366:6;9362:14;9355:58;9447:34;9442:2;9434:6;9430:15;9423:59;9516:7;9511:2;9503:6;9499:15;9492:32;9238:293;:::o;9537:366::-;9679:3;9700:67;9764:2;9759:3;9700:67;:::i;:::-;9693:74;;9776:93;9865:3;9776:93;:::i;:::-;9894:2;9889:3;9885:12;9878:19;;9537:366;;;:::o;9909:419::-;10075:4;10113:2;10102:9;10098:18;10090:26;;10162:9;10156:4;10152:20;10148:1;10137:9;10133:17;10126:47;10190:131;10316:4;10190:131;:::i;:::-;10182:139;;9909:419;;;:::o;10334:233::-;10373:3;10396:24;10414:5;10396:24;:::i;:::-;10387:33;;10442:66;10435:5;10432:77;10429:103;;;10512:18;;:::i;:::-;10429:103;10559:1;10552:5;10548:13;10541:20;;10334:233;;;:::o;10573:332::-;10694:4;10732:2;10721:9;10717:18;10709:26;;10745:71;10813:1;10802:9;10798:17;10789:6;10745:71;:::i;:::-;10826:72;10894:2;10883:9;10879:18;10870:6;10826:72;:::i;:::-;10573:332;;;;;:::o;10911:116::-;10981:21;10996:5;10981:21;:::i;:::-;10974:5;10971:32;10961:60;;11017:1;11014;11007:12;10961:60;10911:116;:::o;11033:137::-;11087:5;11118:6;11112:13;11103:22;;11134:30;11158:5;11134:30;:::i;:::-;11033:137;;;;:::o;11176:345::-;11243:6;11292:2;11280:9;11271:7;11267:23;11263:32;11260:119;;;11298:79;;:::i;:::-;11260:119;11418:1;11443:61;11496:7;11487:6;11476:9;11472:22;11443:61;:::i;:::-;11433:71;;11389:125;11176:345;;;;:::o;11527:180::-;11575:77;11572:1;11565:88;11672:4;11669:1;11662:15;11696:4;11693:1;11686:15"
            },
            "methodIdentifiers": {
              "dividendsPerShare()": "e2d2e219",
              "dividendsPerShareAccuracyFactor()": "11ce023d",
              "getUnpaidEarnings(address)": "28fd3198",
              "isDistributing()": "45153af8",
              "minDistribution()": "4fab0ae8",
              "neverDistributed()": "94799d86",
              "processDividend()": "8bd2da9a",
              "setDistributionCriteria(uint256)": "98e5bfee",
              "setDividendToken(address)": "20ffe2fd",
              "setShare(address,uint256)": "14b6ca96",
              "shares(address)": "ce7c2ac2",
              "totalDistributed()": "efca2eed",
              "totalDividends()": "997664d7",
              "totalShares()": "3a98ef39",
              "viewDividendTokenAddress()": "7bf7d61b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsPoolAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"dividendsPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dividendsPerShareAccuracyFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"}],\"name\":\"getUnpaidEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDistributing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"neverDistributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minDistribution\",\"type\":\"uint256\"}],\"name\":\"setDistributionCriteria\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dividendTokenAddress\",\"type\":\"address\"}],\"name\":\"setDividendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalExcluded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRealised\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewDividendTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"DividendDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "IBEP20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "getOwner()": "893d20e8",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "IDEXFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createPair(address,address)": "c9c65396"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"IDEXFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "IDEXPair": {
          "abi": [
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "bassetPoolLockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getReserves()": "0902f1ac",
              "token0()": "0dfe1681"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"bassetPoolLockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"IDEXPair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "IDEXRouter": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
              "factory()": "c45a0155",
              "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
              "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"IDEXRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "IDividendDistributor": {
          "abi": [
            {
              "inputs": [],
              "name": "processDividend",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_minDistribution",
                  "type": "uint256"
                }
              ],
              "name": "setDistributionCriteria",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dividendTokenAddress",
                  "type": "address"
                }
              ],
              "name": "setDividendToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "shareholder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "setShare",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "viewDividendTokenAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "processDividend()": "8bd2da9a",
              "setDistributionCriteria(uint256)": "98e5bfee",
              "setDividendToken(address)": "20ffe2fd",
              "setShare(address,uint256)": "14b6ca96",
              "viewDividendTokenAddress()": "7bf7d61b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"processDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minDistribution\",\"type\":\"uint256\"}],\"name\":\"setDistributionCriteria\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dividendTokenAddress\",\"type\":\"address\"}],\"name\":\"setDividendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shareholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewDividendTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"IDividendDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "IRewardsPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferBNBToAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "transferBNBToAddress(address,uint256)": "2a50d278"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferBNBToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"IRewardsPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "RewardsPool": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferBNBToAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1116": {
                  "entryPoint": null,
                  "id": 1116,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061027f806100606000396000f3fe6080604052600436106100225760003560e01c80632a50d2781461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906101c3565b610057565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100af57600080fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516100d590610234565b60006040518083038185875af1925050503d8060008114610112576040519150601f19603f3d011682016040523d82523d6000602084013e610117565b606091505b505090508061012557600080fd5b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015a8261012f565b9050919050565b61016a8161014f565b811461017557600080fd5b50565b60008135905061018781610161565b92915050565b6000819050919050565b6101a08161018d565b81146101ab57600080fd5b50565b6000813590506101bd81610197565b92915050565b600080604083850312156101da576101d961012a565b5b60006101e885828601610178565b92505060206101f9858286016101ae565b9150509250929050565b600081905092915050565b50565b600061021e600083610203565b91506102298261020e565b600082019050919050565b600061023f82610211565b915081905091905056fea26469706673582212206815312ded3cdd387033cfeeacdeba5fb73c59d86a7b2a30642717421461e4ce64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x27F DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A50D278 EQ PUSH2 0x2E JUMPI PUSH2 0x29 JUMP JUMPDEST CALLDATASIZE PUSH2 0x29 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP1 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x117 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A DUP3 PUSH2 0x12F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x14F JUMP JUMPDEST DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x187 DUP2 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x18D JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD DUP2 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DA JUMPI PUSH2 0x1D9 PUSH2 0x12A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E8 DUP6 DUP3 DUP7 ADD PUSH2 0x178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E PUSH1 0x0 DUP4 PUSH2 0x203 JUMP JUMPDEST SWAP2 POP PUSH2 0x229 DUP3 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x15312DED3CDD387033 0xCF 0xEE 0xAC 0xDE 0xBA 0x5F 0xB7 EXTCODECOPY MSIZE 0xD8 PUSH11 0x7B2A30642717421461E4CE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "11008:733:0:-:0;;;11380:51;;;;;;;;;;11414:10;11405:6;;:19;;;;;;;;;;;;;;;;;;11008:733;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_1120": {
                  "entryPoint": null,
                  "id": 1120,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferBNBToAddress_1148": {
                  "entryPoint": 87,
                  "id": 1148,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_t_address": {
                  "entryPoint": 376,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 430,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 451,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                  "entryPoint": 529,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 564,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                  "entryPoint": 515,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 335,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 303,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 397,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 298,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
                  "entryPoint": 526,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 353,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 407,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2736:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:1",
                            "type": ""
                          }
                        ],
                        "src": "7:75:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "411:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "400:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:1",
                            "type": ""
                          }
                        ],
                        "src": "334:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "511:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "521:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "550:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "532:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "532:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "521:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "493:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "503:7:1",
                            "type": ""
                          }
                        ],
                        "src": "466:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "611:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "668:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "677:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "680:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "670:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "670:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "670:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "634:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "659:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "641:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "641:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "631:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "631:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "621:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "604:5:1",
                            "type": ""
                          }
                        ],
                        "src": "568:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "748:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "758:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "780:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "767:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "758:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "823:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "796:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "796:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "796:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "726:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "734:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "742:5:1",
                            "type": ""
                          }
                        ],
                        "src": "696:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "886:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "896:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "907:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "896:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "868:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "878:7:1",
                            "type": ""
                          }
                        ],
                        "src": "841:77:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "967:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1024:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1033:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1036:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1026:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1026:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1026:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "990:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1015:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "997:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "997:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "987:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "987:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "980:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "980:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "977:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "960:5:1",
                            "type": ""
                          }
                        ],
                        "src": "924:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1104:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1114:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1136:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1123:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1123:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1114:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1179:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1152:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1152:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1152:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1082:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1090:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1098:5:1",
                            "type": ""
                          }
                        ],
                        "src": "1052:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1280:391:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1326:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1328:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1328:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1328:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1301:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1310:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1297:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1297:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1322:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1293:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1293:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1290:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1419:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1434:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1448:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1438:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1463:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1498:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1509:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1494:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1494:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1518:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1473:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1473:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1463:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1546:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1561:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1575:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1565:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1591:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1626:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1637:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1622:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1622:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1646:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1601:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1601:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1591:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1242:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1253:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1265:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1273:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1197:474:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1790:34:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1800:18:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1815:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1800:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1762:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1767:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "1778:11:1",
                            "type": ""
                          }
                        ],
                        "src": "1677:147:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1936:8:1",
                          "statements": []
                        },
                        "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1928:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1830:114:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2113:235:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2123:90:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2206:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2211:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2130:75:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2130:83:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2123:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2311:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "nodeType": "YulIdentifier",
                                  "src": "2222:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2222:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2222:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2324:18:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2335:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2340:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2331:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2331:11:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2324:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2101:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2109:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1950:398:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2542:191:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2553:154:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2703:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2560:141:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2560:147:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2553:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2717:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2724:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2717:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2529:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2538:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2354:379:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100225760003560e01c80632a50d2781461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906101c3565b610057565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100af57600080fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516100d590610234565b60006040518083038185875af1925050503d8060008114610112576040519150601f19603f3d011682016040523d82523d6000602084013e610117565b606091505b505090508061012557600080fd5b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015a8261012f565b9050919050565b61016a8161014f565b811461017557600080fd5b50565b60008135905061018781610161565b92915050565b6000819050919050565b6101a08161018d565b81146101ab57600080fd5b50565b6000813590506101bd81610197565b92915050565b600080604083850312156101da576101d961012a565b5b60006101e885828601610178565b92505060206101f9858286016101ae565b9150509250929050565b600081905092915050565b50565b600061021e600083610203565b91506102298261020e565b600082019050919050565b600061023f82610211565b915081905091905056fea26469706673582212206815312ded3cdd387033cfeeacdeba5fb73c59d86a7b2a30642717421461e4ce64736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A50D278 EQ PUSH2 0x2E JUMPI PUSH2 0x29 JUMP JUMPDEST CALLDATASIZE PUSH2 0x29 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP1 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x117 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A DUP3 PUSH2 0x12F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x14F JUMP JUMPDEST DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x187 DUP2 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x18D JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD DUP2 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DA JUMPI PUSH2 0x1D9 PUSH2 0x12A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E8 DUP6 DUP3 DUP7 ADD PUSH2 0x178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E PUSH1 0x0 DUP4 PUSH2 0x203 JUMP JUMPDEST SWAP2 POP PUSH2 0x229 DUP3 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x15312DED3CDD387033 0xCF 0xEE 0xAC 0xDE 0xBA 0x5F 0xB7 EXTCODECOPY MSIZE 0xD8 PUSH11 0x7B2A30642717421461E4CE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "11008:733:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;11543:196;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;11356:6;;;;;;;;;;11342:20;;:10;:20;;;11334:29;;;;;;11647:12:::1;11672:9;11664:23;;11695:6;11664:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11646:60;;;11724:7;11716:16;;;::::0;::::1;;11636:103;11543:196:::0;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:147::-;1778:11;1815:3;1800:18;;1677:147;;;;:::o;1830:114::-;;:::o;1950:398::-;2109:3;2130:83;2211:1;2206:3;2130:83;:::i;:::-;2123:90;;2222:93;2311:3;2222:93;:::i;:::-;2340:1;2335:3;2331:11;2324:18;;1950:398;;;:::o;2354:379::-;2538:3;2560:147;2703:3;2560:147;:::i;:::-;2553:154;;2724:3;2717:10;;2354:379;;;:::o"
            },
            "methodIdentifiers": {
              "transferBNBToAddress(address,uint256)": "2a50d278"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferBNBToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract to store and distribute BNB rewards accrued through taxes in the parent token contract\",\"kind\":\"dev\",\"methods\":{\"transferBNBToAddress(address,uint256)\":{\"details\":\"Transfer the BNB reward from the contract to a recipient\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"RewardsPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "SafeMath": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bbd781616a0edfc62e8fd7e4cecaff0532932ca901dadfe949a0fc7f40b53fe64736f6c634300080b0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xBD PUSH25 0x1616A0EDFC62E8FD7E4CECAFF0532932CA901DADFE949A0FC7 DELEGATECALL SIGNEXTEND MSTORE8 INVALID PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "129:640:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bbd781616a0edfc62e8fd7e4cecaff0532932ca901dadfe949a0fc7f40b53fe64736f6c634300080b0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xBD PUSH25 0x1616A0EDFC62E8FD7E4CECAFF0532932CA901DADFE949A0FC7 DELEGATECALL SIGNEXTEND MSTORE8 INVALID PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "129:640:0:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"SAFEMATH LIBRARY\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        },
        "TokifyRisingFloor": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dexRouter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_marketingFeeReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_rewardTokenAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountBNB",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountBOG",
                  "type": "uint256"
                }
              ],
              "name": "AutoLiquify",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MASK",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WBNB",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "_maxTxAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "approveMax",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "assetPoolLockTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "assetPoolLockTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "authorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "autoLiquidityReceiver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "baseTaxesAccumulated",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burnForBNB",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dividendDistributorAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "excludeFromPause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAmountBNBInAssetPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAmountBNBInRewardsPool",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCirculatingSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "denominator",
                  "type": "uint256"
                }
              ],
              "name": "getCurrentGapRatio",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getDividendTokenAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSellMultipliedFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                }
              ],
              "name": "getTotalFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "includeInPause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "isAuthorized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "target",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accuracy",
                  "type": "uint256"
                }
              ],
              "name": "isOverLiquified",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isOwner",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isPaused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_numberOfDays",
                  "type": "uint256"
                }
              ],
              "name": "lockAssetRewardPools",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "marketingFeeReceiver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxSellFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxSellMultiplier",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "moveAssetPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "moveRewardPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_numberOfDays",
                  "type": "uint256"
                }
              ],
              "name": "pauseContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pauseTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pauseTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "numerator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "denominator",
                  "type": "uint256"
                }
              ],
              "name": "payoutFractionOfRewardsPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardsPoolAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "router",
              "outputs": [
                {
                  "internalType": "contract IDEXRouter",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sellingSwapThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sellingTaxAccumulated",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_minDistribution",
                  "type": "uint256"
                }
              ],
              "name": "setDistributionCriteria",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dividendTokenAddress",
                  "type": "address"
                }
              ],
              "name": "setDividendToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "setTakeFeeActive",
                  "type": "bool"
                }
              ],
              "name": "setFeeActive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_autoLiquidityReceiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_marketingFeeReceiver",
                  "type": "address"
                }
              ],
              "name": "setFeeReceivers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_liquidityFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_rewardsFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_backingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_marketingFee",
                  "type": "uint256"
                }
              ],
              "name": "setFeesWithDenominator10000",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exempt",
                  "type": "bool"
                }
              ],
              "name": "setIsDividendExempt",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exempt",
                  "type": "bool"
                }
              ],
              "name": "setIsFeeExempt",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "holder",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exempt",
                  "type": "bool"
                }
              ],
              "name": "setIsTxLimitExempt",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_maxSellFee",
                  "type": "uint256"
                }
              ],
              "name": "setMaxSellFeeDenominator10000",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_maxSellMultiplier",
                  "type": "uint256"
                }
              ],
              "name": "setMaxSellMultiplierDenominator10000",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_enabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_sellingAmount",
                  "type": "uint256"
                }
              ],
              "name": "setSwapBackSettings",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_target",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_denominator",
                  "type": "uint256"
                }
              ],
              "name": "setTargetLiquidity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "setTxLimit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "swapEnabled",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "swapThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "adr",
                  "type": "address"
                }
              ],
              "name": "unauthorize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1511": {
                  "entryPoint": null,
                  "id": 1511,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_192": {
                  "entryPoint": null,
                  "id": 192,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@add_16": {
                  "entryPoint": 3303,
                  "id": 16,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_1619": {
                  "entryPoint": 3327,
                  "id": 1619,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@div_58": {
                  "entryPoint": 3279,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 4373,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 4488,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
                  "entryPoint": 4396,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 4538,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 4661,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
                  "entryPoint": 4555,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed": {
                  "entryPoint": 4600,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 4678,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 4707,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 4234,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 3659,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 4009,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 3750,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 4090,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 4327,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 4295,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 3986,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint8": {
                  "entryPoint": 3996,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3599,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 4187,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 4290,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "shift_right_1_unsigned": {
                  "entryPoint": 3646,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "validator_revert_t_address": {
                  "entryPoint": 4347,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:6861:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "52:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "55:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "45:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "45:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "45:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "149:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "152:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "142:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "173:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "176:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "166:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "166:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "244:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "254:34:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "279:1:1",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "282:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "275:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "275:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "254:8:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_1_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "225:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nodeType": "YulTypedName",
                            "src": "235:8:1",
                            "type": ""
                          }
                        ],
                        "src": "193:102:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "374:775:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "384:15:1",
                              "value": {
                                "name": "_power",
                                "nodeType": "YulIdentifier",
                                "src": "393:6:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:5:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "408:14:1",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "417:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "408:4:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "466:677:1",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "554:22:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "556:16:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "556:18:1"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "556:18:1"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "532:4:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nodeType": "YulIdentifier",
                                              "src": "542:3:1"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "547:4:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "538:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "538:14:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "529:2:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "529:24:1"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "526:50:1"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "621:419:1",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "1001:25:1",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "1014:5:1"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "1021:4:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "1010:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1010:16:1"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "1001:5:1"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "596:8:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "606:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "592:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "592:16:1"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "589:451:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1053:23:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1065:4:1"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1071:4:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "1061:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1061:15:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "1053:4:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1089:44:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1124:8:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shift_right_1_unsigned",
                                        "nodeType": "YulIdentifier",
                                        "src": "1101:22:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1101:32:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "1089:8:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "442:8:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "452:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "439:15:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "455:2:1",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "435:3:1",
                                "statements": []
                              },
                              "src": "431:712:1"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_power",
                            "nodeType": "YulTypedName",
                            "src": "329:6:1",
                            "type": ""
                          },
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "337:5:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "344:8:1",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nodeType": "YulTypedName",
                            "src": "354:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "362:5:1",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "369:4:1",
                            "type": ""
                          }
                        ],
                        "src": "301:848:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1215:1013:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1410:20:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1412:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1421:1:1",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1412:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "1423:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "1400:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1393:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1393:16:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1390:40:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1455:20:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1457:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1466:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1457:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "1468:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1449:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1442:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1442:12:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1439:36:1"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1585:20:1",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "1587:10:1",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1596:1:1",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "1587:5:1"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "1598:5:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1578:27:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1583:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1629:176:1",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "1664:22:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1666:16:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1666:18:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "1666:18:1"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "1649:8:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1659:3:1",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "1646:2:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1646:17:1"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "1643:43:1"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "1699:25:1",
                                        "value": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1712:1:1",
                                              "type": "",
                                              "value": "2"
                                            },
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "1715:8:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "exp",
                                            "nodeType": "YulIdentifier",
                                            "src": "1708:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1708:16:1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "1699:5:1"
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "1755:22:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1757:16:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1757:18:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "1757:18:1"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "1743:5:1"
                                            },
                                            {
                                              "name": "max",
                                              "nodeType": "YulIdentifier",
                                              "src": "1750:3:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "1740:2:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1740:14:1"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "1737:40:1"
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "1790:5:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1614:191:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1619:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "1535:4:1"
                              },
                              "nodeType": "YulSwitch",
                              "src": "1528:277:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1937:123:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1951:28:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "1964:4:1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "1970:8:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "1960:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1960:19:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "1951:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2010:22:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "2012:16:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2012:18:1"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2012:18:1"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "power",
                                          "nodeType": "YulIdentifier",
                                          "src": "1998:5:1"
                                        },
                                        {
                                          "name": "max",
                                          "nodeType": "YulIdentifier",
                                          "src": "2005:3:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "1995:2:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1995:14:1"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "1992:40:1"
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "2045:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "1840:4:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1846:2:1",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1837:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1837:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "1854:8:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1864:2:1",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1851:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1851:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1833:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1833:35:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "1889:4:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1895:3:1",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1886:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1886:13:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "1904:8:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1914:2:1",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "1901:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1901:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1882:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1882:36:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1817:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1817:111:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1814:246:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2070:57:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2104:1:1",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2107:4:1"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2113:8:1"
                                  },
                                  {
                                    "name": "max",
                                    "nodeType": "YulIdentifier",
                                    "src": "2123:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "2085:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2085:42:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "2070:5:1"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "2077:4:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2166:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2168:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2168:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2168:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "2143:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "max",
                                        "nodeType": "YulIdentifier",
                                        "src": "2154:3:1"
                                      },
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "2159:4:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "2150:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2150:14:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2140:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2140:25:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2137:51:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2197:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "2210:5:1"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2217:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "2206:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2206:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "2197:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "1185:4:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "1191:8:1",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nodeType": "YulTypedName",
                            "src": "1201:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "1209:5:1",
                            "type": ""
                          }
                        ],
                        "src": "1155:1073:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2279:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2289:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2300:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2289:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2261:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2271:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2234:77:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2360:43:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2370:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2385:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2392:4:1",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2381:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2381:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2370:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2342:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2352:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2317:86:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2473:217:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2483:31:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2509:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2491:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2491:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "2483:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2523:37:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2551:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2535:15:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2535:25:1"
                              },
                              "variableNames": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "2523:8:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2570:113:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2600:4:1"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "2606:8:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2616:66:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2579:20:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2579:104:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "2570:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "2448:4:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "2454:8:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "2467:5:1",
                            "type": ""
                          }
                        ],
                        "src": "2409:281:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2744:300:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2754:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2777:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2759:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2759:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "2754:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2788:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "2811:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2793:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2793:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "2788:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2986:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2988:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2988:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2988:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "2898:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2891:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2891:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2884:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2884:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "2906:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2913:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "2981:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "2909:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2909:74:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2903:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2903:81:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2880:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2880:105:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2877:131:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3018:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3033:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3036:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "3029:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3029:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "3018:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "2727:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "2730:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "2736:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2696:348:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3078:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3095:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3098:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3088:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3088:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3088:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3192:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3195:4:1",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3185:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3185:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3185:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3216:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3219:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3209:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3209:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3209:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3050:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3278:143:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3288:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3311:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "3293:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3293:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "3288:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3322:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3345:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "3327:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3327:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "3322:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3369:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3371:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3371:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3371:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3366:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3359:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3359:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "3356:35:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3401:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3410:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "3413:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "3406:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3406:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "3401:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "3267:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "3270:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "3276:1:1",
                            "type": ""
                          }
                        ],
                        "src": "3236:185:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3467:35:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3477:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3493:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3487:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3487:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3477:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "3460:6:1",
                            "type": ""
                          }
                        ],
                        "src": "3427:75:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3597:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3614:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3617:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3607:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3607:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3607:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3508:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3720:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3737:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3740:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3730:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3730:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3730:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3631:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3799:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3809:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3824:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3831:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3820:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3820:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3809:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3781:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3791:7:1",
                            "type": ""
                          }
                        ],
                        "src": "3754:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3931:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3941:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3970:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "3952:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3952:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3941:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3913:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3923:7:1",
                            "type": ""
                          }
                        ],
                        "src": "3886:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4031:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4088:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4097:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4100:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4090:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4090:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4090:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4054:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4079:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "4061:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4061:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "4051:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4051:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4044:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4044:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4041:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4024:5:1",
                            "type": ""
                          }
                        ],
                        "src": "3988:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4179:80:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4189:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4204:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4198:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4198:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4189:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4247:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4220:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4220:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4220:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "4157:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4165:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4173:5:1",
                            "type": ""
                          }
                        ],
                        "src": "4116:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4376:552:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4422:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "4424:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4424:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4424:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4397:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4406:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4393:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4393:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4418:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4389:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4389:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4386:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4515:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4530:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4544:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4534:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4559:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4605:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4616:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4601:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4601:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4625:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4569:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4569:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4559:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4653:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4668:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4682:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4672:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4698:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4744:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4755:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4740:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4740:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4764:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4708:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4708:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4698:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4792:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4807:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4821:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4811:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4837:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4883:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4894:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4879:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4879:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4903:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4847:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4847:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4837:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4330:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4341:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4353:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4361:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4369:6:1",
                            "type": ""
                          }
                        ],
                        "src": "4265:663:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5011:274:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5057:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "5059:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5059:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5059:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5032:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5041:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5028:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5028:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5053:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5024:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5024:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5021:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5150:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5165:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5179:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5169:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5194:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5240:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5251:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5236:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5236:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5260:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "5204:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5204:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5194:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4981:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4992:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5004:6:1",
                            "type": ""
                          }
                        ],
                        "src": "4934:351:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5356:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5373:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5396:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5378:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5378:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5366:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5366:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5366:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5344:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5351:3:1",
                            "type": ""
                          }
                        ],
                        "src": "5291:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5541:206:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5551:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5563:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5574:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5559:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5559:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5551:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5631:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5644:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5655:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5640:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5640:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5587:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5587:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5587:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5712:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5725:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5736:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5721:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5721:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5668:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5668:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5668:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5505:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5517:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5525:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5536:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5415:332:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5907:288:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5917:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5929:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5940:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5925:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5925:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5917:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5997:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6010:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6021:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6006:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6006:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5953:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5953:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5953:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6078:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6091:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6102:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6087:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6087:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6034:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6034:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6034:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6160:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6173:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6184:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6169:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6169:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6116:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6116:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6116:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5863:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5875:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5883:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5891:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5902:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5753:442:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6266:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6283:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6306:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6288:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6288:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6276:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6276:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6276:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6254:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6261:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6201:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6423:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6433:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6445:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6456:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6441:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6441:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6433:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6513:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6526:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6537:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6522:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6522:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6469:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6469:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6469:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6395:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6407:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6418:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6325:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6597:261:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6607:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6630:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "6612:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6612:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "6607:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6641:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6664:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "6646:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6646:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "6641:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6804:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6806:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6806:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6806:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6725:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6732:66:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "6800:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6728:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6728:74:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6722:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6722:81:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6719:107:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6836:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6847:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6850:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6843:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6843:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "6836:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "6584:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "6587:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "6593:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6553:305:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405273bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061dead600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061dead600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009600a62000131919062000fa9565b66038d7ea4c6800062000145919062000ffa565b6006556200016661019060065462000ccf60201b6200308f1790919060201c565b60075560c8600e5560c8600f5560c860105560c8601155620001d1601154620001bd601054620001a9600f54600e5462000ce760201b620030a51790919060201c565b62000ce760201b620030a51790919060201c565b62000ce760201b620030a51790919060201c565b60125561271060135561138860145561c35060155573f6bf36933149030ed4b212f0a79872306690e48e601a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101f4601b556001601c60006101000a81548160ff0219169083151502179055506019601d556064601e556001602960006101000a81548160ff0219169083151502179055506107d06006546200029391906200108a565b602a55611f40600654620002a891906200108a565b602b55348015620002b857600080fd5b5060405162009475380380620094758339818101604052810190620002de91906200112c565b33806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505082601f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000426573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044c919062001188565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b8152600401620004aa929190620011cb565b6020604051808303816000875af1158015620004ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004f0919062001188565b602060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600654600960003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000643573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000669919062001188565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620006b79062000df3565b604051809103906000f080158015620006d4573d6000803e3d6000fd5b50602160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16602260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620007ab9062000e01565b620007b993929190620011f8565b604051809103906000f080158015620007d6573d6000803e3d6000fd5b50602360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16602460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600c6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600c60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600c6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600c6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033601860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000bde8360065462000cff60201b60201c565b5062000c15602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660065462000cff60201b60201c565b50600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60065460405162000cbe919062001246565b60405180910390a3505050620012c0565b6000818362000cdf91906200108a565b905092915050565b6000818362000cf7919062001263565b905092915050565b600081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405162000de1919062001246565b60405180910390a36001905092915050565b6102df806200728183390190565b611f15806200756083390190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000e9d5780860481111562000e755762000e7462000e0f565b5b600185161562000e855780820291505b808102905062000e958562000e3e565b945062000e55565b94509492505050565b60008262000eb8576001905062000f8b565b8162000ec8576000905062000f8b565b816001811462000ee1576002811462000eec5762000f22565b600191505062000f8b565b60ff84111562000f015762000f0062000e0f565b5b8360020a91508482111562000f1b5762000f1a62000e0f565b5b5062000f8b565b5060208310610133831016604e8410600b841016171562000f5c5782820a90508381111562000f565762000f5562000e0f565b5b62000f8b565b62000f6b848484600162000e4b565b9250905081840481111562000f855762000f8462000e0f565b5b81810290505b9392505050565b6000819050919050565b600060ff82169050919050565b600062000fb68262000f92565b915062000fc38362000f9c565b925062000ff27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000ea6565b905092915050565b6000620010078262000f92565b9150620010148362000f92565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562001050576200104f62000e0f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620010978262000f92565b9150620010a48362000f92565b925082620010b757620010b66200105b565b5b828204905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620010f482620010c7565b9050919050565b6200110681620010e7565b81146200111257600080fd5b50565b6000815190506200112681620010fb565b92915050565b600080600060608486031215620011485762001147620010c2565b5b6000620011588682870162001115565b93505060206200116b8682870162001115565b92505060406200117e8682870162001115565b9150509250925092565b600060208284031215620011a157620011a0620010c2565b5b6000620011b18482850162001115565b91505092915050565b620011c581620010e7565b82525050565b6000604082019050620011e26000830185620011ba565b620011f16020830184620011ba565b9392505050565b60006060820190506200120f6000830186620011ba565b6200121e6020830185620011ba565b6200122d6040830184620011ba565b949350505050565b620012408162000f92565b82525050565b60006020820190506200125d600083018462001235565b92915050565b6000620012708262000f92565b91506200127d8362000f92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620012b557620012b462000e0f565b5b828201905092915050565b615fb180620012d06000396000f3fe6080604052600436106103dd5760003560e01c806398e5bfee116101fd578063cce8505511610118578063efe25ad2116100ab578063f708a64f1161007a578063f708a64f14610ec6578063f84ba65d14610eef578063f887ea4014610f18578063fb4193be14610f43578063fe9fbb8014610f6c576103e4565b8063efe25ad214610e0c578063f0b37c0414610e37578063f1f3bca314610e60578063f2fde38b14610e9d576103e4565b8063e2163851116100e7578063e216385114610d62578063e248260614610d8d578063e91f214e14610db6578063e96fada214610de1576103e4565b8063cce8505514610ca8578063d088935814610cd3578063d717c91814610cfc578063dd62ed3e14610d25576103e4565b8063af7a245811610190578063bbea13d41161015f578063bbea13d414610bec578063c2852f3814610c17578063c8e0293414610c40578063ca33e64c14610c7d576103e4565b8063af7a245814610b46578063b187bd2614610b6f578063b6a5d7de14610b9a578063b7bfff6514610bc3576103e4565b8063a69c17e0116101cc578063a69c17e014610a88578063a8aa1b3114610ab3578063a9059cbb14610ade578063ad84f34114610b1b576103e4565b806398e5bfee146109e05780639e061b4814610a09578063a26bd13c14610a34578063a4b45c0014610a5f576103e4565b80633ff942ce116102f8578063748a9dc21161028b578063893d20e81161025a578063893d20e81461090b5780638dd950021461093657806394da3e861461096157806395d89b411461098c57806395dab460146109b7576103e4565b8063748a9dc21461086157806375ead12b1461088c5780637d1db4a5146108b7578063885bd9ee146108e2576103e4565b80635c85974f116102c75780635c85974f146107a7578063658d4b7f146107d05780636ddd1713146107f957806370a0823114610824576103e4565b80633ff942ce146106d957806351d016f514610704578063563bf54d14610741578063571ac8b01461076a576103e4565b8063201e7991116103705780632b112e491161033f5780632b112e491461061b5780632f54bf6e14610646578063313ce56714610683578063367ff4a7146106ae576103e4565b8063201e79911461056157806320ffe2fd1461058a5780632138ce01146105b357806323b872dd146105de576103e4565b806309cfc486116103ac57806309cfc486146104a75780631161ae39146104d057806318160ddd1461050d57806319fbe38514610538576103e4565b8063015cb3ff146103e95780630445b6671461041457806306fdde031461043f578063095ea7b31461046a576103e4565b366103e457005b600080fd5b3480156103f557600080fd5b506103fe610fa9565b60405161040b9190614d5d565b60405180910390f35b34801561042057600080fd5b50610429610faf565b6040516104369190614d5d565b60405180910390f35b34801561044b57600080fd5b50610454610fb5565b6040516104619190614e11565b60405180910390f35b34801561047657600080fd5b50610491600480360381019061048c9190614ec2565b610ff2565b60405161049e9190614f1d565b60405180910390f35b3480156104b357600080fd5b506104ce60048036038101906104c99190614f38565b6110e4565b005b3480156104dc57600080fd5b506104f760048036038101906104f29190614f65565b61124f565b6040516105049190614f1d565b60405180910390f35b34801561051957600080fd5b506105226112c4565b60405161052f9190614d5d565b60405180910390f35b34801561054457600080fd5b5061055f600480360381019061055a9190614fa5565b6112ce565b005b34801561056d57600080fd5b5061058860048036038101906105839190614f65565b6113aa565b005b34801561059657600080fd5b506105b160048036038101906105ac9190614f38565b611404565b005b3480156105bf57600080fd5b506105c86115b3565b6040516105d59190614d5d565b60405180910390f35b3480156105ea57600080fd5b5061060560048036038101906106009190614fd2565b611626565b6040516106129190614f1d565b60405180910390f35b34801561062757600080fd5b50610630611808565b60405161063d9190614d5d565b60405180910390f35b34801561065257600080fd5b5061066d60048036038101906106689190614f38565b61188a565b60405161067a9190614f1d565b60405180910390f35b34801561068f57600080fd5b506106986118e3565b6040516106a59190615041565b60405180910390f35b3480156106ba57600080fd5b506106c36118ec565b6040516106d09190614d5d565b60405180910390f35b3480156106e557600080fd5b506106ee6118f2565b6040516106fb9190614d5d565b60405180910390f35b34801561071057600080fd5b5061072b60048036038101906107269190614fa5565b6118f8565b6040516107389190614f1d565b60405180910390f35b34801561074d57600080fd5b506107686004803603810190610763919061505c565b611910565b005b34801561077657600080fd5b50610791600480360381019061078c9190614f38565b6119e9565b60405161079e9190614f1d565b60405180910390f35b3480156107b357600080fd5b506107ce60048036038101906107c99190614fa5565b6119fe565b005b3480156107dc57600080fd5b506107f760048036038101906107f291906150ef565b611a6c565b005b34801561080557600080fd5b5061080e611b0f565b60405161081b9190614f1d565b60405180910390f35b34801561083057600080fd5b5061084b60048036038101906108469190614f38565b611b22565b6040516108589190614d5d565b60405180910390f35b34801561086d57600080fd5b50610876611b6b565b6040516108839190614d5d565b60405180910390f35b34801561089857600080fd5b506108a1611b71565b6040516108ae9190614d5d565b60405180910390f35b3480156108c357600080fd5b506108cc611b79565b6040516108d99190614d5d565b60405180910390f35b3480156108ee57600080fd5b5061090960048036038101906109049190614f38565b611b7f565b005b34801561091757600080fd5b50610920611c22565b60405161092d919061513e565b60405180910390f35b34801561094257600080fd5b5061094b611c4b565b604051610958919061513e565b60405180910390f35b34801561096d57600080fd5b50610976611c71565b6040516109839190614d5d565b60405180910390f35b34801561099857600080fd5b506109a1611c77565b6040516109ae9190614e11565b60405180910390f35b3480156109c357600080fd5b506109de60048036038101906109d99190614fa5565b611cb4565b005b3480156109ec57600080fd5b50610a076004803603810190610a029190614fa5565b611d91565b005b348015610a1557600080fd5b50610a1e611e69565b604051610a2b919061513e565b60405180910390f35b348015610a4057600080fd5b50610a49611f01565b604051610a56919061513e565b60405180910390f35b348015610a6b57600080fd5b50610a866004803603810190610a819190615159565b611f27565b005b348015610a9457600080fd5b50610a9d611ff5565b604051610aaa9190614d5d565b60405180910390f35b348015610abf57600080fd5b50610ac8612036565b604051610ad5919061513e565b60405180910390f35b348015610aea57600080fd5b50610b056004803603810190610b009190614ec2565b61205c565b604051610b129190614f1d565b60405180910390f35b348015610b2757600080fd5b50610b30612071565b604051610b3d9190614d5d565b60405180910390f35b348015610b5257600080fd5b50610b6d6004803603810190610b689190614fa5565b612077565b005b348015610b7b57600080fd5b50610b846120e5565b604051610b919190614f1d565b60405180910390f35b348015610ba657600080fd5b50610bc16004803603810190610bbc9190614f38565b6120fe565b005b348015610bcf57600080fd5b50610bea6004803603810190610be59190615199565b6121a0565b005b348015610bf857600080fd5b50610c01612205565b604051610c0e9190614d5d565b60405180910390f35b348015610c2357600080fd5b50610c3e6004803603810190610c399190614fa5565b61220b565b005b348015610c4c57600080fd5b50610c676004803603810190610c629190614fa5565b61231d565b604051610c749190614d5d565b60405180910390f35b348015610c8957600080fd5b50610c926125f0565b604051610c9f919061513e565b60405180910390f35b348015610cb457600080fd5b50610cbd612616565b604051610cca919061513e565b60405180910390f35b348015610cdf57600080fd5b50610cfa6004803603810190610cf591906151c6565b61263c565b005b348015610d0857600080fd5b50610d236004803603810190610d1e9190614f65565b6126b1565b005b348015610d3157600080fd5b50610d4c6004803603810190610d479190615159565b612817565b604051610d599190614d5d565b60405180910390f35b348015610d6e57600080fd5b50610d7761289e565b604051610d849190614d5d565b60405180910390f35b348015610d9957600080fd5b50610db46004803603810190610daf9190614f38565b6128a4565b005b348015610dc257600080fd5b50610dcb612996565b604051610dd89190614d5d565b60405180910390f35b348015610ded57600080fd5b50610df66129ac565b604051610e03919061513e565b60405180910390f35b348015610e1857600080fd5b50610e216129d2565b604051610e2e9190614d5d565b60405180910390f35b348015610e4357600080fd5b50610e5e6004803603810190610e599190614f38565b6129d8565b005b348015610e6c57600080fd5b50610e876004803603810190610e829190615199565b612a7b565b604051610e949190614d5d565b60405180910390f35b348015610ea957600080fd5b50610ec46004803603810190610ebf9190615257565b612a9d565b005b348015610ed257600080fd5b50610eed6004803603810190610ee891906150ef565b612bb6565b005b348015610efb57600080fd5b50610f166004803603810190610f1191906150ef565b612e56565b005b348015610f2457600080fd5b50610f2d612ef9565b604051610f3a91906152e3565b60405180910390f35b348015610f4f57600080fd5b50610f6a6004803603810190610f659190614f38565b612f1f565b005b348015610f7857600080fd5b50610f936004803603810190610f8e9190614f38565b613039565b604051610fa09190614f1d565b60405180910390f35b60285481565b602a5481565b60606040518060400160405280601381526020017f546f6b69667920526973696e6720466c6f6f7200000000000000000000000000815250905090565b600081600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516110d29190614d5d565b60405180910390a36001905092915050565b6110ed3361188a565b61112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111239061534a565b60405180910390fd5b60265460255461113c9190615399565b42101561117e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111759061543b565b60405180910390fd5b6000602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a50d27883836040518363ffffffff1660e01b815260040161121992919061545b565b600060405180830381600087803b15801561123357600080fd5b505af1158015611247573d6000803e3d6000fd5b505050505050565b6000826112bb61125d611808565b6112ad61129e6002611290602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b22565b6130bb90919063ffffffff16565b866130bb90919063ffffffff16565b61308f90919063ffffffff16565b11905092915050565b6000600654905090565b6112d733613039565b611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130d906154d0565b60405180910390fd5b61138881111561135b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113529061553c565b60405180910390fd5b6012548110156113a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611397906155a8565b60405180910390fd5b8060148190555050565b6113b333613039565b6113f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e9906154d0565b60405180910390fd5b81601d8190555080601e819055505050565b61140d33613039565b61144c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611443906154d0565b60405180910390fd5b60011515602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394799d866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e191906155dd565b151514611523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151a906156a2565b60405180910390fd5b602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320ffe2fd826040518263ffffffff1660e01b815260040161157e919061513e565b600060405180830381600087803b15801561159857600080fd5b505af11580156115ac573d6000803e3d6000fd5b5050505050565b6000806115c160135461231d565b905060135481116115d25760135490505b60155481106115e15760155490505b600061160c6013546115fe846012546130bb90919063ffffffff16565b61308f90919063ffffffff16565b905060145481111561161e5760145490505b809250505090565b6000600654600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146117f457611773826040518060400160405280601681526020017f496e73756666696369656e7420416c6c6f77616e636500000000000000000000815250600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130d19092919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6117ff848484613126565b90509392505050565b6000611885611838600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b22565b611877611866600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b22565b60065461389590919063ffffffff16565b61389590919063ffffffff16565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006009905090565b60255481565b60165481565b60008033905061190881846138ab565b915050919050565b61191933613039565b611958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194f906154d0565b60405180910390fd5b83600e8190555082600f8190555081601081905550806011819055506119ab8161199d8461198f87896130a590919063ffffffff16565b6130a590919063ffffffff16565b6130a590919063ffffffff16565b60128190555060145460125411156119c7576012546014819055505b60046013546119d691906156f1565b601254106119e357600080fd5b50505050565b60006119f782600654610ff2565b9050919050565b611a0733613039565b611a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3d906154d0565b60405180910390fd5b6103e8600654611a5691906156f1565b811015611a6257600080fd5b8060078190555050565b611a7533613039565b611ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aab906154d0565b60405180910390fd5b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b602960009054906101000a900460ff1681565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60265481565b600047905090565b60075481565b611b8833613039565b611bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bbe906154d0565b60405180910390fd5b6001600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60175481565b60606040518060400160405280600381526020017f5452460000000000000000000000000000000000000000000000000000000000815250905090565b611cbd33613039565b611cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf3906154d0565b60405180910390fd5b620186a0811115611d42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d399061553c565b60405180910390fd5b612710811015611d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7e906155a8565b60405180910390fd5b8060158190555050565b611d9a33613039565b611dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd0906154d0565b60405180910390fd5b602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398e5bfee826040518263ffffffff1660e01b8152600401611e349190614d5d565b600060405180830381600087803b158015611e4e57600080fd5b505af1158015611e62573d6000803e3d6000fd5b5050505050565b6000602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bf7d61b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efc9190615737565b905090565b602460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611f3033613039565b611f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f66906154d0565b60405180910390fd5b81601860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080601960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000612069338484613126565b905092915050565b60275481565b6120803361188a565b6120bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b69061534a565b60405180910390fd5b426025819055506120dc62015180826130bb90919063ffffffff16565b60268190555050565b60006028546027546120f79190615399565b4210905090565b6121073361188a565b612146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213d9061534a565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6121a933613039565b6121e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121df906154d0565b60405180910390fd5b80601c60006101000a81548160ff02191690831515021790555050565b60155481565b6122143361188a565b612253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224a9061534a565b60405180910390fd5b620d2f006028546027546122679190615399565b6122719190615399565b4210156122b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122aa906157d6565b60405180910390fd5b60028111156122f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ee90615842565b60405180910390fd5b4260278190555061231462015180826130bb90919063ffffffff16565b60288190555050565b600080602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b69190615737565b9050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156124b4578373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561245c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061248091906158e4565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff169150508092508193505050612588565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612587578373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255791906158e4565b826dffffffffffffffffffffffffffff169250816dffffffffffffffffffffffffffff1691505080935081925050505b5b60006125e16125a7612598611b71565b846130bb90919063ffffffff16565b6125d36125c4866125b6611808565b6130bb90919063ffffffff16565b8a6130bb90919063ffffffff16565b61308f90919063ffffffff16565b90508095505050505050919050565b601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61264533613039565b612684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161267b906154d0565b60405180910390fd5b82602960006101000a81548160ff02191690831515021790555081602a8190555080602b81905550505050565b6126ba33613039565b6126f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126f0906154d0565b60405180910390fd5b6000602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050600061275e8361275086856130bb90919063ffffffff16565b61308f90919063ffffffff16565b9050602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a50d278602460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016127df92919061545b565b600060405180830381600087803b1580156127f957600080fd5b505af115801561280d573d6000803e3d6000fd5b5050505050505050565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b602b5481565b6128ad33613039565b6128ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128e3906154d0565b60405180910390fd5b600015156128f98261188a565b15151461293b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161293290615983565b60405180910390fd5b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6fffffffffffffffffffffffffffffffff801681565b601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60145481565b6129e13361188a565b612a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a179061534a565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008115612a9257612a8b6115b3565b9050612a98565b60125490505b919050565b612aa63361188a565b612ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612adc9061534a565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616381604051612bab91906159c4565b60405180910390a150565b612bbf33613039565b612bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bf5906154d0565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015612c885750602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b612c9157600080fd5b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508015612d8357602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca968360006040518363ffffffff1660e01b8152600401612d4c929190615a1a565b600060405180830381600087803b158015612d6657600080fd5b505af1158015612d7a573d6000803e3d6000fd5b50505050612e52565b602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca9683600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b8152600401612e1f92919061545b565b600060405180830381600087803b158015612e3957600080fd5b505af1158015612e4d573d6000803e3d6000fd5b505050505b5050565b612e5f33613039565b612e9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e95906154d0565b60405180910390fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612f283361188a565b612f67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f5e9061534a565b60405180910390fd5b602654602554612f779190615399565b421015612fb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fb090615a8f565b60405180910390fd5b600047905060008273ffffffffffffffffffffffffffffffffffffffff1682604051612fe490615ae0565b60006040518083038185875af1925050503d8060008114613021576040519150601f19603f3d011682016040523d82523d6000602084013e613026565b606091505b505090508061303457600080fd5b505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000818361309d91906156f1565b905092915050565b600081836130b39190615399565b905092915050565b600081836130c99190615af5565b905092915050565b6000838311158290613119576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131109190614e11565b60405180910390fd5b5082840390509392505050565b60006131306120e5565b156132245760011515600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514806131e4575060011515600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b613223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161321a90615bc1565b60405180910390fd5b5b602c60009054906101000a900460ff161561324b57613244848484613e70565b905061388e565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156132b2576132ab84836138ab565b905061388e565b6132bc8483613fde565b6132c461407b565b156132d6576132d1614126565b6132ed565b6132de6145c2565b156132ec576132eb61466d565b5b5b613376826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130d19092919063ffffffff16565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006133c48561486f565b6133ce57826133da565b6133d98585856148eb565b5b905061342e81600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130a590919063ffffffff16565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156134c1576134ba836017546130a590919063ffffffff16565b6017819055505b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166135e457602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca9686600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016135ae92919061545b565b600060405180830381600087803b1580156135c857600080fd5b505af19250505080156135d9575060015b6135e2576135e3565b5b5b600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661370757602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca9685600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016136d192919061545b565b600060405180830381600087803b1580156136eb57600080fd5b505af19250505080156136fc575060015b61370557613706565b5b5b602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345153af86040518163ffffffff1660e01b8152600401602060405180830381865afa158015613774573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061379891906155dd565b1561382357602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bd2da9a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561380757600080fd5b505af1925050508015613818575060015b61382157613822565b5b5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516138809190614d5d565b60405180910390a360019150505b9392505050565b600081836138a39190615be1565b905092915050565b60006138b56120e5565b1561394e5760011515600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461394d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161394490615c87565b60405180910390fd5b5b600061398361395b611808565b61397585613967611b71565b6130bb90919063ffffffff16565b61308f90919063ffffffff16565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050613a35846040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130d19092919063ffffffff16565b600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613aca84600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130a590919063ffffffff16565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081613b16611ff5565b10613baf57602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a50d27886846040518363ffffffff1660e01b8152600401613b7892919061545b565b600060405180830381600087803b158015613b9257600080fd5b505af1158015613ba6573d6000803e3d6000fd5b50505050613cdc565b6000613bcb613bbc611ff5565b8461389590919063ffffffff16565b9050602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a50d27887613c14611ff5565b6040518363ffffffff1660e01b8152600401613c3192919061545b565b600060405180830381600087803b158015613c4b57600080fd5b505af1158015613c5f573d6000803e3d6000fd5b5050505060008673ffffffffffffffffffffffffffffffffffffffff1682604051613c8990615ae0565b60006040518083038185875af1925050503d8060008114613cc6576040519150601f19603f3d011682016040523d82523d6000602084013e613ccb565b606091505b5050905080613cd957600080fd5b50505b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16613dff57602360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314b6ca9686600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b8152600401613dc992919061545b565b600060405180830381600087803b158015613de357600080fd5b505af1925050508015613df4575060015b613dfd57613dfe565b5b5b8073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051613e5c9190614d5d565b60405180910390a360019250505092915050565b6000613efb826040518060400160405280601481526020017f496e73756666696369656e742042616c616e6365000000000000000000000000815250600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130d19092919063ffffffff16565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613f9082600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130a590919063ffffffff16565b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190509392505050565b600754811115806140385750600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b614077576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161406e90615cf3565b60405180910390fd5b5050565b6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156140e057506140de6120e5565b155b80156140f95750602c60009054906101000a900460ff16155b80156141115750602960009054906101000a900460ff165b80156141215750602a5460165410155b905090565b6001602c60006101000a81548160ff0219169083151502179055506000614151601d54601e5461124f565b61415d57600e54614160565b60005b905060006141a0600261419260125461418486602a546130bb90919063ffffffff16565b61308f90919063ffffffff16565b61308f90919063ffffffff16565b905060006141b982602a5461389590919063ffffffff16565b90506000600267ffffffffffffffff8111156141d8576141d7615d13565b5b6040519080825280602002602001820160405280156142065781602001602082028036833780820191505090505b509050308160008151811061421e5761421d615d42565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061428f5761428e615d42565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000479050601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac9478460008530426040518663ffffffff1660e01b8152600401614332959493929190615e2f565b600060405180830381600087803b15801561434c57600080fd5b505af1158015614360573d6000803e3d6000fd5b5050505061438160175461437330611b22565b61389590919063ffffffff16565b601681905550600061439c824761389590919063ffffffff16565b905060006143c86143b760028961308f90919063ffffffff16565b60125461389590919063ffffffff16565b9050600061440460026143f6846143e88c886130bb90919063ffffffff16565b61308f90919063ffffffff16565b61308f90919063ffffffff16565b9050600061442f83614421601154876130bb90919063ffffffff16565b61308f90919063ffffffff16565b9050600061445a8461444c600f54886130bb90919063ffffffff16565b61308f90919063ffffffff16565b90506144668282614b2f565b600089111561459b57601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d71984308c600080601860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16426040518863ffffffff1660e01b81526004016144f896959493929190615e89565b60606040518083038185885af1158015614516573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061453b9190615eff565b50505061455b60175461454d30611b22565b61389590919063ffffffff16565b6016819055507f424db2872186fa7e7afa7a5e902ed3b49a2ef19c2f5431e672462495dd6b4506838a604051614592929190615f52565b60405180910390a15b505050505050505050506000602c60006101000a81548160ff021916908315150217905550565b6000602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561462757506146256120e5565b155b80156146405750602c60009054906101000a900460ff16155b80156146585750602960009054906101000a900460ff165b80156146685750602b5460175410155b905090565b6001602c60006101000a81548160ff0219169083151502179055506000600267ffffffffffffffff8111156146a5576146a4615d13565b5b6040519080825280602002602001820160405280156146d35781602001602082028036833780820191505090505b50905030816000815181106146eb576146ea615d42565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061475c5761475b615d42565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050601f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947602b5460008430426040518663ffffffff1660e01b81526004016147fc959493929190615e2f565b600060405180830381600087803b15801561481657600080fd5b505af115801561482a573d6000803e3d6000fd5b5050505061484b60165461483d30611b22565b61389590919063ffffffff16565b601781905550506000602c60006101000a81548160ff021916908315150217905550565b6000801515601c60009054906101000a900460ff161515141561489557600090506148e6565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161590505b919050565b600080602060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050600061497260135461496461495585612a7b565b876130bb90919063ffffffff16565b61308f90919063ffffffff16565b905081156149fb5760006149a5601354614997601254886130bb90919063ffffffff16565b61308f90919063ffffffff16565b905060006149bc828461389590919063ffffffff16565b90506149d3816017546130a590919063ffffffff16565b6017819055506149ee826016546130a590919063ffffffff16565b6016819055505050614a17565b614a10816016546130a590919063ffffffff16565b6016819055505b614a6981600860003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130a590919063ffffffff16565b600860003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051614b099190614d5d565b60405180910390a3614b24818561389590919063ffffffff16565b925050509392505050565b6000602260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051614b7790615ae0565b60006040518083038185875af1925050503d8060008114614bb4576040519150601f19603f3d011682016040523d82523d6000602084013e614bb9565b606091505b5050905080614bc757600080fd5b6000614bf2601354614be4601b54876130bb90919063ffffffff16565b61308f90919063ffffffff16565b90506000614c09828661389590919063ffffffff16565b90506000601960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051614c5390615ae0565b60006040518083038185875af1925050503d8060008114614c90576040519150601f19603f3d011682016040523d82523d6000602084013e614c95565b606091505b5050905080614ca357600080fd5b6000601a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684604051614ceb90615ae0565b60006040518083038185875af1925050503d8060008114614d28576040519150601f19603f3d011682016040523d82523d6000602084013e614d2d565b606091505b5050905080614d3b57600080fd5b50505050505050565b6000819050919050565b614d5781614d44565b82525050565b6000602082019050614d726000830184614d4e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015614db2578082015181840152602081019050614d97565b83811115614dc1576000848401525b50505050565b6000601f19601f8301169050919050565b6000614de382614d78565b614ded8185614d83565b9350614dfd818560208601614d94565b614e0681614dc7565b840191505092915050565b60006020820190508181036000830152614e2b8184614dd8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000614e6382614e38565b9050919050565b614e7381614e58565b8114614e7e57600080fd5b50565b600081359050614e9081614e6a565b92915050565b614e9f81614d44565b8114614eaa57600080fd5b50565b600081359050614ebc81614e96565b92915050565b60008060408385031215614ed957614ed8614e33565b5b6000614ee785828601614e81565b9250506020614ef885828601614ead565b9150509250929050565b60008115159050919050565b614f1781614f02565b82525050565b6000602082019050614f326000830184614f0e565b92915050565b600060208284031215614f4e57614f4d614e33565b5b6000614f5c84828501614e81565b91505092915050565b60008060408385031215614f7c57614f7b614e33565b5b6000614f8a85828601614ead565b9250506020614f9b85828601614ead565b9150509250929050565b600060208284031215614fbb57614fba614e33565b5b6000614fc984828501614ead565b91505092915050565b600080600060608486031215614feb57614fea614e33565b5b6000614ff986828701614e81565b935050602061500a86828701614e81565b925050604061501b86828701614ead565b9150509250925092565b600060ff82169050919050565b61503b81615025565b82525050565b60006020820190506150566000830184615032565b92915050565b6000806000806080858703121561507657615075614e33565b5b600061508487828801614ead565b945050602061509587828801614ead565b93505060406150a687828801614ead565b92505060606150b787828801614ead565b91505092959194509250565b6150cc81614f02565b81146150d757600080fd5b50565b6000813590506150e9816150c3565b92915050565b6000806040838503121561510657615105614e33565b5b600061511485828601614e81565b9250506020615125858286016150da565b9150509250929050565b61513881614e58565b82525050565b6000602082019050615153600083018461512f565b92915050565b600080604083850312156151705761516f614e33565b5b600061517e85828601614e81565b925050602061518f85828601614e81565b9150509250929050565b6000602082840312156151af576151ae614e33565b5b60006151bd848285016150da565b91505092915050565b6000806000606084860312156151df576151de614e33565b5b60006151ed868287016150da565b93505060206151fe86828701614ead565b925050604061520f86828701614ead565b9150509250925092565b600061522482614e38565b9050919050565b61523481615219565b811461523f57600080fd5b50565b6000813590506152518161522b565b92915050565b60006020828403121561526d5761526c614e33565b5b600061527b84828501615242565b91505092915050565b6000819050919050565b60006152a96152a461529f84614e38565b615284565b614e38565b9050919050565b60006152bb8261528e565b9050919050565b60006152cd826152b0565b9050919050565b6152dd816152c2565b82525050565b60006020820190506152f860008301846152d4565b92915050565b7f214f574e45520000000000000000000000000000000000000000000000000000600082015250565b6000615334600683614d83565b915061533f826152fe565b602082019050919050565b6000602082019050818103600083015261536381615327565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006153a482614d44565b91506153af83614d44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156153e4576153e361536a565b5b828201905092915050565b7f5265776172647320706f6f6c2063757272656e746c79206c6f636b6564000000600082015250565b6000615425601d83614d83565b9150615430826153ef565b602082019050919050565b6000602082019050818103600083015261545481615418565b9050919050565b6000604082019050615470600083018561512f565b61547d6020830184614d4e565b9392505050565b7f21415554484f52495a4544000000000000000000000000000000000000000000600082015250565b60006154ba600b83614d83565b91506154c582615484565b602082019050919050565b600060208201905081810360008301526154e9816154ad565b9050919050565b7f56616c756520746f6f2068696768000000000000000000000000000000000000600082015250565b6000615526600e83614d83565b9150615531826154f0565b602082019050919050565b6000602082019050818103600083015261555581615519565b9050919050565b7f56616c756520746f6f206c6f7700000000000000000000000000000000000000600082015250565b6000615592600d83614d83565b915061559d8261555c565b602082019050919050565b600060208201905081810360008301526155c181615585565b9050919050565b6000815190506155d7816150c3565b92915050565b6000602082840312156155f3576155f2614e33565b5b6000615601848285016155c8565b91505092915050565b7f43616e6e6f74206368616e6765206469766964656e6420746f6b656e2061667460008201527f65722074686520666972737420646973747269627574696f6e2068617320737460208201527f6172746564000000000000000000000000000000000000000000000000000000604082015250565b600061568c604583614d83565b91506156978261560a565b606082019050919050565b600060208201905081810360008301526156bb8161567f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006156fc82614d44565b915061570783614d44565b925082615717576157166156c2565b5b828204905092915050565b60008151905061573181614e6a565b92915050565b60006020828403121561574d5761574c614e33565b5b600061575b84828501615722565b91505092915050565b7f4e6f7420656e6f7567682064617973207061737365642073696e6365206c617360008201527f7420706175736500000000000000000000000000000000000000000000000000602082015250565b60006157c0602783614d83565b91506157cb82615764565b604082019050919050565b600060208201905081810360008301526157ef816157b3565b9050919050565b7f4465736972656420706175736520746f6f206c6f6e6700000000000000000000600082015250565b600061582c601683614d83565b9150615837826157f6565b602082019050919050565b6000602082019050818103600083015261585b8161581f565b9050919050565b60006dffffffffffffffffffffffffffff82169050919050565b61588581615862565b811461589057600080fd5b50565b6000815190506158a28161587c565b92915050565b600063ffffffff82169050919050565b6158c1816158a8565b81146158cc57600080fd5b50565b6000815190506158de816158b8565b92915050565b6000806000606084860312156158fd576158fc614e33565b5b600061590b86828701615893565b935050602061591c86828701615893565b925050604061592d868287016158cf565b9150509250925092565b7f4552523a206f776e65722063616e277420626520696e636c7564656400000000600082015250565b600061596d601c83614d83565b915061597882615937565b602082019050919050565b6000602082019050818103600083015261599c81615960565b9050919050565b60006159ae826152b0565b9050919050565b6159be816159a3565b82525050565b60006020820190506159d960008301846159b5565b92915050565b6000819050919050565b6000615a046159ff6159fa846159df565b615284565b614d44565b9050919050565b615a14816159e9565b82525050565b6000604082019050615a2f600083018561512f565b615a3c6020830184615a0b565b9392505050565b7f417373657420706f6f6c2063757272656e746c79206c6f636b65640000000000600082015250565b6000615a79601b83614d83565b9150615a8482615a43565b602082019050919050565b60006020820190508181036000830152615aa881615a6c565b9050919050565b600081905092915050565b50565b6000615aca600083615aaf565b9150615ad582615aba565b600082019050919050565b6000615aeb82615abd565b9150819050919050565b6000615b0082614d44565b9150615b0b83614d44565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615b4457615b4361536a565b5b828202905092915050565b7f5741524e494e473a20636f6e747261637420697320696e20706175736520666f60008201527f72206d61696e74656e616e636500000000000000000000000000000000000000602082015250565b6000615bab602d83614d83565b9150615bb682615b4f565b604082019050919050565b60006020820190508181036000830152615bda81615b9e565b9050919050565b6000615bec82614d44565b9150615bf783614d44565b925082821015615c0a57615c0961536a565b5b828203905092915050565b7f5741524e494e473a20636f6e747261637420697320696e20706175736520666f60008201527f7220757067726164650000000000000000000000000000000000000000000000602082015250565b6000615c71602983614d83565b9150615c7c82615c15565b604082019050919050565b60006020820190508181036000830152615ca081615c64565b9050919050565b7f5458204c696d6974204578636565646564000000000000000000000000000000600082015250565b6000615cdd601183614d83565b9150615ce882615ca7565b602082019050919050565b60006020820190508181036000830152615d0c81615cd0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b615da681614e58565b82525050565b6000615db88383615d9d565b60208301905092915050565b6000602082019050919050565b6000615ddc82615d71565b615de68185615d7c565b9350615df183615d8d565b8060005b83811015615e22578151615e098882615dac565b9750615e1483615dc4565b925050600181019050615df5565b5085935050505092915050565b600060a082019050615e446000830188614d4e565b615e516020830187615a0b565b8181036040830152615e638186615dd1565b9050615e72606083018561512f565b615e7f6080830184614d4e565b9695505050505050565b600060c082019050615e9e600083018961512f565b615eab6020830188614d4e565b615eb86040830187615a0b565b615ec56060830186615a0b565b615ed2608083018561512f565b615edf60a0830184614d4e565b979650505050505050565b600081519050615ef981614e96565b92915050565b600080600060608486031215615f1857615f17614e33565b5b6000615f2686828701615eea565b9350506020615f3786828701615eea565b9250506040615f4886828701615eea565b9150509250925092565b6000604082019050615f676000830185614d4e565b615f746020830184614d4e565b939250505056fea26469706673582212203b5e38015e4eb754ec67e8d2f537cc862e8c0672a842ef86e40f29402ae1a0ff64736f6c634300080b0033608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061027f806100606000396000f3fe6080604052600436106100225760003560e01c80632a50d2781461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906101c3565b610057565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100af57600080fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516100d590610234565b60006040518083038185875af1925050503d8060008114610112576040519150601f19603f3d011682016040523d82523d6000602084013e610117565b606091505b505090508061012557600080fd5b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015a8261012f565b9050919050565b61016a8161014f565b811461017557600080fd5b50565b60008135905061018781610161565b92915050565b6000819050919050565b6101a08161018d565b81146101ab57600080fd5b50565b6000813590506101bd81610197565b92915050565b600080604083850312156101da576101d961012a565b5b60006101e885828601610178565b92505060206101f9858286016101ae565b9150509250929050565b600081905092915050565b50565b600061021e600083610203565b91506102298261020e565b600082019050919050565b600061023f82610211565b915081905091905056fea26469706673582212206815312ded3cdd387033cfeeacdeba5fb73c59d86a7b2a30642717421461e4ce64736f6c634300080b0033608060405273bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506ec097ce7bc90715b34b9f1000000000600c556000600d556001600f60016101000a81548160ff0219169083151502179055503480156200009957600080fd5b5060405162001f1538038062001f158339818101604052810190620000bf9190620002aa565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000110577310ed43c718714eb63d5aa57b78b54704e256024e62000112565b825b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600e819055506000600f60006101000a81548160ff02191690831515021790555050505062000306565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002728262000245565b9050919050565b620002848162000265565b81146200029057600080fd5b50565b600081519050620002a48162000279565b92915050565b600080600060608486031215620002c657620002c562000240565b5b6000620002d68682870162000293565b9350506020620002e98682870162000293565b9250506040620002fc8682870162000293565b9150509250925092565b611bff80620003166000396000f3fe6080604052600436106100ec5760003560e01c80637bf7d61b1161008a578063997664d711610059578063997664d7146106da578063ce7c2ac214610705578063e2d2e21914610744578063efca2eed1461076f57610504565b80637bf7d61b146106445780638bd2da9a1461066f57806394799d861461068657806398e5bfee146106b157610504565b806328fd3198116100c657806328fd3198146105865780633a98ef39146105c357806345153af8146105ee5780634fab0ae81461061957610504565b806311ce023d1461050957806314b6ca961461053457806320ffe2fd1461055d57610504565b3661050457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014b57600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101a891906114f1565b602060405180830381865afa1580156101c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e99190611547565b90506000600267ffffffffffffffff81111561020857610207611574565b5b6040519080825280602002602001820160405280156102365781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106102705761026f6115a3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106102e1576102e06115a3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6f9de953460008430426040518663ffffffff1660e01b815260040161037e94939291906116e4565b6000604051808303818588803b15801561039757600080fd5b505af11580156103ab573d6000803e3d6000fd5b5050505050600061046083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161041191906114f1565b602060405180830381865afa15801561042e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104529190611547565b61079a90919063ffffffff16565b9050610477816009546107b090919063ffffffff16565b6009819055506104ba6104a960085461049b84600c546107c690919063ffffffff16565b6107dc90919063ffffffff16565b600b546107b090919063ffffffff16565b600b81905550600e546010819055506001600f60006101000a81548160ff0219169083151502179055506000600f60016101000a81548160ff021916908315150217905550505050005b600080fd5b34801561051557600080fd5b5061051e6107f2565b60405161052b9190611730565b60405180910390f35b34801561054057600080fd5b5061055b6004803603810190610556919061178c565b6107f8565b005b34801561056957600080fd5b50610584600480360381019061057f91906117cc565b610ab7565b005b34801561059257600080fd5b506105ad60048036038101906105a891906117cc565b610ba9565b6040516105ba9190611730565b60405180910390f35b3480156105cf57600080fd5b506105d8610cc3565b6040516105e59190611730565b60405180910390f35b3480156105fa57600080fd5b50610603610cc9565b6040516106109190611814565b60405180910390f35b34801561062557600080fd5b5061062e610cdc565b60405161063b9190611730565b60405180910390f35b34801561065057600080fd5b50610659610ce2565b60405161066691906114f1565b60405180910390f35b34801561067b57600080fd5b50610684610d0c565b005b34801561069257600080fd5b5061069b610ead565b6040516106a89190611814565b60405180910390f35b3480156106bd57600080fd5b506106d860048036038101906106d3919061182f565b610ec0565b005b3480156106e657600080fd5b506106ef610f22565b6040516106fc9190611730565b60405180910390f35b34801561071157600080fd5b5061072c600480360381019061072791906117cc565b610f28565b60405161073b9392919061185c565b60405180910390f35b34801561075057600080fd5b50610759610f52565b6040516107669190611730565b60405180910390f35b34801561077b57600080fd5b50610784610f58565b6040516107919190611730565b60405180910390f35b600081836107a891906118c2565b905092915050565b600081836107be91906118f6565b905092915050565b600081836107d4919061194c565b905092915050565b600081836107ea91906119d5565b905092915050565b600c5481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461085057600080fd5b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411156108a5576108a482610f5e565b5b6000811180156108f757506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b1561090a57610905826111b2565b61096c565b60008114801561095c57506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154115b1561096b5761096a82611261565b5b5b6109d5816109c7600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015460085461079a90919063ffffffff16565b6107b090919063ffffffff16565b60088190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550610a6d600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611468565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0f57600080fd5b60011515600f60019054906101000a900460ff16151514610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c90611aaf565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610bfe5760009050610cbe565b6000610c4b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611468565b90506000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050808211610ca657600092505050610cbe565b610cb9818361079a90919063ffffffff16565b925050505b919050565b60085481565b600f60009054906101000a900460ff1681565b600d5481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6457600080fd5b600060058054905090506000811415610d7d5750610eab565b60001515600f60009054906101000a900460ff1615151415610d9f5750610eab565b60005b6004811015610ea85781600e5410610dbd576000600e819055505b610e066005600e5481548110610dd657610dd56115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661149a565b15610e5557610e546005600e5481548110610e2457610e236115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f5e565b5b600e6000815480929190610e6890611acf565b91905055508080610e7890611acf565b915050601054600e541415610ea3576000600f60006101000a81548160ff0219169083151502179055505b610da2565b50505b565b600f60019054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f1857600080fd5b80600d8190555050565b60095481565b60076020528060005260406000206000915090508060000154908060010154908060020154905083565b600b5481565b600a5481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610fae576111af565b6000610fb982610ba9565b905060008111156111ad57610fd981600a546107b090919063ffffffff16565b600a81905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161103c929190611b18565b6020604051808303816000875af115801561105b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107f9190611b6d565b506110d581600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546107b090919063ffffffff16565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550611166600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611468565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b505b50565b600580549050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6005600160058054905061127591906118c2565b81548110611286576112856115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481548110611304576113036115a3565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460066000600560016005805490506113a491906118c2565b815481106113b5576113b46115a3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060058054806114305761142f611b9a565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b6000611493600c54611485600b54856107c690919063ffffffff16565b6107dc90919063ffffffff16565b9050919050565b6000600d546114a883610ba9565b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114db826114b0565b9050919050565b6114eb816114d0565b82525050565b600060208201905061150660008301846114e2565b92915050565b600080fd5b6000819050919050565b61152481611511565b811461152f57600080fd5b50565b6000815190506115418161151b565b92915050565b60006020828403121561155d5761155c61150c565b5b600061156b84828501611532565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6000819050919050565b60006116016115fc6115f7846115d2565b6115dc565b611511565b9050919050565b611611816115e6565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61164c816114d0565b82525050565b600061165e8383611643565b60208301905092915050565b6000602082019050919050565b600061168282611617565b61168c8185611622565b935061169783611633565b8060005b838110156116c85781516116af8882611652565b97506116ba8361166a565b92505060018101905061169b565b5085935050505092915050565b6116de81611511565b82525050565b60006080820190506116f96000830187611608565b818103602083015261170b8186611677565b905061171a60408301856114e2565b61172760608301846116d5565b95945050505050565b600060208201905061174560008301846116d5565b92915050565b611754816114d0565b811461175f57600080fd5b50565b6000813590506117718161174b565b92915050565b6000813590506117868161151b565b92915050565b600080604083850312156117a3576117a261150c565b5b60006117b185828601611762565b92505060206117c285828601611777565b9150509250929050565b6000602082840312156117e2576117e161150c565b5b60006117f084828501611762565b91505092915050565b60008115159050919050565b61180e816117f9565b82525050565b60006020820190506118296000830184611805565b92915050565b6000602082840312156118455761184461150c565b5b600061185384828501611777565b91505092915050565b600060608201905061187160008301866116d5565b61187e60208301856116d5565b61188b60408301846116d5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118cd82611511565b91506118d883611511565b9250828210156118eb576118ea611893565b5b828203905092915050565b600061190182611511565b915061190c83611511565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561194157611940611893565b5b828201905092915050565b600061195782611511565b915061196283611511565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561199b5761199a611893565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119e082611511565b91506119eb83611511565b9250826119fb576119fa6119a6565b5b828204905092915050565b600082825260208201905092915050565b7f43616e6e6f74206368616e6765206469766964656e6420746f6b656e2061667460008201527f65722074686520666972737420646973747269627574696f6e2068617320737460208201527f6172746564000000000000000000000000000000000000000000000000000000604082015250565b6000611a99604583611a06565b9150611aa482611a17565b606082019050919050565b60006020820190508181036000830152611ac881611a8c565b9050919050565b6000611ada82611511565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b0d57611b0c611893565b5b600182019050919050565b6000604082019050611b2d60008301856114e2565b611b3a60208301846116d5565b9392505050565b611b4a816117f9565b8114611b5557600080fd5b50565b600081519050611b6781611b41565b92915050565b600060208284031215611b8357611b8261150c565b5b6000611b9184828501611b58565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122034740ff4bda85b06c00bf54c8a9f9e3e049aacb674c838f7f9fb42e3e52c635264736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDEAD PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDEAD PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0xA PUSH3 0x131 SWAP2 SWAP1 PUSH3 0xFA9 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 PUSH3 0x145 SWAP2 SWAP1 PUSH3 0xFFA JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH3 0x166 PUSH2 0x190 PUSH1 0x6 SLOAD PUSH3 0xCCF PUSH1 0x20 SHL PUSH3 0x308F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0xC8 PUSH1 0xE SSTORE PUSH1 0xC8 PUSH1 0xF SSTORE PUSH1 0xC8 PUSH1 0x10 SSTORE PUSH1 0xC8 PUSH1 0x11 SSTORE PUSH3 0x1D1 PUSH1 0x11 SLOAD PUSH3 0x1BD PUSH1 0x10 SLOAD PUSH3 0x1A9 PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH3 0xCE7 PUSH1 0x20 SHL PUSH3 0x30A5 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCE7 PUSH1 0x20 SHL PUSH3 0x30A5 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xCE7 PUSH1 0x20 SHL PUSH3 0x30A5 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH2 0x2710 PUSH1 0x13 SSTORE PUSH2 0x1388 PUSH1 0x14 SSTORE PUSH2 0xC350 PUSH1 0x15 SSTORE PUSH20 0xF6BF36933149030ED4B212F0A79872306690E48E PUSH1 0x1A PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1F4 PUSH1 0x1B SSTORE PUSH1 0x1 PUSH1 0x1C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x19 PUSH1 0x1D SSTORE PUSH1 0x64 PUSH1 0x1E SSTORE PUSH1 0x1 PUSH1 0x29 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x7D0 PUSH1 0x6 SLOAD PUSH3 0x293 SWAP2 SWAP1 PUSH3 0x108A JUMP JUMPDEST PUSH1 0x2A SSTORE PUSH2 0x1F40 PUSH1 0x6 SLOAD PUSH3 0x2A8 SWAP2 SWAP1 PUSH3 0x108A JUMP JUMPDEST PUSH1 0x2B SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x9475 CODESIZE SUB DUP1 PUSH3 0x9475 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x2DE SWAP2 SWAP1 PUSH3 0x112C JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP DUP3 PUSH1 0x1F PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x426 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x44C SWAP2 SWAP1 PUSH3 0x1188 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4AA SWAP3 SWAP2 SWAP1 PUSH3 0x11CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x4CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4F0 SWAP2 SWAP1 PUSH3 0x1188 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x9 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x643 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x669 SWAP2 SWAP1 PUSH3 0x1188 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH3 0x6B7 SWAP1 PUSH3 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x6D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x21 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x22 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH3 0x7AB SWAP1 PUSH3 0xE01 JUMP JUMPDEST PUSH3 0x7B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x7D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x23 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x24 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x19 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xBDE DUP4 PUSH1 0x6 SLOAD PUSH3 0xCFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xC15 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 SLOAD PUSH3 0xCFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH3 0xCBE SWAP2 SWAP1 PUSH3 0x1246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH3 0x12C0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xCDF SWAP2 SWAP1 PUSH3 0x108A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xCF7 SWAP2 SWAP1 PUSH3 0x1263 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH3 0xDE1 SWAP2 SWAP1 PUSH3 0x1246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DF DUP1 PUSH3 0x7281 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F15 DUP1 PUSH3 0x7560 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xE9D JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xE75 JUMPI PUSH3 0xE74 PUSH3 0xE0F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xE85 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xE95 DUP6 PUSH3 0xE3E JUMP JUMPDEST SWAP5 POP PUSH3 0xE55 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xEB8 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xF8B JUMP JUMPDEST DUP2 PUSH3 0xEC8 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xF8B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xEE1 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xEEC JUMPI PUSH3 0xF22 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xF8B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xF01 JUMPI PUSH3 0xF00 PUSH3 0xE0F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xF1B JUMPI PUSH3 0xF1A PUSH3 0xE0F JUMP JUMPDEST JUMPDEST POP PUSH3 0xF8B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xF5C JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xF56 JUMPI PUSH3 0xF55 PUSH3 0xE0F JUMP JUMPDEST JUMPDEST PUSH3 0xF8B JUMP JUMPDEST PUSH3 0xF6B DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xE4B JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xF85 JUMPI PUSH3 0xF84 PUSH3 0xE0F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFB6 DUP3 PUSH3 0xF92 JUMP JUMPDEST SWAP2 POP PUSH3 0xFC3 DUP4 PUSH3 0xF9C JUMP JUMPDEST SWAP3 POP PUSH3 0xFF2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xEA6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1007 DUP3 PUSH3 0xF92 JUMP JUMPDEST SWAP2 POP PUSH3 0x1014 DUP4 PUSH3 0xF92 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x1050 JUMPI PUSH3 0x104F PUSH3 0xE0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1097 DUP3 PUSH3 0xF92 JUMP JUMPDEST SWAP2 POP PUSH3 0x10A4 DUP4 PUSH3 0xF92 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x10B7 JUMPI PUSH3 0x10B6 PUSH3 0x105B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10F4 DUP3 PUSH3 0x10C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1106 DUP2 PUSH3 0x10E7 JUMP JUMPDEST DUP2 EQ PUSH3 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1126 DUP2 PUSH3 0x10FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1148 JUMPI PUSH3 0x1147 PUSH3 0x10C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1158 DUP7 DUP3 DUP8 ADD PUSH3 0x1115 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x116B DUP7 DUP3 DUP8 ADD PUSH3 0x1115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x117E DUP7 DUP3 DUP8 ADD PUSH3 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x11A1 JUMPI PUSH3 0x11A0 PUSH3 0x10C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x11B1 DUP5 DUP3 DUP6 ADD PUSH3 0x1115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x11C5 DUP2 PUSH3 0x10E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x11E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x11BA JUMP JUMPDEST PUSH3 0x11F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x11BA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x120F PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x11BA JUMP JUMPDEST PUSH3 0x121E PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x11BA JUMP JUMPDEST PUSH3 0x122D PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x11BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x1240 DUP2 PUSH3 0xF92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x125D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1270 DUP3 PUSH3 0xF92 JUMP JUMPDEST SWAP2 POP PUSH3 0x127D DUP4 PUSH3 0xF92 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x12B5 JUMPI PUSH3 0x12B4 PUSH3 0xE0F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FB1 DUP1 PUSH3 0x12D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3DD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98E5BFEE GT PUSH2 0x1FD JUMPI DUP1 PUSH4 0xCCE85055 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xEFE25AD2 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xF708A64F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF708A64F EQ PUSH2 0xEC6 JUMPI DUP1 PUSH4 0xF84BA65D EQ PUSH2 0xEEF JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0xF18 JUMPI DUP1 PUSH4 0xFB4193BE EQ PUSH2 0xF43 JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0xF6C JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xEFE25AD2 EQ PUSH2 0xE0C JUMPI DUP1 PUSH4 0xF0B37C04 EQ PUSH2 0xE37 JUMPI DUP1 PUSH4 0xF1F3BCA3 EQ PUSH2 0xE60 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9D JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xE2163851 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xE2163851 EQ PUSH2 0xD62 JUMPI DUP1 PUSH4 0xE2482606 EQ PUSH2 0xD8D JUMPI DUP1 PUSH4 0xE91F214E EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0xE96FADA2 EQ PUSH2 0xDE1 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xCCE85055 EQ PUSH2 0xCA8 JUMPI DUP1 PUSH4 0xD0889358 EQ PUSH2 0xCD3 JUMPI DUP1 PUSH4 0xD717C918 EQ PUSH2 0xCFC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xD25 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xAF7A2458 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0xBBEA13D4 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0xBBEA13D4 EQ PUSH2 0xBEC JUMPI DUP1 PUSH4 0xC2852F38 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0xC8E02934 EQ PUSH2 0xC40 JUMPI DUP1 PUSH4 0xCA33E64C EQ PUSH2 0xC7D JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xAF7A2458 EQ PUSH2 0xB46 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0xB9A JUMPI DUP1 PUSH4 0xB7BFFF65 EQ PUSH2 0xBC3 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xA69C17E0 GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0xA69C17E0 EQ PUSH2 0xA88 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xADE JUMPI DUP1 PUSH4 0xAD84F341 EQ PUSH2 0xB1B JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x98E5BFEE EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x9E061B48 EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0xA26BD13C EQ PUSH2 0xA34 JUMPI DUP1 PUSH4 0xA4B45C00 EQ PUSH2 0xA5F JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x3FF942CE GT PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x748A9DC2 GT PUSH2 0x28B JUMPI DUP1 PUSH4 0x893D20E8 GT PUSH2 0x25A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x936 JUMPI DUP1 PUSH4 0x94DA3E86 EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x98C JUMPI DUP1 PUSH4 0x95DAB460 EQ PUSH2 0x9B7 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x748A9DC2 EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0x75EAD12B EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0x7D1DB4A5 EQ PUSH2 0x8B7 JUMPI DUP1 PUSH4 0x885BD9EE EQ PUSH2 0x8E2 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x5C85974F GT PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x5C85974F EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0x658D4B7F EQ PUSH2 0x7D0 JUMPI DUP1 PUSH4 0x6DDD1713 EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x824 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x3FF942CE EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0x51D016F5 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x563BF54D EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0x571AC8B0 EQ PUSH2 0x76A JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x201E7991 GT PUSH2 0x370 JUMPI DUP1 PUSH4 0x2B112E49 GT PUSH2 0x33F JUMPI DUP1 PUSH4 0x2B112E49 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0x367FF4A7 EQ PUSH2 0x6AE JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x201E7991 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x20FFE2FD EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x2138CE01 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5DE JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x9CFC486 GT PUSH2 0x3AC JUMPI DUP1 PUSH4 0x9CFC486 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x1161AE39 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x19FBE385 EQ PUSH2 0x538 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x15CB3FF EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x445B667 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x46A JUMPI PUSH2 0x3E4 JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E4 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x4EC2 JUMP JUMPDEST PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x10E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C8 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x4FD2 JUMP JUMPDEST PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x630 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x188A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x698 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x5041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EE PUSH2 0x18F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x768 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x1910 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x791 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x19FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x50EF JUMP JUMPDEST PUSH2 0x1A6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80E PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x876 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8CC PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x909 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x904 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x1B7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x920 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92D SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94B PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x976 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x1CB4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA07 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1E PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA49 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x5159 JUMP JUMPDEST PUSH2 0x1F27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9D PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC8 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB05 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x4EC2 JUMP JUMPDEST PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB30 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x2077 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB84 PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB91 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x20FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x21A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC01 PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x220B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC67 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x231D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC92 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCBD PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x51C6 JUMP JUMPDEST PUSH2 0x263C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD23 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH2 0x26B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD47 SWAP2 SWAP1 PUSH2 0x5159 JUMP JUMPDEST PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD59 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD77 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x28A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDCB PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF6 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE21 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE5E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x29D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE94 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x5257 JUMP JUMPDEST PUSH2 0x2A9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x50EF JUMP JUMPDEST PUSH2 0x2BB6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF16 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x50EF JUMP JUMPDEST PUSH2 0x2E56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2D PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x52E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x2F1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x28 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B69667920526973696E6720466C6F6F7200000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10ED CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1123 SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x25 SLOAD PUSH2 0x113C SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x117E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1175 SWAP1 PUSH2 0x543B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12BB PUSH2 0x125D PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x129E PUSH1 0x2 PUSH2 0x1290 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12D7 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130D SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1388 DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1352 SWAP1 PUSH2 0x553C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD DUP2 LT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1397 SWAP1 PUSH2 0x55A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x14 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x13B3 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x13F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1D DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1E DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x140D CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1443 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94799D86 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x55DD JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151A SWAP1 PUSH2 0x56A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x20FFE2FD DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15C1 PUSH1 0x13 SLOAD PUSH2 0x231D JUMP JUMPDEST SWAP1 POP PUSH1 0x13 SLOAD DUP2 GT PUSH2 0x15D2 JUMPI PUSH1 0x13 SLOAD SWAP1 POP JUMPDEST PUSH1 0x15 SLOAD DUP2 LT PUSH2 0x15E1 JUMPI PUSH1 0x15 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x160C PUSH1 0x13 SLOAD PUSH2 0x15FE DUP5 PUSH1 0x12 SLOAD PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x14 SLOAD DUP2 GT ISZERO PUSH2 0x161E JUMPI PUSH1 0x14 SLOAD SWAP1 POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x17F4 JUMPI PUSH2 0x1773 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E7420416C6C6F77616E636500000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x17FF DUP5 DUP5 DUP5 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1885 PUSH2 0x1838 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x1877 PUSH2 0x1866 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x25 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x1908 DUP2 DUP5 PUSH2 0x38AB JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1919 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194F SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xF DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x10 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0x19AB DUP2 PUSH2 0x199D DUP5 PUSH2 0x198F DUP8 DUP10 PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE POP PUSH1 0x14 SLOAD PUSH1 0x12 SLOAD GT ISZERO PUSH2 0x19C7 JUMPI PUSH1 0x12 SLOAD PUSH1 0x14 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 PUSH1 0x13 SLOAD PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x56F1 JUMP JUMPDEST PUSH1 0x12 SLOAD LT PUSH2 0x19E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F7 DUP3 PUSH1 0x6 SLOAD PUSH2 0xFF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A07 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1A46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3D SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x6 SLOAD PUSH2 0x1A56 SWAP2 SWAP1 PUSH2 0x56F1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1A75 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1AB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAB SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x29 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x26 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B88 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1BC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBE SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5452460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CBD CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1CFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF3 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 DUP2 GT ISZERO PUSH2 0x1D42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D39 SWAP1 PUSH2 0x553C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7E SWAP1 PUSH2 0x55A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x15 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1D9A CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1DD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD0 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x98E5BFEE DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E34 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7BF7D61B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ED8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EFC SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F30 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F66 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x19 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2069 CALLER DUP5 DUP5 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x27 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2080 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x20BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B6 SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x25 DUP2 SWAP1 SSTORE POP PUSH2 0x20DC PUSH3 0x15180 DUP3 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x26 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x28 SLOAD PUSH1 0x27 SLOAD PUSH2 0x20F7 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2107 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2146 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213D SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x21A9 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x21E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21DF SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2214 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224A SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD2F00 PUSH1 0x28 SLOAD PUSH1 0x27 SLOAD PUSH2 0x2267 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST PUSH2 0x2271 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22AA SWAP1 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22EE SWAP1 PUSH2 0x5842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x27 DUP2 SWAP1 SSTORE POP PUSH2 0x2314 PUSH3 0x15180 DUP3 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x28 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2392 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24B4 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x245C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2480 SWAP2 SWAP1 PUSH2 0x58E4 JUMP JUMPDEST DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x2588 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2587 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2557 SWAP2 SWAP1 PUSH2 0x58E4 JUMP JUMPDEST DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25E1 PUSH2 0x25A7 PUSH2 0x2598 PUSH2 0x1B71 JUMP JUMPDEST DUP5 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25D3 PUSH2 0x25C4 DUP7 PUSH2 0x25B6 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP11 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2645 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x2684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x267B SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x29 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2A DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2B DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x26BA CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x26F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26F0 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x275E DUP4 PUSH2 0x2750 DUP7 DUP6 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 PUSH1 0x24 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27DF SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x280D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28AD CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x28EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E3 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x28F9 DUP3 PUSH2 0x188A JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x293B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2932 SWAP1 PUSH2 0x5983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29E1 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2A20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A17 SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2A92 JUMPI PUSH2 0x2A8B PUSH2 0x15B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AA6 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2AE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ADC SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x4DBA622D284ED0014EE4B9A6A68386BE1A4C08A4913AE272DE89199CC686163 DUP2 PUSH1 0x40 MLOAD PUSH2 0x2BAB SWAP2 SWAP1 PUSH2 0x59C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2BBF CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x2BFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BF5 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2C88 JUMPI POP PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x2C91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2D83 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4C SWAP3 SWAP2 SWAP1 PUSH2 0x5A1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP4 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1F SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2E5F CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x2E9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E95 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2F28 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2F67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5E SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x25 SLOAD PUSH2 0x2F77 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2FB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB0 SWAP1 PUSH2 0x5A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2FE4 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3021 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x309D SWAP2 SWAP1 PUSH2 0x56F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30B3 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30C9 SWAP2 SWAP1 PUSH2 0x5AF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3110 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3130 PUSH2 0x20E5 JUMP JUMPDEST ISZERO PUSH2 0x3224 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 PUSH2 0x31E4 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x3223 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321A SWAP1 PUSH2 0x5BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x2C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x324B JUMPI PUSH2 0x3244 DUP5 DUP5 DUP5 PUSH2 0x3E70 JUMP JUMPDEST SWAP1 POP PUSH2 0x388E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32AB DUP5 DUP4 PUSH2 0x38AB JUMP JUMPDEST SWAP1 POP PUSH2 0x388E JUMP JUMPDEST PUSH2 0x32BC DUP5 DUP4 PUSH2 0x3FDE JUMP JUMPDEST PUSH2 0x32C4 PUSH2 0x407B JUMP JUMPDEST ISZERO PUSH2 0x32D6 JUMPI PUSH2 0x32D1 PUSH2 0x4126 JUMP JUMPDEST PUSH2 0x32ED JUMP JUMPDEST PUSH2 0x32DE PUSH2 0x45C2 JUMP JUMPDEST ISZERO PUSH2 0x32EC JUMPI PUSH2 0x32EB PUSH2 0x466D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3376 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x33C4 DUP6 PUSH2 0x486F JUMP JUMPDEST PUSH2 0x33CE JUMPI DUP3 PUSH2 0x33DA JUMP JUMPDEST PUSH2 0x33D9 DUP6 DUP6 DUP6 PUSH2 0x48EB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x342E DUP2 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x34C1 JUMPI PUSH2 0x34BA DUP4 PUSH1 0x17 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x35E4 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP7 PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35AE SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x35D9 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x35E2 JUMPI PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3707 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP6 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D1 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x36FC JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3705 JUMPI PUSH2 0x3706 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x45153AF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3774 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3798 SWAP2 SWAP1 PUSH2 0x55DD JUMP JUMPDEST ISZERO PUSH2 0x3823 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8BD2DA9A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3818 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3821 JUMPI PUSH2 0x3822 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3880 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x38A3 SWAP2 SWAP1 PUSH2 0x5BE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B5 PUSH2 0x20E5 JUMP JUMPDEST ISZERO PUSH2 0x394E JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x394D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3944 SWAP1 PUSH2 0x5C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3983 PUSH2 0x395B PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x3975 DUP6 PUSH2 0x3967 PUSH2 0x1B71 JUMP JUMPDEST PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x3A35 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3ACA DUP5 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH2 0x3B16 PUSH2 0x1FF5 JUMP JUMPDEST LT PUSH2 0x3BAF JUMPI PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 DUP7 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B78 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x3CDC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BCB PUSH2 0x3BBC PUSH2 0x1FF5 JUMP JUMPDEST DUP5 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 DUP8 PUSH2 0x3C14 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C31 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3C89 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3CC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3CCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3DFF JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP7 PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC9 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3DF4 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3DFD JUMPI PUSH2 0x3DFE JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x3E5C SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EFB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3F90 DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO DUP1 PUSH2 0x4038 JUMPI POP PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x4077 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406E SWAP1 PUSH2 0x5CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x40E0 JUMPI POP PUSH2 0x40DE PUSH2 0x20E5 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x40F9 JUMPI POP PUSH1 0x2C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4111 JUMPI POP PUSH1 0x29 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4121 JUMPI POP PUSH1 0x2A SLOAD PUSH1 0x16 SLOAD LT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x4151 PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH2 0x124F JUMP JUMPDEST PUSH2 0x415D JUMPI PUSH1 0xE SLOAD PUSH2 0x4160 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x41A0 PUSH1 0x2 PUSH2 0x4192 PUSH1 0x12 SLOAD PUSH2 0x4184 DUP7 PUSH1 0x2A SLOAD PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x41B9 DUP3 PUSH1 0x2A SLOAD PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41D8 JUMPI PUSH2 0x41D7 PUSH2 0x5D13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4206 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x421E JUMPI PUSH2 0x421D PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x428F JUMPI PUSH2 0x428E PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x791AC947 DUP5 PUSH1 0x0 DUP6 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4332 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x434C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4360 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4381 PUSH1 0x17 SLOAD PUSH2 0x4373 ADDRESS PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x439C DUP3 SELFBALANCE PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x43C8 PUSH2 0x43B7 PUSH1 0x2 DUP10 PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4404 PUSH1 0x2 PUSH2 0x43F6 DUP5 PUSH2 0x43E8 DUP13 DUP9 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x442F DUP4 PUSH2 0x4421 PUSH1 0x11 SLOAD DUP8 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x445A DUP5 PUSH2 0x444C PUSH1 0xF SLOAD DUP9 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4466 DUP3 DUP3 PUSH2 0x4B2F JUMP JUMPDEST PUSH1 0x0 DUP10 GT ISZERO PUSH2 0x459B JUMPI PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 DUP5 ADDRESS DUP13 PUSH1 0x0 DUP1 PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44F8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E89 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x453B SWAP2 SWAP1 PUSH2 0x5EFF JUMP JUMPDEST POP POP POP PUSH2 0x455B PUSH1 0x17 SLOAD PUSH2 0x454D ADDRESS PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP PUSH32 0x424DB2872186FA7E7AFA7A5E902ED3B49A2EF19C2F5431E672462495DD6B4506 DUP4 DUP11 PUSH1 0x40 MLOAD PUSH2 0x4592 SWAP3 SWAP2 SWAP1 PUSH2 0x5F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4627 JUMPI POP PUSH2 0x4625 PUSH2 0x20E5 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4640 JUMPI POP PUSH1 0x2C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4658 JUMPI POP PUSH1 0x29 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4668 JUMPI POP PUSH1 0x2B SLOAD PUSH1 0x17 SLOAD LT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46A5 JUMPI PUSH2 0x46A4 PUSH2 0x5D13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x46D3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46EB JUMPI PUSH2 0x46EA PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x475C JUMPI PUSH2 0x475B PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x791AC947 PUSH1 0x2B SLOAD PUSH1 0x0 DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47FC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x482A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x484B PUSH1 0x16 SLOAD PUSH2 0x483D ADDRESS PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x1C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x4895 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x48E6 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0x4972 PUSH1 0x13 SLOAD PUSH2 0x4964 PUSH2 0x4955 DUP6 PUSH2 0x2A7B JUMP JUMPDEST DUP8 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x49FB JUMPI PUSH1 0x0 PUSH2 0x49A5 PUSH1 0x13 SLOAD PUSH2 0x4997 PUSH1 0x12 SLOAD DUP9 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x49BC DUP3 DUP5 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x49D3 DUP2 PUSH1 0x17 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP PUSH2 0x49EE DUP3 PUSH1 0x16 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x4A17 JUMP JUMPDEST PUSH2 0x4A10 DUP2 PUSH1 0x16 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x4A69 DUP2 PUSH1 0x8 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4B09 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4B24 DUP2 DUP6 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4B77 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4BB4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4BB9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4BF2 PUSH1 0x13 SLOAD PUSH2 0x4BE4 PUSH1 0x1B SLOAD DUP8 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C09 DUP3 DUP7 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x19 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4C53 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4C90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CEB SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4D2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4D3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D57 DUP2 PUSH2 0x4D44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D97 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4DC1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE3 DUP3 PUSH2 0x4D78 JUMP JUMPDEST PUSH2 0x4DED DUP2 DUP6 PUSH2 0x4D83 JUMP JUMPDEST SWAP4 POP PUSH2 0x4DFD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D94 JUMP JUMPDEST PUSH2 0x4E06 DUP2 PUSH2 0x4DC7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E2B DUP2 DUP5 PUSH2 0x4DD8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E63 DUP3 PUSH2 0x4E38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E73 DUP2 PUSH2 0x4E58 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E90 DUP2 PUSH2 0x4E6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E9F DUP2 PUSH2 0x4D44 JUMP JUMPDEST DUP2 EQ PUSH2 0x4EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4EBC DUP2 PUSH2 0x4E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4ED9 JUMPI PUSH2 0x4ED8 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4EE7 DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4EF8 DUP6 DUP3 DUP7 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F17 DUP2 PUSH2 0x4F02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F4E JUMPI PUSH2 0x4F4D PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F5C DUP5 DUP3 DUP6 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F7C JUMPI PUSH2 0x4F7B PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F8A DUP6 DUP3 DUP7 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4F9B DUP6 DUP3 DUP7 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FBB JUMPI PUSH2 0x4FBA PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FC9 DUP5 DUP3 DUP6 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4FEB JUMPI PUSH2 0x4FEA PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FF9 DUP7 DUP3 DUP8 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x500A DUP7 DUP3 DUP8 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x501B DUP7 DUP3 DUP8 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x503B DUP2 PUSH2 0x5025 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5056 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5076 JUMPI PUSH2 0x5075 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5084 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x5095 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x50A6 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x50B7 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x50CC DUP2 PUSH2 0x4F02 JUMP JUMPDEST DUP2 EQ PUSH2 0x50D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50E9 DUP2 PUSH2 0x50C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5106 JUMPI PUSH2 0x5105 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5114 DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5125 DUP6 DUP3 DUP7 ADD PUSH2 0x50DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5138 DUP2 PUSH2 0x4E58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5153 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x512F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5170 JUMPI PUSH2 0x516F PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x517E DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x518F DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51AF JUMPI PUSH2 0x51AE PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51BD DUP5 DUP3 DUP6 ADD PUSH2 0x50DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x51DF JUMPI PUSH2 0x51DE PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51ED DUP7 DUP3 DUP8 ADD PUSH2 0x50DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x51FE DUP7 DUP3 DUP8 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x520F DUP7 DUP3 DUP8 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5224 DUP3 PUSH2 0x4E38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5234 DUP2 PUSH2 0x5219 JUMP JUMPDEST DUP2 EQ PUSH2 0x523F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5251 DUP2 PUSH2 0x522B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x526D JUMPI PUSH2 0x526C PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x527B DUP5 DUP3 DUP6 ADD PUSH2 0x5242 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A9 PUSH2 0x52A4 PUSH2 0x529F DUP5 PUSH2 0x4E38 JUMP JUMPDEST PUSH2 0x5284 JUMP JUMPDEST PUSH2 0x4E38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52BB DUP3 PUSH2 0x528E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52CD DUP3 PUSH2 0x52B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52DD DUP2 PUSH2 0x52C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x52F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x52D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x214F574E45520000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5334 PUSH1 0x6 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x533F DUP3 PUSH2 0x52FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5363 DUP2 PUSH2 0x5327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x53A4 DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x53AF DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x53E4 JUMPI PUSH2 0x53E3 PUSH2 0x536A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265776172647320706F6F6C2063757272656E746C79206C6F636B6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5425 PUSH1 0x1D DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5430 DUP3 PUSH2 0x53EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5454 DUP2 PUSH2 0x5418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5470 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x547D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x21415554484F52495A4544000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54BA PUSH1 0xB DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x54C5 DUP3 PUSH2 0x5484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54E9 DUP2 PUSH2 0x54AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F2068696768000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5526 PUSH1 0xE DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5531 DUP3 PUSH2 0x54F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5555 DUP2 PUSH2 0x5519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F206C6F7700000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5592 PUSH1 0xD DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x559D DUP3 PUSH2 0x555C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55C1 DUP2 PUSH2 0x5585 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x55D7 DUP2 PUSH2 0x50C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55F3 JUMPI PUSH2 0x55F2 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5601 DUP5 DUP3 DUP6 ADD PUSH2 0x55C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206368616E6765206469766964656E6420746F6B656E20616674 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65722074686520666972737420646973747269627574696F6E20686173207374 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6172746564000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568C PUSH1 0x45 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5697 DUP3 PUSH2 0x560A JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56BB DUP2 PUSH2 0x567F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x56FC DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x5707 DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5717 JUMPI PUSH2 0x5716 PUSH2 0x56C2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5731 DUP2 PUSH2 0x4E6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x574D JUMPI PUSH2 0x574C PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x575B DUP5 DUP3 DUP6 ADD PUSH2 0x5722 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682064617973207061737365642073696E6365206C6173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420706175736500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C0 PUSH1 0x27 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x57CB DUP3 PUSH2 0x5764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57EF DUP2 PUSH2 0x57B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465736972656420706175736520746F6F206C6F6E6700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582C PUSH1 0x16 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5837 DUP3 PUSH2 0x57F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x585B DUP2 PUSH2 0x581F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5885 DUP2 PUSH2 0x5862 JUMP JUMPDEST DUP2 EQ PUSH2 0x5890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58A2 DUP2 PUSH2 0x587C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58C1 DUP2 PUSH2 0x58A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x58CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58DE DUP2 PUSH2 0x58B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58FD JUMPI PUSH2 0x58FC PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x590B DUP7 DUP3 DUP8 ADD PUSH2 0x5893 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x591C DUP7 DUP3 DUP8 ADD PUSH2 0x5893 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x592D DUP7 DUP3 DUP8 ADD PUSH2 0x58CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4552523A206F776E65722063616E277420626520696E636C7564656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596D PUSH1 0x1C DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5978 DUP3 PUSH2 0x5937 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x599C DUP2 PUSH2 0x5960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59AE DUP3 PUSH2 0x52B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59BE DUP2 PUSH2 0x59A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A04 PUSH2 0x59FF PUSH2 0x59FA DUP5 PUSH2 0x59DF JUMP JUMPDEST PUSH2 0x5284 JUMP JUMPDEST PUSH2 0x4D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A14 DUP2 PUSH2 0x59E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5A2F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5A3C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5A0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x417373657420706F6F6C2063757272656E746C79206C6F636B65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A79 PUSH1 0x1B DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A84 DUP3 PUSH2 0x5A43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AA8 DUP2 PUSH2 0x5A6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ACA PUSH1 0x0 DUP4 PUSH2 0x5AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x5AD5 DUP3 PUSH2 0x5ABA JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AEB DUP3 PUSH2 0x5ABD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B00 DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B0B DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5B44 JUMPI PUSH2 0x5B43 PUSH2 0x536A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5741524E494E473A20636F6E747261637420697320696E20706175736520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206D61696E74656E616E636500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BAB PUSH1 0x2D DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BB6 DUP3 PUSH2 0x5B4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5BDA DUP2 PUSH2 0x5B9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BEC DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BF7 DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C0A JUMPI PUSH2 0x5C09 PUSH2 0x536A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5741524E494E473A20636F6E747261637420697320696E20706175736520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7220757067726164650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C71 PUSH1 0x29 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C7C DUP3 PUSH2 0x5C15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CA0 DUP2 PUSH2 0x5C64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5458204C696D6974204578636565646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CDD PUSH1 0x11 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CE8 DUP3 PUSH2 0x5CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D0C DUP2 PUSH2 0x5CD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DA6 DUP2 PUSH2 0x4E58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DB8 DUP4 DUP4 PUSH2 0x5D9D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DDC DUP3 PUSH2 0x5D71 JUMP JUMPDEST PUSH2 0x5DE6 DUP2 DUP6 PUSH2 0x5D7C JUMP JUMPDEST SWAP4 POP PUSH2 0x5DF1 DUP4 PUSH2 0x5D8D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E22 JUMPI DUP2 MLOAD PUSH2 0x5E09 DUP9 DUP3 PUSH2 0x5DAC JUMP JUMPDEST SWAP8 POP PUSH2 0x5E14 DUP4 PUSH2 0x5DC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DF5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5E44 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4D4E JUMP JUMPDEST PUSH2 0x5E51 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x5A0B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5E63 DUP2 DUP7 PUSH2 0x5DD1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E72 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5E7F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x5E9E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5EAB PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4D4E JUMP JUMPDEST PUSH2 0x5EB8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x5A0B JUMP JUMPDEST PUSH2 0x5EC5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5A0B JUMP JUMPDEST PUSH2 0x5ED2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5EDF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5EF9 DUP2 PUSH2 0x4E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5F18 JUMPI PUSH2 0x5F17 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5F26 DUP7 DUP3 DUP8 ADD PUSH2 0x5EEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5F37 DUP7 DUP3 DUP8 ADD PUSH2 0x5EEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5F48 DUP7 DUP3 DUP8 ADD PUSH2 0x5EEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5F67 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D4E JUMP JUMPDEST PUSH2 0x5F74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x5E CODESIZE ADD 0x5E 0x4E 0xB7 SLOAD 0xEC PUSH8 0xE8D2F537CC862E8C MOD PUSH19 0xA842EF86E40F29402AE1A0FF64736F6C634300 ADDMOD SIGNEXTEND STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x27F DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A50D278 EQ PUSH2 0x2E JUMPI PUSH2 0x29 JUMP JUMPDEST CALLDATASIZE PUSH2 0x29 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP1 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x117 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A DUP3 PUSH2 0x12F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x14F JUMP JUMPDEST DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x187 DUP2 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x18D JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD DUP2 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DA JUMPI PUSH2 0x1D9 PUSH2 0x12A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E8 DUP6 DUP3 DUP7 ADD PUSH2 0x178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F9 DUP6 DUP3 DUP7 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E PUSH1 0x0 DUP4 PUSH2 0x203 JUMP JUMPDEST SWAP2 POP PUSH2 0x229 DUP3 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F DUP3 PUSH2 0x211 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x15312DED3CDD387033 0xCF 0xEE 0xAC 0xDE 0xBA 0x5F 0xB7 EXTCODECOPY MSIZE 0xD8 PUSH11 0x7B2A30642717421461E4CE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH1 0xC SSTORE PUSH1 0x0 PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0xF PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F15 CODESIZE SUB DUP1 PUSH3 0x1F15 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xBF SWAP2 SWAP1 PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x110 JUMPI PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E PUSH3 0x112 JUMP JUMPDEST DUP3 JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x306 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x272 DUP3 PUSH3 0x245 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x284 DUP2 PUSH3 0x265 JUMP JUMPDEST DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A4 DUP2 PUSH3 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2C6 JUMPI PUSH3 0x2C5 PUSH3 0x240 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D6 DUP7 DUP3 DUP8 ADD PUSH3 0x293 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2E9 DUP7 DUP3 DUP8 ADD PUSH3 0x293 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2FC DUP7 DUP3 DUP8 ADD PUSH3 0x293 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1BFF DUP1 PUSH3 0x316 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF7D61B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x997664D7 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x997664D7 EQ PUSH2 0x6DA JUMPI DUP1 PUSH4 0xCE7C2AC2 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0xE2D2E219 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xEFCA2EED EQ PUSH2 0x76F JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x7BF7D61B EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x8BD2DA9A EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x94799D86 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x98E5BFEE EQ PUSH2 0x6B1 JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x28FD3198 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x28FD3198 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x45153AF8 EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0x4FAB0AE8 EQ PUSH2 0x619 JUMPI PUSH2 0x504 JUMP JUMPDEST DUP1 PUSH4 0x11CE023D EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x14B6CA96 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x20FFE2FD EQ PUSH2 0x55D JUMPI PUSH2 0x504 JUMP JUMPDEST CALLDATASIZE PUSH2 0x504 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH2 0x207 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x236 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x270 JUMPI PUSH2 0x26F PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E1 JUMPI PUSH2 0x2E0 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6F9DE95 CALLVALUE PUSH1 0x0 DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0x460 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x477 DUP2 PUSH1 0x9 SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0x4BA PUSH2 0x4A9 PUSH1 0x8 SLOAD PUSH2 0x49B DUP5 PUSH1 0xC SLOAD PUSH2 0x7C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xF PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51E PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x7F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D8 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E5 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x603 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH2 0xCDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x684 PUSH2 0xD0C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69B PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EF PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x759 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x784 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7EA SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x8A5 JUMPI PUSH2 0x8A4 DUP3 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x8F7 JUMPI POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x90A JUMPI PUSH2 0x905 DUP3 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x96C JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 ISZERO PUSH2 0x95C JUMPI POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A DUP3 PUSH2 0x1261 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0x9C7 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xA6D PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xF PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5C SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4B PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP1 DUP3 GT PUSH2 0xCA6 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xCBE JUMP JUMPDEST PUSH2 0xCB9 DUP2 DUP4 PUSH2 0x79A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xD7D JUMPI POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xD9F JUMPI POP PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xEA8 JUMPI DUP2 PUSH1 0xE SLOAD LT PUSH2 0xDBD JUMPI PUSH1 0x0 PUSH1 0xE DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xE06 PUSH1 0x5 PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xDD6 JUMPI PUSH2 0xDD5 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x149A JUMP JUMPDEST ISZERO PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH1 0x5 PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE68 SWAP1 PUSH2 0x1ACF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0xE78 SWAP1 PUSH2 0x1ACF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x10 SLOAD PUSH1 0xE SLOAD EQ ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xDA2 JUMP JUMPDEST POP POP JUMPDEST JUMP JUMPDEST PUSH1 0xF PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xFAE JUMPI PUSH2 0x11AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 DUP3 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x11AD JUMPI PUSH2 0xFD9 DUP2 PUSH1 0xA SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103C SWAP3 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST POP PUSH2 0x10D5 DUP2 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x7B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1166 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1286 JUMPI PUSH2 0x1285 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1304 JUMPI PUSH2 0x1303 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x13A4 SWAP2 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH2 0x1430 JUMPI PUSH2 0x142F PUSH2 0x1B9A JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1493 PUSH1 0xC SLOAD PUSH2 0x1485 PUSH1 0xB SLOAD DUP6 PUSH2 0x7C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x14A8 DUP4 PUSH2 0xBA9 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DB DUP3 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EB DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1506 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1524 DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP2 EQ PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1541 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155D JUMPI PUSH2 0x155C PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x156B DUP5 DUP3 DUP6 ADD PUSH2 0x1532 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1601 PUSH2 0x15FC PUSH2 0x15F7 DUP5 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x1511 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1611 DUP2 PUSH2 0x15E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164C DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165E DUP4 DUP4 PUSH2 0x1643 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1682 DUP3 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x168C DUP2 DUP6 PUSH2 0x1622 JUMP JUMPDEST SWAP4 POP PUSH2 0x1697 DUP4 PUSH2 0x1633 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C8 JUMPI DUP2 MLOAD PUSH2 0x16AF DUP9 DUP3 PUSH2 0x1652 JUMP JUMPDEST SWAP8 POP PUSH2 0x16BA DUP4 PUSH2 0x166A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x169B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DE DUP2 PUSH2 0x1511 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16F9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1608 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x170B DUP2 DUP7 PUSH2 0x1677 JUMP JUMPDEST SWAP1 POP PUSH2 0x171A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x1727 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1745 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1754 DUP2 PUSH2 0x14D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1771 DUP2 PUSH2 0x174B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1786 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A3 JUMPI PUSH2 0x17A2 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F0 DUP5 DUP3 DUP6 ADD PUSH2 0x1762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180E DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1829 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1805 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1844 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1853 DUP5 DUP3 DUP6 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1871 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x187E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x188B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18CD DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D8 DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x18EB JUMPI PUSH2 0x18EA PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x190C DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1957 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x1962 DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x1893 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19E0 DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EB DUP4 PUSH2 0x1511 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x19A6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206368616E6765206469766964656E6420746F6B656E20616674 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65722074686520666972737420646973747269627574696F6E20686173207374 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6172746564000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A99 PUSH1 0x45 DUP4 PUSH2 0x1A06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA4 DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC8 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADA DUP3 PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1B0D JUMPI PUSH2 0x1B0C PUSH2 0x1893 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B2D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x1B3A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B4A DUP2 PUSH2 0x17F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B67 DUP2 PUSH2 0x1B41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B83 JUMPI PUSH2 0x1B82 PUSH2 0x150C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B91 DUP5 DUP3 DUP6 ADD PUSH2 0x1B58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH21 0xFF4BDA85B06C00BF54C8A9F9E3E049AACB674C838 0xF7 0xF9 0xFB TIMESTAMP 0xE3 0xE5 0x2C PUSH4 0x5264736F PUSH13 0x634300080B0033000000000000 ",
              "sourceMap": "12618:25724:0:-:0;;;12777:42;12755:64;;;;;;;;;;;;;;;;;;;;12840:42;12825:57;;;;;;;;;;;;;;;;;;;;12903:42;12888:57;;;;;;;;;;;;;;;;;;;;12979:42;12951:70;;;;;;;;;;;;;;;;;;;;13144:1;13201:2;:15;;;;:::i;:::-;13176:21;:41;;;;:::i;:::-;13153:64;;13253:21;13270:3;13253:12;;:16;;;;;;:21;;;;:::i;:::-;13223:51;;13689:3;13666:26;;13786:3;13765:24;;13904:3;13883:24;;14009:3;13986:26;;14037:62;14086:12;;14037:44;14070:10;;14037:28;14054:10;;14037:12;;:16;;;;;;:28;;;;:::i;:::-;:32;;;;;;:44;;;;:::i;:::-;:48;;;;;;:62;;;;:::i;:::-;14018:81;;14205:5;14180:30;;14244:4;14216:32;;14289:5;14254:40;;14500:42;14469:73;;;;;;;;;;;;;;;;;;;;14571:3;14548:26;;14668:4;14647:25;;;;;;;;;;;;;;;;;;;;14706:2;14680:28;;14751:3;14714:40;;15347:4;15321:30;;;;;;;;;;;;;;;;;;;;15403:4;15388:12;;:19;;;;:::i;:::-;15357:50;;15475:4;15460:12;;:19;;;;:::i;:::-;15422:57;;15577:1429;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15709:10;1832:6;1824:5;;:14;;;;;;;;;;;;;;;;;;1873:4;1848:14;:22;1863:6;1848:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1786:98;15807:10:::1;15787:6;;:31;;;;;;;;;;;;;;;;;;15847:6;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15835:40;;;15876:4;;;;;;;;;;;15890;15835:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15828:4;;:68;;;;;;;;;;;;;;;;;;15952:12;;15906:11;:26;15926:4;15906:26;;;;;;;;;;;;;;;:43;15941:6;;;;;;;;;;;15906:43;;;;;;;;;;;;;;;:58;;;;15981:6;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15974:4;;:20;;;;;;;;;;;;;;;;;;16082:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;16068:11;;:31;;;;;;;;;;;;;;;;;;16138:11;;;;;;;;;;;16109:18;;:41;;;;;;;;;;;;;;;;;;16283:10;16295:19;16316:18;;;;;;;;;;;16259:76;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;16237:19;;:98;;;;;;;;;;;;;;;;;;16382:19;;;;;;;;;;;16345:26;;:57;;;;;;;;;;;;;;;;;;16440:4;16414:11;:23;16426:10;16414:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;16488:4;16454:19;:31;16474:10;16454:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;16532:4;16502:15;:27;16518:10;16502:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;16571:4;16546:16;:22;16563:4;;;;;;;;;;;16546:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16619:4;16585:16;:31;16610:4;16585:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;16658:4;16633:16;:22;16650:4;;;;;;;;;;;16633:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16697:4;16672:16;:22;16689:4;;;;;;;;;;;16672:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16737:10;16713:21;;:34;;;;;;;;;;;;;;;;;;16780:21;16757:20;;:44;;;;;;;;;;;;;;;;;;16813:33;16821:10;16833:12;;16813:7;;;:33;;:::i;:::-;;16856:36;16872:4;;;;;;;;;;;16879:12;;16856:7;;;:36;;:::i;:::-;;16926:12;;16902:9;:21;16912:10;16902:21;;;;;;;;;;;;;;;:36;;;;16974:10;16953:46;;16970:1;16953:46;;;16986:12;;16953:46;;;;;;:::i;:::-;;;;;;;;15577:1429:::0;;;12618:25724;;463:96;521:7;551:1;547;:5;;;;:::i;:::-;540:12;;463:96;;;;:::o;154:::-;212:7;242:1;238;:5;;;;:::i;:::-;231:12;;154:96;;;;:::o;17734:212::-;17809:4;17860:6;17825:11;:23;17837:10;17825:23;;;;;;;;;;;;;;;:32;17849:7;17825:32;;;;;;;;;;;;;;;:41;;;;17902:7;17881:37;;17890:10;17881:37;;;17911:6;17881:37;;;;;;:::i;:::-;;;;;;;;17935:4;17928:11;;17734:212;;;;:::o;12618:25724::-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:348::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2981:1;2913:66;2909:74;2906:1;2903:81;2898:1;2891:9;2884:17;2880:105;2877:131;;;2988:18;;:::i;:::-;2877:131;3036:1;3033;3029:9;3018:20;;2696:348;;;;:::o;3050:180::-;3098:77;3095:1;3088:88;3195:4;3192:1;3185:15;3219:4;3216:1;3209:15;3236:185;3276:1;3293:20;3311:1;3293:20;:::i;:::-;3288:25;;3327:20;3345:1;3327:20;:::i;:::-;3322:25;;3366:1;3356:35;;3371:18;;:::i;:::-;3356:35;3413:1;3410;3406:9;3401:14;;3236:185;;;;:::o;3508:117::-;3617:1;3614;3607:12;3754:126;3791:7;3831:42;3824:5;3820:54;3809:65;;3754:126;;;:::o;3886:96::-;3923:7;3952:24;3970:5;3952:24;:::i;:::-;3941:35;;3886:96;;;:::o;3988:122::-;4061:24;4079:5;4061:24;:::i;:::-;4054:5;4051:35;4041:63;;4100:1;4097;4090:12;4041:63;3988:122;:::o;4116:143::-;4173:5;4204:6;4198:13;4189:22;;4220:33;4247:5;4220:33;:::i;:::-;4116:143;;;;:::o;4265:663::-;4353:6;4361;4369;4418:2;4406:9;4397:7;4393:23;4389:32;4386:119;;;4424:79;;:::i;:::-;4386:119;4544:1;4569:64;4625:7;4616:6;4605:9;4601:22;4569:64;:::i;:::-;4559:74;;4515:128;4682:2;4708:64;4764:7;4755:6;4744:9;4740:22;4708:64;:::i;:::-;4698:74;;4653:129;4821:2;4847:64;4903:7;4894:6;4883:9;4879:22;4847:64;:::i;:::-;4837:74;;4792:129;4265:663;;;;;:::o;4934:351::-;5004:6;5053:2;5041:9;5032:7;5028:23;5024:32;5021:119;;;5059:79;;:::i;:::-;5021:119;5179:1;5204:64;5260:7;5251:6;5240:9;5236:22;5204:64;:::i;:::-;5194:74;;5150:128;4934:351;;;;:::o;5291:118::-;5378:24;5396:5;5378:24;:::i;:::-;5373:3;5366:37;5291:118;;:::o;5415:332::-;5536:4;5574:2;5563:9;5559:18;5551:26;;5587:71;5655:1;5644:9;5640:17;5631:6;5587:71;:::i;:::-;5668:72;5736:2;5725:9;5721:18;5712:6;5668:72;:::i;:::-;5415:332;;;;;:::o;5753:442::-;5902:4;5940:2;5929:9;5925:18;5917:26;;5953:71;6021:1;6010:9;6006:17;5997:6;5953:71;:::i;:::-;6034:72;6102:2;6091:9;6087:18;6078:6;6034:72;:::i;:::-;6116;6184:2;6173:9;6169:18;6160:6;6116:72;:::i;:::-;5753:442;;;;;;:::o;6201:118::-;6288:24;6306:5;6288:24;:::i;:::-;6283:3;6276:37;6201:118;;:::o;6325:222::-;6418:4;6456:2;6445:9;6441:18;6433:26;;6469:71;6537:1;6526:9;6522:17;6513:6;6469:71;:::i;:::-;6325:222;;;;:::o;6553:305::-;6593:3;6612:20;6630:1;6612:20;:::i;:::-;6607:25;;6646:20;6664:1;6646:20;:::i;:::-;6641:25;;6800:1;6732:66;6728:74;6725:1;6722:81;6719:107;;;6806:18;;:::i;:::-;6719:107;6850:1;6847;6843:9;6836:16;;6553:305;;;;:::o;12618:25724:0:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@MASK_1164": {
                  "entryPoint": 10646,
                  "id": 1164,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@WBNB_1167": {
                  "entryPoint": 7243,
                  "id": 1167,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_1515": {
                  "entryPoint": null,
                  "id": 1515,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_basicTransfer_1911": {
                  "entryPoint": 15984,
                  "id": 1911,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@_burnForBNB_3366": {
                  "entryPoint": 14507,
                  "id": 3366,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_maxTxAmount_1199": {
                  "entryPoint": 7033,
                  "id": 1199,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_transferFrom_1874": {
                  "entryPoint": 12582,
                  "id": 1874,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@add_16": {
                  "entryPoint": 12453,
                  "id": 16,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@allowance_1590": {
                  "entryPoint": 10263,
                  "id": 1590,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approveMax_1632": {
                  "entryPoint": 6633,
                  "id": 1632,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@approve_1619": {
                  "entryPoint": 4082,
                  "id": 1619,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@assetPoolLockTime_1306": {
                  "entryPoint": 7019,
                  "id": 1306,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@assetPoolLockTimestamp_1304": {
                  "entryPoint": 6380,
                  "id": 1304,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@authorize_233": {
                  "entryPoint": 8446,
                  "id": 233,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@autoLiquidityReceiver_1269": {
                  "entryPoint": 9712,
                  "id": 1269,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@balanceOf_1573": {
                  "entryPoint": 6946,
                  "id": 1573,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@baseTaxesAccumulated_1265": {
                  "entryPoint": 6386,
                  "id": 1265,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@burnForBNB_3230": {
                  "entryPoint": 6392,
                  "id": 3230,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@checkTxLimit_1930": {
                  "entryPoint": 16350,
                  "id": 1930,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@decimals_1533": {
                  "entryPoint": 6371,
                  "id": 1533,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@div_58": {
                  "entryPoint": 12431,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@dividendDistributorAddress_1302": {
                  "entryPoint": 7937,
                  "id": 1302,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@excludeFromPause_3113": {
                  "entryPoint": 7039,
                  "id": 3113,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@getAmountBNBInAssetPool_3005": {
                  "entryPoint": 7025,
                  "id": 3005,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getAmountBNBInRewardsPool_3015": {
                  "entryPoint": 8181,
                  "id": 3015,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getCirculatingSupply_2932": {
                  "entryPoint": 6152,
                  "id": 2932,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getCurrentGapRatio_2080": {
                  "entryPoint": 8989,
                  "id": 2080,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getDividendTokenAddress_3025": {
                  "entryPoint": 7785,
                  "id": 3025,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getOwner_1560": {
                  "entryPoint": 7202,
                  "id": 1560,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getSellMultipliedFee_2003": {
                  "entryPoint": 5555,
                  "id": 2003,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTotalFee_2097": {
                  "entryPoint": 10875,
                  "id": 2097,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@includeInPause_3137": {
                  "entryPoint": 10404,
                  "id": 3137,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@isAuthorized_274": {
                  "entryPoint": 12345,
                  "id": 274,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isOverLiquified_2959": {
                  "entryPoint": 4687,
                  "id": 2959,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@isOwner_261": {
                  "entryPoint": 6282,
                  "id": 261,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isPaused_3098": {
                  "entryPoint": 8421,
                  "id": 3098,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@lockAssetRewardPools_3045": {
                  "entryPoint": 8311,
                  "id": 3045,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@marketingFeeReceiver_1271": {
                  "entryPoint": 10668,
                  "id": 1271,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@maxSellFee_1260": {
                  "entryPoint": 10706,
                  "id": 1260,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@maxSellMultiplier_1263": {
                  "entryPoint": 8709,
                  "id": 1263,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@moveAssetPool_3180": {
                  "entryPoint": 12063,
                  "id": 3180,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@moveRewardPool_3211": {
                  "entryPoint": 4324,
                  "id": 3211,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@mul_44": {
                  "entryPoint": 12475,
                  "id": 44,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@name_1551": {
                  "entryPoint": 4021,
                  "id": 1551,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pair_1292": {
                  "entryPoint": 8246,
                  "id": 1292,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@pauseContract_3085": {
                  "entryPoint": 8715,
                  "id": 3085,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@pauseTime_1310": {
                  "entryPoint": 4009,
                  "id": 1310,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@pauseTimestamp_1308": {
                  "entryPoint": 8305,
                  "id": 1308,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@payoutFractionOfRewardsPool_2992": {
                  "entryPoint": 9905,
                  "id": 2992,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@rewardsPoolAddress_1297": {
                  "entryPoint": 9750,
                  "id": 1297,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@router_1290": {
                  "entryPoint": 12025,
                  "id": 1290,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sellingSwapThreshold_1324": {
                  "entryPoint": 10398,
                  "id": 1324,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sellingTaxAccumulated_1267": {
                  "entryPoint": 7281,
                  "id": 1267,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sendSwappedBNB_2579": {
                  "entryPoint": 19247,
                  "id": 2579,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setDistributionCriteria_2913": {
                  "entryPoint": 7569,
                  "id": 2913,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setDividendToken_2624": {
                  "entryPoint": 5124,
                  "id": 2624,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setFeeActive_2899": {
                  "entryPoint": 8608,
                  "id": 2899,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setFeeReceivers_2842": {
                  "entryPoint": 7975,
                  "id": 2842,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setFeesWithDenominator10000_2823": {
                  "entryPoint": 6416,
                  "id": 2823,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@setIsDividendExempt_2728": {
                  "entryPoint": 11190,
                  "id": 2728,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setIsFeeExempt_2745": {
                  "entryPoint": 6764,
                  "id": 2745,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setIsTxLimitExempt_2762": {
                  "entryPoint": 11862,
                  "id": 2762,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setMaxSellFeeDenominator10000_2651": {
                  "entryPoint": 4814,
                  "id": 2651,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setMaxSellMultiplierDenominator10000_2678": {
                  "entryPoint": 7348,
                  "id": 2678,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setSwapBackSettings_2867": {
                  "entryPoint": 9788,
                  "id": 2867,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@setTargetLiquidity_2886": {
                  "entryPoint": 5034,
                  "id": 2886,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setTxLimit_2600": {
                  "entryPoint": 6654,
                  "id": 2600,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@shouldSwapBackSelling_2446": {
                  "entryPoint": 17858,
                  "id": 2446,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@shouldSwapBack_2225": {
                  "entryPoint": 16507,
                  "id": 2225,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@shouldTakeFee_1951": {
                  "entryPoint": 18543,
                  "id": 1951,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@sub_30": {
                  "entryPoint": 14485,
                  "id": 30,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@sub_82": {
                  "entryPoint": 12497,
                  "id": 82,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@swapBackSelling_2505": {
                  "entryPoint": 18029,
                  "id": 2505,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@swapBack_2422": {
                  "entryPoint": 16678,
                  "id": 2422,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@swapEnabled_1314": {
                  "entryPoint": 6927,
                  "id": 1314,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@swapThreshold_1319": {
                  "entryPoint": 4015,
                  "id": 1319,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@symbol_1542": {
                  "entryPoint": 7287,
                  "id": 1542,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@takeFee_2201": {
                  "entryPoint": 18667,
                  "id": 2201,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@totalSupply_1524": {
                  "entryPoint": 4804,
                  "id": 1524,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_1697": {
                  "entryPoint": 5670,
                  "id": 1697,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transferOwnership_297": {
                  "entryPoint": 10909,
                  "id": 297,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transfer_1650": {
                  "entryPoint": 8284,
                  "id": 1650,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@unauthorize_248": {
                  "entryPoint": 10712,
                  "id": 248,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_t_address": {
                  "entryPoint": 20097,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 22306,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_address_payable": {
                  "entryPoint": 21058,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool": {
                  "entryPoint": 20698,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 21960,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint112_fromMemory": {
                  "entryPoint": 22675,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 20141,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 24298,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint32_fromMemory": {
                  "entryPoint": 22735,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 20280,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 22327,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_payable": {
                  "entryPoint": 21079,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 20825,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 20434,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_bool": {
                  "entryPoint": 20719,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 20162,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bool": {
                  "entryPoint": 20889,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 21981,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_boolt_uint256t_uint256": {
                  "entryPoint": 20934,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
                  "entryPoint": 22756,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 20389,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_uint256": {
                  "entryPoint": 20325,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
                  "entryPoint": 24319,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256": {
                  "entryPoint": 20572,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_encodeUpdatedPos_t_address_to_t_address": {
                  "entryPoint": 23980,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_payable_to_t_address_fromStack": {
                  "entryPoint": 22965,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_address_to_t_address": {
                  "entryPoint": 23965,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 20783,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 24017,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 20238,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_contract$_IDEXRouter_$385_to_t_address_fromStack": {
                  "entryPoint": 21204,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
                  "entryPoint": 23051,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 19928,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 23760,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 22451,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 21785,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 21528,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 22559,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 21893,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 23652,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 23454,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 21287,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                  "entryPoint": 23229,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 22143,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 21677,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 22880,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 23148,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 19790,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_uint8_to_t_uint8_fromStack": {
                  "entryPoint": 20530,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 23264,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 20798,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
                  "entryPoint": 22980,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 23066,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 21595,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 24201,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 20253,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IDEXRouter_$385__to_t_address__fromStack_reversed": {
                  "entryPoint": 21219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 19985,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 23795,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 22486,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 21820,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 21563,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 22594,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 21928,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 23687,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 23489,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 21322,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 22178,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 21712,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 22915,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 23183,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 19805,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 24111,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": 24402,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": 20545,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 23949,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 23921,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_string_memory_ptr": {
                  "entryPoint": 19832,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 24004,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 23932,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                  "entryPoint": 23215,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 19843,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 21401,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 22257,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 23285,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 23521,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 20056,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_address_payable": {
                  "entryPoint": 21017,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 20226,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_0_by_1": {
                  "entryPoint": 23007,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint112": {
                  "entryPoint": 22626,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 20024,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 19780,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint32": {
                  "entryPoint": 22696,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint8": {
                  "entryPoint": 20517,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_address_payable_to_t_address": {
                  "entryPoint": 22947,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_contract$_IDEXRouter_$385_to_t_address": {
                  "entryPoint": 21186,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_0_by_1_to_t_uint256": {
                  "entryPoint": 23017,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_address": {
                  "entryPoint": 21168,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_uint160": {
                  "entryPoint": 21134,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory": {
                  "entryPoint": 19860,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 21124,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 21354,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 22210,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 23874,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 23827,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 20019,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 19911,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "store_literal_in_memory_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99": {
                  "entryPoint": 23719,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29": {
                  "entryPoint": 22372,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb": {
                  "entryPoint": 21744,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2": {
                  "entryPoint": 21487,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6": {
                  "entryPoint": 22518,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297": {
                  "entryPoint": 21852,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118": {
                  "entryPoint": 23573,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1": {
                  "entryPoint": 23375,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558": {
                  "entryPoint": 21246,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
                  "entryPoint": 23226,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475": {
                  "entryPoint": 22026,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0": {
                  "entryPoint": 21636,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5": {
                  "entryPoint": 22839,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d": {
                  "entryPoint": 23107,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 20074,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address_payable": {
                  "entryPoint": 21035,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_bool": {
                  "entryPoint": 20675,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint112": {
                  "entryPoint": 22652,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 20118,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint32": {
                  "entryPoint": 22712,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:35339:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "52:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "62:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "73:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "62:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "44:7:1",
                            "type": ""
                          }
                        ],
                        "src": "7:77:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "155:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "172:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "195:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "177:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "177:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "165:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "165:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "165:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "143:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "150:3:1",
                            "type": ""
                          }
                        ],
                        "src": "90:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "312:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "322:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "334:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "345:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "330:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "322:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "402:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "415:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "426:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "411:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "411:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "358:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "284:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "296:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "307:4:1",
                            "type": ""
                          }
                        ],
                        "src": "214:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "501:40:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "512:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "528:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "522:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "522:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "484:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "494:6:1",
                            "type": ""
                          }
                        ],
                        "src": "442:99:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "643:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "660:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "665:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "653:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "653:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "653:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "681:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "700:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "705:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "696:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "696:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "681:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "615:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "620:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "631:11:1",
                            "type": ""
                          }
                        ],
                        "src": "547:169:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "771:258:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "781:10:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "790:1:1",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "785:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "850:63:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "875:3:1"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "880:1:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "871:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "871:11:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "894:3:1"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "899:1:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "890:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "890:11:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "884:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "884:18:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "864:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "864:39:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "864:39:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "811:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "814:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "808:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "808:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "822:19:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "824:15:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "833:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "836:2:1",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "829:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "829:10:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "824:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "804:3:1",
                                "statements": []
                              },
                              "src": "800:113:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "947:76:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "997:3:1"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "1002:6:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "993:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "993:16:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1011:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "986:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "986:27:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "986:27:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "928:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "931:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "925:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "925:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "922:101:1"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "753:3:1",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "758:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "763:6:1",
                            "type": ""
                          }
                        ],
                        "src": "722:307:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1083:54:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1093:38:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1111:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1118:2:1",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1107:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1107:14:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1127:2:1",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1123:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1123:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1103:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1103:28:1"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "1093:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1066:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "1076:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1035:102:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1235:272:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1245:53:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1292:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1259:32:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1259:39:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1249:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1307:78:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1373:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1378:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1314:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1314:71:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1420:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1427:4:1",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1416:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1416:16:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1434:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1439:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1394:21:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1394:52:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1394:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1455:46:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1466:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1493:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "1471:21:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1471:29:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1462:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1462:39:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1216:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1223:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1231:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1143:364:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1631:195:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1641:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1653:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1664:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1649:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1649:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1641:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1688:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1699:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1684:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1684:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "1707:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1713:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1703:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1703:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1677:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1677:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1677:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1733:86:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1805:6:1"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "1814:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1741:63:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1741:78:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1733:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1603:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1615:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1626:4:1",
                            "type": ""
                          }
                        ],
                        "src": "1513:313:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1872:35:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1882:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1898:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1892:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1892:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1882:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1865:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1832:75:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2002:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2019:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2022:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2012:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2012:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2012:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1913:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2125:28:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2142:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2145:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2135:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2135:12:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2135:12:1"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2036:117:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2204:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2214:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2229:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2236:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2225:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2225:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2214:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2186:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2196:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2159:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2336:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2346:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2375:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "2357:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2357:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2346:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2318:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2328:7:1",
                            "type": ""
                          }
                        ],
                        "src": "2291:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2436:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2493:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2502:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2505:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2495:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2495:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2495:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2459:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2484:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "2466:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2466:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2456:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2456:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2449:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2449:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2446:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2429:5:1",
                            "type": ""
                          }
                        ],
                        "src": "2393:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2573:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2583:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2605:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2592:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2592:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2583:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2648:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2621:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2621:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2621:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2551:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2559:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2567:5:1",
                            "type": ""
                          }
                        ],
                        "src": "2521:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2709:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2766:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2775:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2778:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2768:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2768:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2768:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2732:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2757:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "2739:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2739:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2729:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2729:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2722:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2722:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2719:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2702:5:1",
                            "type": ""
                          }
                        ],
                        "src": "2666:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2846:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2856:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2878:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2865:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2865:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2856:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2921:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2894:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2894:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2894:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2824:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2832:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2840:5:1",
                            "type": ""
                          }
                        ],
                        "src": "2794:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3022:391:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3068:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "3070:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3070:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3070:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3043:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3052:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3039:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3039:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3064:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3035:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3035:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "3032:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3161:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3176:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3190:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3180:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3205:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3240:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3251:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3236:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3236:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3260:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3215:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3215:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3205:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3288:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3303:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3317:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3307:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3333:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3368:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3379:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3364:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3364:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3388:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3343:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3343:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3333:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2984:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2995:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3007:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3015:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2939:474:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3461:48:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3471:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3496:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3489:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3489:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3482:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3482:21:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3471:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3443:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3453:7:1",
                            "type": ""
                          }
                        ],
                        "src": "3419:90:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3574:50:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3591:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3611:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "3596:14:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3596:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3584:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3584:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3584:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3562:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3569:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3515:109:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3722:118:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3732:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3744:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3755:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3740:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3740:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3732:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3806:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3819:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3830:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3815:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3815:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3768:37:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3768:65:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3768:65:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3694:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3706:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3717:4:1",
                            "type": ""
                          }
                        ],
                        "src": "3630:210:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3912:263:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3958:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "3960:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3960:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3960:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3933:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3942:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3929:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3929:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3954:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3925:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3925:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "3922:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4051:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4066:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4080:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4070:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4095:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4130:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4141:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4126:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4126:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4150:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4105:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4105:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4095:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3882:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3893:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3905:6:1",
                            "type": ""
                          }
                        ],
                        "src": "3846:329:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4264:391:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4310:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "4312:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4312:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4312:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4285:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4294:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4281:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4281:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4306:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4277:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4277:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4274:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4403:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4418:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4432:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4422:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4447:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4482:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4493:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4478:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4478:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4502:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4457:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4457:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4447:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4530:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4545:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4559:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4549:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4575:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4610:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4621:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4606:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4606:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4630:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4585:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4585:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4575:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4226:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4237:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4249:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4257:6:1",
                            "type": ""
                          }
                        ],
                        "src": "4181:474:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4727:263:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4773:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "4775:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4775:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4775:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4748:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4757:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4744:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4744:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4769:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4740:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4740:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4737:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4866:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4881:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4895:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4885:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4910:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4945:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4956:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4941:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4941:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4965:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4920:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4920:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4910:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4697:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4708:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4720:6:1",
                            "type": ""
                          }
                        ],
                        "src": "4661:329:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5096:519:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5142:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "5144:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5144:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5144:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5117:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5126:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5113:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5113:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5138:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5109:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5109:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5106:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5235:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5250:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5264:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5254:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5279:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5314:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5325:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5310:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5310:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5334:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5289:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5289:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5279:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5362:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5377:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5391:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5381:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5407:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5442:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5453:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5438:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5438:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5462:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5417:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5417:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5407:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5490:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5505:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5519:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5509:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5535:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5570:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5581:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5566:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5566:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5590:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5545:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5545:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "5535:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5050:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5061:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5073:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5081:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5089:6:1",
                            "type": ""
                          }
                        ],
                        "src": "4996:619:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5664:43:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5674:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5689:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5696:4:1",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5685:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5685:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5674:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5646:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5656:7:1",
                            "type": ""
                          }
                        ],
                        "src": "5621:86:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5774:51:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5791:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5812:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5796:15:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5796:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5784:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5784:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5784:35:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5762:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5769:3:1",
                            "type": ""
                          }
                        ],
                        "src": "5713:112:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5925:120:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5935:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5947:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5958:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5943:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5943:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5935:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6011:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6024:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6035:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6020:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6020:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5971:39:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5971:67:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5971:67:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5897:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5909:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5920:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5831:214:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6168:648:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6215:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "6217:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6217:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6217:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6189:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6198:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6185:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6185:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6210:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6181:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6181:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6178:120:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6308:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6323:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6337:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6327:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6352:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6387:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6398:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6383:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6383:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6407:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6362:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6362:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "6352:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6435:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6450:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6464:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6454:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6480:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6515:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6526:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6511:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6511:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6535:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6490:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6490:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "6480:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6563:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6578:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6592:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6582:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6608:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6643:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6654:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6639:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6639:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6663:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6618:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6618:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "6608:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6691:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6706:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6720:2:1",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "6710:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "6736:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "6771:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6782:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6767:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6767:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6791:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6746:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6746:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "6736:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6114:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6125:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6137:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6145:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6153:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "6161:6:1",
                            "type": ""
                          }
                        ],
                        "src": "6051:765:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6862:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6916:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6925:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6928:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6918:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6918:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6918:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6885:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6907:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "6892:14:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6892:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6882:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6882:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6875:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6875:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "6872:60:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6855:5:1",
                            "type": ""
                          }
                        ],
                        "src": "6822:116:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6993:84:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7003:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7025:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7012:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7012:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "7003:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7065:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "7041:23:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7041:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7041:30:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "6971:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6979:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6987:5:1",
                            "type": ""
                          }
                        ],
                        "src": "6944:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7163:388:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7209:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "7211:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7211:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7211:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7184:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7193:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7180:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7180:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7205:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7176:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7176:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "7173:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7302:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7317:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7331:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7321:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7346:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7381:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7392:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7377:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7377:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7401:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7356:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7356:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "7346:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7429:115:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7444:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7458:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7448:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7474:60:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7506:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7517:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7502:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7502:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7526:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "7484:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7484:50:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "7474:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7125:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7136:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7148:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7156:6:1",
                            "type": ""
                          }
                        ],
                        "src": "7083:468:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7622:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7639:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7662:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7644:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7644:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7632:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7632:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7632:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7610:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7617:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7557:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7779:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7789:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7801:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7812:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7797:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7797:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7789:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7869:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7882:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7893:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7878:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7878:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7825:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7825:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7825:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7751:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7763:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7774:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7681:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7992:391:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8038:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "8040:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8040:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8040:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8013:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8022:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8009:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8009:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8034:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8005:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8005:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8002:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8131:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8146:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8160:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8150:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8175:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8210:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8221:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8206:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8206:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8230:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "8185:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8185:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "8175:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8258:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8273:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8287:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8277:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8303:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8338:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8349:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8334:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8334:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8358:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "8313:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8313:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "8303:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7954:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7965:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7977:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7985:6:1",
                            "type": ""
                          }
                        ],
                        "src": "7909:474:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8452:260:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8498:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "8500:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8500:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8500:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8473:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8482:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8469:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8469:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8494:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8465:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8465:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8462:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8591:114:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8606:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8620:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8610:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8635:60:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8667:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8678:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8663:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8663:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8687:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "8645:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8645:50:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "8635:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8422:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8433:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8445:6:1",
                            "type": ""
                          }
                        ],
                        "src": "8389:323:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8815:516:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8861:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "8863:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8863:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8863:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8836:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8845:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8832:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8832:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8857:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8828:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8828:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "8825:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8954:114:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8969:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8983:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8973:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8998:60:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9030:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9041:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9026:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9026:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9050:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "9008:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9008:50:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "8998:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9078:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9093:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9107:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9097:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9123:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9158:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9169:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9154:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9154:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9178:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "9133:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9133:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9123:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9206:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9221:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9235:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9225:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9251:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9286:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9297:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9282:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9282:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9306:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "9261:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9261:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "9251:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_boolt_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8769:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8780:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8792:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8800:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8808:6:1",
                            "type": ""
                          }
                        ],
                        "src": "8718:613:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9390:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9400:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9429:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "9411:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9411:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "9400:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9372:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "9382:7:1",
                            "type": ""
                          }
                        ],
                        "src": "9337:104:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9498:87:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9563:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9572:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9575:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9565:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9565:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9565:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "9521:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9554:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address_payable",
                                          "nodeType": "YulIdentifier",
                                          "src": "9528:25:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9528:32:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "9518:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9518:43:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9511:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9511:51:1"
                              },
                              "nodeType": "YulIf",
                              "src": "9508:71:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9491:5:1",
                            "type": ""
                          }
                        ],
                        "src": "9447:138:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9651:95:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9661:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9683:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9670:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9670:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "9661:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9734:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "9699:34:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9699:41:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9699:41:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "9629:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9637:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9645:5:1",
                            "type": ""
                          }
                        ],
                        "src": "9591:155:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9826:271:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9872:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "9874:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9874:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9874:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9847:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9856:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9843:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9843:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9868:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9839:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9839:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "9836:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9965:125:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9980:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9994:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9984:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10009:71:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10052:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10063:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10048:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10048:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10072:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "10019:28:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10019:61:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "10009:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9796:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "9807:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9819:6:1",
                            "type": ""
                          }
                        ],
                        "src": "9752:345:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10135:28:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10145:12:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10152:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "10145:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "identity",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10121:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "10131:3:1",
                            "type": ""
                          }
                        ],
                        "src": "10103:60:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10229:82:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10239:66:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "10297:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint160",
                                          "nodeType": "YulIdentifier",
                                          "src": "10279:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10279:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nodeType": "YulIdentifier",
                                      "src": "10270:8:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10270:34:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "10252:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10252:53:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "10239:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10209:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "10219:9:1",
                            "type": ""
                          }
                        ],
                        "src": "10169:142:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10377:66:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10387:50:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10431:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "10400:30:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10400:37:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "10387:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10357:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "10367:9:1",
                            "type": ""
                          }
                        ],
                        "src": "10317:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10527:66:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10537:50:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10581:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "10550:30:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10550:37:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "10537:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IDEXRouter_$385_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10507:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "10517:9:1",
                            "type": ""
                          }
                        ],
                        "src": "10449:144:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10682:84:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10699:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "10753:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IDEXRouter_$385_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "10704:48:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10704:55:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10692:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10692:68:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10692:68:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IDEXRouter_$385_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10670:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10677:3:1",
                            "type": ""
                          }
                        ],
                        "src": "10599:167:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10888:142:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10898:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10910:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10921:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10906:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10906:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10898:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10996:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11009:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11020:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11005:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11005:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IDEXRouter_$385_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10934:61:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10934:89:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10934:89:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IDEXRouter_$385__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10860:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10872:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10883:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10772:258:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11142:50:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11164:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11172:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11160:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11160:14:1"
                                  },
                                  {
                                    "hexValue": "214f574e4552",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11176:8:1",
                                    "type": "",
                                    "value": "!OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11153:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11153:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11153:32:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "11134:6:1",
                            "type": ""
                          }
                        ],
                        "src": "11036:156:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11344:219:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11354:73:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11420:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11425:1:1",
                                    "type": "",
                                    "value": "6"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11361:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11361:66:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11354:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11525:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558",
                                  "nodeType": "YulIdentifier",
                                  "src": "11436:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11436:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11436:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11538:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11549:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11554:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11545:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11545:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11538:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11332:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11340:3:1",
                            "type": ""
                          }
                        ],
                        "src": "11198:365:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11740:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11750:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11762:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11773:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11758:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11758:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11750:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11797:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11808:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11793:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11793:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "11816:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11822:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11812:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11812:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11786:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11786:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11786:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11842:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11976:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11850:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11850:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11842:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11720:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11735:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11569:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12022:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12039:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12042:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12032:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12032:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12032:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12136:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12139:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12129:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12129:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12129:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12160:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12163:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12153:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12153:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12153:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "11994:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12224:261:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12234:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12257:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12239:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12239:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "12234:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12268:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12291:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12273:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12273:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "12268:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12431:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "12433:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12433:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12433:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12352:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12359:66:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "12427:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12355:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12355:74:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12349:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12349:81:1"
                              },
                              "nodeType": "YulIf",
                              "src": "12346:107:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12463:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12474:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12477:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12470:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12470:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "12463:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12211:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12214:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "12220:3:1",
                            "type": ""
                          }
                        ],
                        "src": "12180:305:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12597:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12619:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12627:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12615:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12615:14:1"
                                  },
                                  {
                                    "hexValue": "5265776172647320706f6f6c2063757272656e746c79206c6f636b6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12631:31:1",
                                    "type": "",
                                    "value": "Rewards pool currently locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12608:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12608:55:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12608:55:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "12589:6:1",
                            "type": ""
                          }
                        ],
                        "src": "12491:179:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12822:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12832:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12898:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12903:2:1",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12839:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12839:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12832:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13004:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2",
                                  "nodeType": "YulIdentifier",
                                  "src": "12915:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12915:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12915:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13017:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13028:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13033:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13024:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13024:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "13017:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12810:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12818:3:1",
                            "type": ""
                          }
                        ],
                        "src": "12676:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13219:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13229:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13241:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13252:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13237:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13237:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13229:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13276:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13287:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13272:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13272:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13295:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13301:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13291:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13291:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13265:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13265:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13265:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13321:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13455:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13329:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13329:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13321:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13199:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13214:4:1",
                            "type": ""
                          }
                        ],
                        "src": "13048:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13599:206:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13609:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13621:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13632:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13617:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13617:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13609:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13689:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13702:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13713:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13698:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13698:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13645:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13645:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13645:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13770:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13783:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13794:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13779:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13779:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13726:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13726:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13726:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13563:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "13575:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13583:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13594:4:1",
                            "type": ""
                          }
                        ],
                        "src": "13473:332:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13917:55:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "13939:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13947:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13935:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13935:14:1"
                                  },
                                  {
                                    "hexValue": "21415554484f52495a4544",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13951:13:1",
                                    "type": "",
                                    "value": "!AUTHORIZED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13928:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13928:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13928:37:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "13909:6:1",
                            "type": ""
                          }
                        ],
                        "src": "13811:161:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14124:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14134:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14200:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14205:2:1",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14141:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14141:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14134:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14306:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0",
                                  "nodeType": "YulIdentifier",
                                  "src": "14217:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14217:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14217:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14319:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14330:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14335:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14326:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14326:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "14319:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14112:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "14120:3:1",
                            "type": ""
                          }
                        ],
                        "src": "13978:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14521:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14531:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14543:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14554:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14539:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14539:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14531:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14578:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14589:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14574:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14574:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14597:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14603:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14593:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14593:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14567:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14567:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14567:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14623:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14757:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14631:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14631:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14623:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14501:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14516:4:1",
                            "type": ""
                          }
                        ],
                        "src": "14350:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14881:58:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "14903:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14911:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14899:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14899:14:1"
                                  },
                                  {
                                    "hexValue": "56616c756520746f6f2068696768",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14915:16:1",
                                    "type": "",
                                    "value": "Value too high"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14892:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14892:40:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14892:40:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "14873:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14775:164:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15091:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15101:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15167:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15172:2:1",
                                    "type": "",
                                    "value": "14"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15108:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15108:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "15101:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15273:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                                  "nodeType": "YulIdentifier",
                                  "src": "15184:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15184:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15184:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15286:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15297:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15302:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15293:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15293:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15286:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15079:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15087:3:1",
                            "type": ""
                          }
                        ],
                        "src": "14945:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15488:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15498:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15510:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15521:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15506:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15506:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15498:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15545:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15556:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15541:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15541:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15564:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15570:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15560:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15560:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15534:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15534:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15534:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15590:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15724:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15598:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15598:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15590:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15468:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15483:4:1",
                            "type": ""
                          }
                        ],
                        "src": "15317:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15848:57:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15870:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15878:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15866:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15866:14:1"
                                  },
                                  {
                                    "hexValue": "56616c756520746f6f206c6f77",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15882:15:1",
                                    "type": "",
                                    "value": "Value too low"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15859:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15859:39:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15859:39:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "15840:6:1",
                            "type": ""
                          }
                        ],
                        "src": "15742:163:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16057:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16067:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16133:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16138:2:1",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16074:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16074:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16067:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16239:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297",
                                  "nodeType": "YulIdentifier",
                                  "src": "16150:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16150:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16150:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16252:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16263:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16268:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16259:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16259:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "16252:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16045:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "16053:3:1",
                            "type": ""
                          }
                        ],
                        "src": "15911:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16454:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16464:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16476:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16487:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16472:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16472:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16464:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16511:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16522:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16507:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16507:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16530:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16536:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16526:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16526:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16500:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16500:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16500:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16556:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16690:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16564:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16564:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16556:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16434:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16449:4:1",
                            "type": ""
                          }
                        ],
                        "src": "16283:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16768:77:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16778:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "16793:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16787:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16787:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "16778:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "16833:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "16809:23:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16809:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16809:30:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "16746:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "16754:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16762:5:1",
                            "type": ""
                          }
                        ],
                        "src": "16708:137:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16925:271:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16971:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "16973:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16973:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16973:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "16946:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16955:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16942:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16942:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16967:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "16938:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16938:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "16935:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "17064:125:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "17079:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17093:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "17083:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17108:71:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "17151:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "17162:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "17147:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17147:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "17171:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "17118:28:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17118:61:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "17108:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16895:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "16906:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16918:6:1",
                            "type": ""
                          }
                        ],
                        "src": "16851:345:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17308:187:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "17330:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17338:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17326:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17326:14:1"
                                  },
                                  {
                                    "hexValue": "43616e6e6f74206368616e6765206469766964656e6420746f6b656e20616674",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17342:34:1",
                                    "type": "",
                                    "value": "Cannot change dividend token aft"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17319:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17319:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17319:58:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "17398:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17406:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17394:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17394:15:1"
                                  },
                                  {
                                    "hexValue": "65722074686520666972737420646973747269627574696f6e20686173207374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17411:34:1",
                                    "type": "",
                                    "value": "er the first distribution has st"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17387:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17387:59:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17387:59:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "17467:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17475:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17463:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17463:15:1"
                                  },
                                  {
                                    "hexValue": "6172746564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17480:7:1",
                                    "type": "",
                                    "value": "arted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17456:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17456:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17456:32:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "17300:6:1",
                            "type": ""
                          }
                        ],
                        "src": "17202:293:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17647:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17657:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17723:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17728:2:1",
                                    "type": "",
                                    "value": "69"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17664:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17664:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17657:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17829:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                                  "nodeType": "YulIdentifier",
                                  "src": "17740:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17740:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17740:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17842:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17853:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17858:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17849:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17849:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "17842:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17635:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "17643:3:1",
                            "type": ""
                          }
                        ],
                        "src": "17501:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18044:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18054:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18066:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18077:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18062:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18062:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18054:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18101:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18112:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18097:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18097:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18120:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18126:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18116:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18116:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18090:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18090:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18090:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18146:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18280:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18154:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18154:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18146:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18024:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18039:4:1",
                            "type": ""
                          }
                        ],
                        "src": "17873:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18326:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18343:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18346:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18336:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18336:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18336:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18440:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18443:4:1",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18433:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18433:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18433:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18464:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18467:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "18457:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18457:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18457:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "18298:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18526:143:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18536:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18559:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "18541:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18541:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "18536:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18570:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18593:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "18575:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18575:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "18570:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18617:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "18619:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18619:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18619:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18614:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "18607:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18607:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "18604:35:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18649:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18658:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "18661:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "18654:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18654:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "18649:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "18515:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "18518:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "18524:1:1",
                            "type": ""
                          }
                        ],
                        "src": "18484:185:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18738:80:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18748:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "18763:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "18757:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18757:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "18748:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18806:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "18779:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18779:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18779:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "18716:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "18724:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18732:5:1",
                            "type": ""
                          }
                        ],
                        "src": "18675:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18901:274:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18947:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "18949:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18949:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18949:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "18922:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18931:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18918:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18918:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18943:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "18914:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18914:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "18911:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "19040:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "19055:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19069:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "19059:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "19084:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "19130:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "19141:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "19126:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "19126:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "19150:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "19094:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19094:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "19084:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18871:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "18882:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18894:6:1",
                            "type": ""
                          }
                        ],
                        "src": "18824:351:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19287:120:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "19309:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19317:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19305:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19305:14:1"
                                  },
                                  {
                                    "hexValue": "4e6f7420656e6f7567682064617973207061737365642073696e6365206c6173",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19321:34:1",
                                    "type": "",
                                    "value": "Not enough days passed since las"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19298:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19298:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19298:58:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "19377:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19385:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19373:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19373:15:1"
                                  },
                                  {
                                    "hexValue": "74207061757365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "19390:9:1",
                                    "type": "",
                                    "value": "t pause"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19366:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19366:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19366:34:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "19279:6:1",
                            "type": ""
                          }
                        ],
                        "src": "19181:226:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19559:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19569:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19635:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19640:2:1",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19576:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19576:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "19569:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19741:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29",
                                  "nodeType": "YulIdentifier",
                                  "src": "19652:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19652:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19652:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19754:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19765:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19770:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19761:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19761:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "19754:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19547:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "19555:3:1",
                            "type": ""
                          }
                        ],
                        "src": "19413:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19956:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19966:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19978:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19989:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19974:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19974:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19966:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20013:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20024:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20009:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20009:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "20032:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20038:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20028:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20028:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20002:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20002:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20002:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20058:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20192:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20066:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20066:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20058:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19936:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19951:4:1",
                            "type": ""
                          }
                        ],
                        "src": "19785:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20316:66:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20338:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20346:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20334:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20334:14:1"
                                  },
                                  {
                                    "hexValue": "4465736972656420706175736520746f6f206c6f6e67",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "20350:24:1",
                                    "type": "",
                                    "value": "Desired pause too long"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20327:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20327:48:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20327:48:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "20308:6:1",
                            "type": ""
                          }
                        ],
                        "src": "20210:172:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20534:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20544:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20610:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20615:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20551:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20551:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "20544:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20716:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6",
                                  "nodeType": "YulIdentifier",
                                  "src": "20627:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20627:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20627:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20729:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20740:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20745:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20736:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20736:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "20729:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "20522:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "20530:3:1",
                            "type": ""
                          }
                        ],
                        "src": "20388:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20931:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20941:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20953:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20964:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20949:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20949:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20941:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20988:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20999:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20984:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20984:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21007:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21013:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21003:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21003:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20977:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20977:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20977:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21033:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21167:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21041:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21041:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21033:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20911:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20926:4:1",
                            "type": ""
                          }
                        ],
                        "src": "20760:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21230:69:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21240:53:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21255:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21262:30:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21251:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21251:42:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21240:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint112",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21212:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "21222:7:1",
                            "type": ""
                          }
                        ],
                        "src": "21185:114:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21348:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21405:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21414:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21417:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "21407:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21407:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21407:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "21371:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "21396:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint112",
                                          "nodeType": "YulIdentifier",
                                          "src": "21378:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21378:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "21368:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21368:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "21361:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21361:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "21358:63:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint112",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21341:5:1",
                            "type": ""
                          }
                        ],
                        "src": "21305:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21496:80:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21506:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "21521:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "21515:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21515:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "21506:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21564:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint112",
                                  "nodeType": "YulIdentifier",
                                  "src": "21537:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21537:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21537:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint112_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "21474:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "21482:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21490:5:1",
                            "type": ""
                          }
                        ],
                        "src": "21433:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21626:49:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21636:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21651:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21658:10:1",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21647:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21647:22:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21636:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21608:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "21618:7:1",
                            "type": ""
                          }
                        ],
                        "src": "21582:93:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21723:78:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21779:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21788:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21791:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "21781:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21781:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21781:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "21746:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "21770:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint32",
                                          "nodeType": "YulIdentifier",
                                          "src": "21753:16:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21753:23:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "21743:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21743:34:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "21736:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21736:42:1"
                              },
                              "nodeType": "YulIf",
                              "src": "21733:62:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21716:5:1",
                            "type": ""
                          }
                        ],
                        "src": "21681:120:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21869:79:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21879:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "21894:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "21888:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21888:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "21879:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21936:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "21910:25:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21910:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21910:32:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "21847:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "21855:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21863:5:1",
                            "type": ""
                          }
                        ],
                        "src": "21807:141:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22064:551:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22110:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "22112:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22112:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22112:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "22085:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22094:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22081:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22081:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22106:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22077:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22077:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "22074:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "22203:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "22218:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22232:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "22222:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "22247:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "22293:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "22304:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "22289:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22289:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "22313:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint112_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "22257:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22257:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "22247:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "22341:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "22356:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22370:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "22360:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "22386:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "22432:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "22443:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "22428:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22428:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "22452:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint112_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "22396:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22396:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "22386:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "22480:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "22495:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22509:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "22499:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "22525:73:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "22570:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "22581:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "22566:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22566:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "22590:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint32_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "22535:30:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22535:63:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "22525:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22018:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "22029:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "22041:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "22049:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "22057:6:1",
                            "type": ""
                          }
                        ],
                        "src": "21954:661:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22727:72:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "22749:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22757:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22745:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22745:14:1"
                                  },
                                  {
                                    "hexValue": "4552523a206f776e65722063616e277420626520696e636c75646564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22761:30:1",
                                    "type": "",
                                    "value": "ERR: owner can't be included"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22738:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22738:54:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22738:54:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "22719:6:1",
                            "type": ""
                          }
                        ],
                        "src": "22621:178:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22951:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22961:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23027:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23032:2:1",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22968:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22968:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "22961:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23133:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5",
                                  "nodeType": "YulIdentifier",
                                  "src": "23044:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23044:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23044:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23146:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23157:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23162:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23153:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23153:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "23146:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "22939:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "22947:3:1",
                            "type": ""
                          }
                        ],
                        "src": "22805:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23348:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23358:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23370:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23381:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23366:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23366:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23358:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23405:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23416:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23401:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23401:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "23424:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23430:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23420:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23420:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23394:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23394:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23394:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23450:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23584:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23458:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23458:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23450:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23328:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23343:4:1",
                            "type": ""
                          }
                        ],
                        "src": "23177:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23670:66:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23680:50:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23724:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "23693:30:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23693:37:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "23680:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_address_payable_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23650:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "23660:9:1",
                            "type": ""
                          }
                        ],
                        "src": "23602:134:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23815:74:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23832:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "23876:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_address_payable_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "23837:38:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23837:45:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23825:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23825:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23825:58:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23803:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "23810:3:1",
                            "type": ""
                          }
                        ],
                        "src": "23742:147:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24001:132:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24011:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24023:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24034:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24019:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24019:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24011:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "24099:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24112:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24123:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24108:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24108:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24047:51:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24047:79:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24047:79:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23973:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "23985:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23996:4:1",
                            "type": ""
                          }
                        ],
                        "src": "23895:238:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24192:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24202:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "24213:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "24202:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_rational_0_by_1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "24174:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "24184:7:1",
                            "type": ""
                          }
                        ],
                        "src": "24139:85:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24298:90:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24308:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "24374:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_rational_0_by_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "24348:25:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24348:32:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nodeType": "YulIdentifier",
                                      "src": "24339:8:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24339:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "24321:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24321:61:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "24308:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_rational_0_by_1_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "24278:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "24288:9:1",
                            "type": ""
                          }
                        ],
                        "src": "24230:158:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24467:74:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "24484:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "24528:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_rational_0_by_1_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "24489:38:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24489:45:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24477:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24477:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24477:58:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "24455:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "24462:3:1",
                            "type": ""
                          }
                        ],
                        "src": "24394:147:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24681:214:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24691:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24703:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24714:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24699:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24699:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24691:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "24771:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24784:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24795:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24780:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24780:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24727:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24727:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24727:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24860:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24873:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24884:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24869:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24869:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24808:51:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24808:80:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24808:80:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24645:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "24657:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "24665:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24676:4:1",
                            "type": ""
                          }
                        ],
                        "src": "24547:348:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25007:71:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25029:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25037:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25025:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25025:14:1"
                                  },
                                  {
                                    "hexValue": "417373657420706f6f6c2063757272656e746c79206c6f636b6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25041:29:1",
                                    "type": "",
                                    "value": "Asset pool currently locked"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25018:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25018:53:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25018:53:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24999:6:1",
                            "type": ""
                          }
                        ],
                        "src": "24901:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25230:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25240:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25306:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25311:2:1",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25247:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25247:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "25240:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25412:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d",
                                  "nodeType": "YulIdentifier",
                                  "src": "25323:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25323:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25323:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25425:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25436:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25441:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25432:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25432:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "25425:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "25218:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "25226:3:1",
                            "type": ""
                          }
                        ],
                        "src": "25084:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25627:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25637:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25649:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25660:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25645:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25645:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25637:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25684:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25695:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25680:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25680:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25703:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25709:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25699:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25699:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25673:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25673:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25673:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25729:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25863:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25737:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25737:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25729:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25607:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25622:4:1",
                            "type": ""
                          }
                        ],
                        "src": "25456:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25994:34:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26004:18:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "26019:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "26004:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "25966:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "25971:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "25982:11:1",
                            "type": ""
                          }
                        ],
                        "src": "25881:147:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26140:8:1",
                          "statements": []
                        },
                        "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26132:6:1",
                            "type": ""
                          }
                        ],
                        "src": "26034:114:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26317:235:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26327:90:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26410:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26415:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26334:75:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26334:83:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "26327:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26515:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "nodeType": "YulIdentifier",
                                  "src": "26426:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26426:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26426:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26528:18:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26539:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26544:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26535:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26535:11:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "26528:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "26305:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "26313:3:1",
                            "type": ""
                          }
                        ],
                        "src": "26154:398:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26746:191:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26757:154:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26907:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26764:141:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26764:147:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "26757:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26921:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "26928:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "26921:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "26733:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "26742:3:1",
                            "type": ""
                          }
                        ],
                        "src": "26558:379:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26991:300:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27001:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "27024:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "27006:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27006:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "27001:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27035:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27058:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "27040:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27040:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "27035:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27233:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "27235:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27235:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27235:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "27145:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "27138:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27138:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "27131:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27131:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "27153:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "27160:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "27228:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "27156:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "27156:74:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "27150:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27150:81:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "27127:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27127:105:1"
                              },
                              "nodeType": "YulIf",
                              "src": "27124:131:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27265:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "27280:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27283:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "27276:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27276:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "27265:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "26974:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "26977:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "26983:7:1",
                            "type": ""
                          }
                        ],
                        "src": "26943:348:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27403:126:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "27425:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27433:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27421:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27421:14:1"
                                  },
                                  {
                                    "hexValue": "5741524e494e473a20636f6e747261637420697320696e20706175736520666f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27437:34:1",
                                    "type": "",
                                    "value": "WARNING: contract is in pause fo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27414:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27414:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27414:58:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "27493:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27501:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27489:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27489:15:1"
                                  },
                                  {
                                    "hexValue": "72206d61696e74656e616e6365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27506:15:1",
                                    "type": "",
                                    "value": "r maintenance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27482:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27482:40:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27482:40:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "27395:6:1",
                            "type": ""
                          }
                        ],
                        "src": "27297:232:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27681:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27691:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "27757:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27762:2:1",
                                    "type": "",
                                    "value": "45"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27698:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27698:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "27691:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "27863:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1",
                                  "nodeType": "YulIdentifier",
                                  "src": "27774:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27774:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27774:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27876:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "27887:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27892:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27883:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27883:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "27876:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "27669:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "27677:3:1",
                            "type": ""
                          }
                        ],
                        "src": "27535:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28078:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28088:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "28100:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28111:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28096:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28096:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28088:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28135:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28146:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28131:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28131:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "28154:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28160:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "28150:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28150:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28124:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28124:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28124:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28180:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "28314:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28188:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28188:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28180:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "28058:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "28073:4:1",
                            "type": ""
                          }
                        ],
                        "src": "27907:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28377:146:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28387:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "28410:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "28392:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28392:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "28387:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28421:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "28444:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "28426:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28426:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "28421:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "28468:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "28470:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28470:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "28470:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "28462:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "28465:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "28459:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28459:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "28456:34:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28500:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "28512:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "28515:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "28508:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28508:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "28500:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "28363:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "28366:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "28372:4:1",
                            "type": ""
                          }
                        ],
                        "src": "28332:191:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28635:122:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "28657:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28665:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28653:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28653:14:1"
                                  },
                                  {
                                    "hexValue": "5741524e494e473a20636f6e747261637420697320696e20706175736520666f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "28669:34:1",
                                    "type": "",
                                    "value": "WARNING: contract is in pause fo"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28646:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28646:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28646:58:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "28725:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28733:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28721:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28721:15:1"
                                  },
                                  {
                                    "hexValue": "722075706772616465",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "28738:11:1",
                                    "type": "",
                                    "value": "r upgrade"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28714:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28714:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28714:36:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "28627:6:1",
                            "type": ""
                          }
                        ],
                        "src": "28529:228:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28909:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28919:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "28985:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28990:2:1",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28926:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28926:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "28919:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "29091:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118",
                                  "nodeType": "YulIdentifier",
                                  "src": "29002:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29002:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29002:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29104:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "29115:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29120:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29111:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29111:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "29104:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "28897:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "28905:3:1",
                            "type": ""
                          }
                        ],
                        "src": "28763:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29306:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29316:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "29328:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29339:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29324:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29324:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "29316:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29363:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29374:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29359:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29359:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "29382:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "29388:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "29378:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29378:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "29352:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29352:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29352:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29408:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "29542:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29416:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29416:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "29408:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "29286:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "29301:4:1",
                            "type": ""
                          }
                        ],
                        "src": "29135:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29666:61:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "29688:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "29696:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "29684:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29684:14:1"
                                  },
                                  {
                                    "hexValue": "5458204c696d6974204578636565646564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "29700:19:1",
                                    "type": "",
                                    "value": "TX Limit Exceeded"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "29677:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29677:43:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29677:43:1"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "29658:6:1",
                            "type": ""
                          }
                        ],
                        "src": "29560:167:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29879:220:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29889:74:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "29955:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29960:2:1",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "29896:58:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29896:67:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "29889:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30061:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99",
                                  "nodeType": "YulIdentifier",
                                  "src": "29972:88:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29972:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29972:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30074:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30085:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30090:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30081:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30081:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "30074:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "29867:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "29875:3:1",
                            "type": ""
                          }
                        ],
                        "src": "29733:366:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30276:248:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30286:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "30298:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30309:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30294:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30294:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30286:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30333:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30344:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30329:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30329:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "30352:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30358:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "30348:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30348:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30322:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30322:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30322:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30378:139:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "30512:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30386:124:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30386:131:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30378:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "30256:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "30271:4:1",
                            "type": ""
                          }
                        ],
                        "src": "30105:419:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30558:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30575:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30578:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30568:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30568:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30568:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30672:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30675:4:1",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30665:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30665:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30665:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30696:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30699:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "30689:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30689:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30689:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "30530:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30744:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30761:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30764:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30754:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30754:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30754:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30858:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30861:4:1",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30851:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30851:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30851:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30882:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30885:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "30875:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30875:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30875:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "30716:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30976:40:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30987:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "31003:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "30997:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30997:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "30987:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "30959:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "30969:6:1",
                            "type": ""
                          }
                        ],
                        "src": "30902:114:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31133:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31150:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "31155:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "31143:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31143:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31143:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31171:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31190:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31195:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31186:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31186:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "31171:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "31105:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "31110:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "31121:11:1",
                            "type": ""
                          }
                        ],
                        "src": "31022:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31284:60:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31294:11:1",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "31302:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "31294:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31315:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "31327:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31332:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31323:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31323:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "31315:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "31271:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "31279:4:1",
                            "type": ""
                          }
                        ],
                        "src": "31212:132:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31405:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31422:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "31445:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "31427:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "31427:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "31415:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31415:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31415:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "31393:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "31400:3:1",
                            "type": ""
                          }
                        ],
                        "src": "31350:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31544:99:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "31588:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31596:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "31554:33:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31554:46:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "31554:46:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "31609:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "31627:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31632:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31623:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31623:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "31609:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "31517:6:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "31525:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "31533:10:1",
                            "type": ""
                          }
                        ],
                        "src": "31464:179:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31724:38:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "31734:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "31746:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "31751:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "31742:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31742:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "31734:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "31711:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "31719:4:1",
                            "type": ""
                          }
                        ],
                        "src": "31649:113:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "31922:608:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "31932:68:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "31994:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "31946:47:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "31946:54:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "31936:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "32009:93:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "32090:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "32095:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32016:73:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32016:86:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "32009:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "32111:71:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "32176:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "32126:49:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32126:56:1"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "32115:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "32191:21:1",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "32205:7:1"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "32195:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "32281:224:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "32295:34:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "32322:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "32316:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "32316:13:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "32299:13:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "32342:70:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "32393:13:1"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "32408:3:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "32349:43:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "32349:63:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "32342:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "32425:70:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "32488:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "32435:52:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "32435:60:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "32425:6:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "32243:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "32246:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "32240:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32240:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "32254:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "32256:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "32265:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "32268:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "32261:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "32261:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "32256:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "32225:14:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "32227:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "32236:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "32231:1:1",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "32221:284:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "32514:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "32521:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "32514:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "31901:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "31908:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "31917:3:1",
                            "type": ""
                          }
                        ],
                        "src": "31798:732:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "32804:563:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "32814:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "32826:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "32837:3:1",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "32822:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32822:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "32814:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "32895:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32908:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "32919:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32904:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32904:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32851:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32851:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32851:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "32984:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "32997:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33008:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "32993:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "32993:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "32932:51:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "32932:80:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "32932:80:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33033:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33044:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33029:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33029:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "33053:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33059:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "33049:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33049:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "33022:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33022:48:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33022:48:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "33079:116:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "33181:6:1"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "33190:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33087:93:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33087:108:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33079:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "33249:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33262:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33273:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33258:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33258:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33205:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33205:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33205:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "33331:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33344:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33355:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33340:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33340:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33287:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33287:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33287:73:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "32744:9:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "32756:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "32764:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "32772:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "32780:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "32788:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "32799:4:1",
                            "type": ""
                          }
                        ],
                        "src": "32536:831:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "33627:553:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "33637:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "33649:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "33660:3:1",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "33645:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33645:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "33637:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "33718:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33731:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33742:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33727:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33727:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33674:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33674:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33674:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "33799:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33812:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33823:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33808:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33808:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33755:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33755:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33755:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "33889:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33902:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "33913:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33898:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33898:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33837:51:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33837:80:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33837:80:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "33979:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "33992:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34003:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "33988:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "33988:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "33927:51:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33927:80:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33927:80:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "34061:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34074:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34085:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34070:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34070:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34017:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34017:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34017:73:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "34144:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34157:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "34168:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "34153:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34153:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "34100:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34100:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34100:73:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "33559:9:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "33571:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "33579:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "33587:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "33595:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "33603:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "33611:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "33622:4:1",
                            "type": ""
                          }
                        ],
                        "src": "33373:807:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34249:80:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "34259:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "34274:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "34268:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34268:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "34259:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "34317:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "34290:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34290:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "34290:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "34227:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "34235:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "34243:5:1",
                            "type": ""
                          }
                        ],
                        "src": "34186:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "34446:552:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "34492:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "34494:77:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "34494:79:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "34494:79:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "34467:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "34476:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "34463:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34463:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34488:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "34459:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "34459:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "34456:119:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "34585:128:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "34600:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34614:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "34604:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "34629:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "34675:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "34686:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "34671:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "34671:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "34695:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "34639:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34639:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "34629:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "34723:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "34738:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34752:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "34742:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "34768:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "34814:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "34825:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "34810:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "34810:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "34834:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "34778:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34778:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "34768:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "34862:129:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "34877:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "34891:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "34881:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "34907:74:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "34953:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "34964:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "34949:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "34949:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "34973:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "34917:31:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "34917:64:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "34907:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "34400:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "34411:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "34423:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "34431:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "34439:6:1",
                            "type": ""
                          }
                        ],
                        "src": "34335:663:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "35130:206:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "35140:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "35152:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "35163:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "35148:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35148:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "35140:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "35220:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35233:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35244:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35229:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35229:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35176:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35176:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35176:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "35301:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "35314:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "35325:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "35310:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "35310:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "35257:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "35257:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "35257:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "35094:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "35106:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "35114:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "35125:4:1",
                            "type": ""
                          }
                        ],
                        "src": "35004:332:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_boolt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDEXRouter_$385_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IDEXRouter_$385_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDEXRouter_$385_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IDEXRouter_$385__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDEXRouter_$385_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558(memPtr) {\n\n        mstore(add(memPtr, 0), \"!OWNER\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Rewards pool currently locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"!AUTHORIZED\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297(memPtr) {\n\n        mstore(add(memPtr, 0), \"Value too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot change dividend token aft\")\n\n        mstore(add(memPtr, 32), \"er the first distribution has st\")\n\n        mstore(add(memPtr, 64), \"arted\")\n\n    }\n\n    function abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 69)\n        store_literal_in_memory_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough days passed since las\")\n\n        mstore(add(memPtr, 32), \"t pause\")\n\n    }\n\n    function abi_encode_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Desired pause too long\")\n\n    }\n\n    function abi_encode_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint112(value) {\n        if iszero(eq(value, cleanup_t_uint112(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint112_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint112(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERR: owner can't be included\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Asset pool currently locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"WARNING: contract is in pause fo\")\n\n        mstore(add(memPtr, 32), \"r maintenance\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118(memPtr) {\n\n        mstore(add(memPtr, 0), \"WARNING: contract is in pause fo\")\n\n        mstore(add(memPtr, 32), \"r upgrade\")\n\n    }\n\n    function abi_encode_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99(memPtr) {\n\n        mstore(add(memPtr, 0), \"TX Limit Exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3DD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98E5BFEE GT PUSH2 0x1FD JUMPI DUP1 PUSH4 0xCCE85055 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xEFE25AD2 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xF708A64F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xF708A64F EQ PUSH2 0xEC6 JUMPI DUP1 PUSH4 0xF84BA65D EQ PUSH2 0xEEF JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0xF18 JUMPI DUP1 PUSH4 0xFB4193BE EQ PUSH2 0xF43 JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0xF6C JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xEFE25AD2 EQ PUSH2 0xE0C JUMPI DUP1 PUSH4 0xF0B37C04 EQ PUSH2 0xE37 JUMPI DUP1 PUSH4 0xF1F3BCA3 EQ PUSH2 0xE60 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9D JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xE2163851 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xE2163851 EQ PUSH2 0xD62 JUMPI DUP1 PUSH4 0xE2482606 EQ PUSH2 0xD8D JUMPI DUP1 PUSH4 0xE91F214E EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0xE96FADA2 EQ PUSH2 0xDE1 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xCCE85055 EQ PUSH2 0xCA8 JUMPI DUP1 PUSH4 0xD0889358 EQ PUSH2 0xCD3 JUMPI DUP1 PUSH4 0xD717C918 EQ PUSH2 0xCFC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xD25 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xAF7A2458 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0xBBEA13D4 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0xBBEA13D4 EQ PUSH2 0xBEC JUMPI DUP1 PUSH4 0xC2852F38 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0xC8E02934 EQ PUSH2 0xC40 JUMPI DUP1 PUSH4 0xCA33E64C EQ PUSH2 0xC7D JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xAF7A2458 EQ PUSH2 0xB46 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0xB9A JUMPI DUP1 PUSH4 0xB7BFFF65 EQ PUSH2 0xBC3 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0xA69C17E0 GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0xA69C17E0 EQ PUSH2 0xA88 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xADE JUMPI DUP1 PUSH4 0xAD84F341 EQ PUSH2 0xB1B JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x98E5BFEE EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0x9E061B48 EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0xA26BD13C EQ PUSH2 0xA34 JUMPI DUP1 PUSH4 0xA4B45C00 EQ PUSH2 0xA5F JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x3FF942CE GT PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x748A9DC2 GT PUSH2 0x28B JUMPI DUP1 PUSH4 0x893D20E8 GT PUSH2 0x25A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x936 JUMPI DUP1 PUSH4 0x94DA3E86 EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x98C JUMPI DUP1 PUSH4 0x95DAB460 EQ PUSH2 0x9B7 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x748A9DC2 EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0x75EAD12B EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0x7D1DB4A5 EQ PUSH2 0x8B7 JUMPI DUP1 PUSH4 0x885BD9EE EQ PUSH2 0x8E2 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x5C85974F GT PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x5C85974F EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0x658D4B7F EQ PUSH2 0x7D0 JUMPI DUP1 PUSH4 0x6DDD1713 EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x824 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x3FF942CE EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0x51D016F5 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x563BF54D EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0x571AC8B0 EQ PUSH2 0x76A JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x201E7991 GT PUSH2 0x370 JUMPI DUP1 PUSH4 0x2B112E49 GT PUSH2 0x33F JUMPI DUP1 PUSH4 0x2B112E49 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0x367FF4A7 EQ PUSH2 0x6AE JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x201E7991 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x20FFE2FD EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x2138CE01 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5DE JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x9CFC486 GT PUSH2 0x3AC JUMPI DUP1 PUSH4 0x9CFC486 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x1161AE39 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x19FBE385 EQ PUSH2 0x538 JUMPI PUSH2 0x3E4 JUMP JUMPDEST DUP1 PUSH4 0x15CB3FF EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x445B667 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x46A JUMPI PUSH2 0x3E4 JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E4 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x4EC2 JUMP JUMPDEST PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x10E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH2 0x124F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C8 PUSH2 0x15B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x4FD2 JUMP JUMPDEST PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x630 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x188A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x698 PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x5041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C3 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D0 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EE PUSH2 0x18F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x768 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x1910 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x791 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x19FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x50EF JUMP JUMPDEST PUSH2 0x1A6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80E PUSH2 0x1B0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x876 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8CC PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x909 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x904 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x1B7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x920 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92D SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94B PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x958 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x976 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x1CB4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA07 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1E PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA49 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x5159 JUMP JUMPDEST PUSH2 0x1F27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9D PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC8 PUSH2 0x2036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB05 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x4EC2 JUMP JUMPDEST PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB30 PUSH2 0x2071 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x2077 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB84 PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB91 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x20FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x21A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC01 PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x220B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC67 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x4FA5 JUMP JUMPDEST PUSH2 0x231D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC92 PUSH2 0x25F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9F SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCBD PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x51C6 JUMP JUMPDEST PUSH2 0x263C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD23 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x4F65 JUMP JUMPDEST PUSH2 0x26B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD47 SWAP2 SWAP1 PUSH2 0x5159 JUMP JUMPDEST PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD59 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD77 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x28A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDCB PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF6 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE21 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE5E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x29D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x5199 JUMP JUMPDEST PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE94 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x5257 JUMP JUMPDEST PUSH2 0x2A9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x50EF JUMP JUMPDEST PUSH2 0x2BB6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF16 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x50EF JUMP JUMPDEST PUSH2 0x2E56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2D PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x52E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x2F1F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x4F38 JUMP JUMPDEST PUSH2 0x3039 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x4F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x28 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B69667920526973696E6720466C6F6F7200000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10D2 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10ED CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1123 SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x25 SLOAD PUSH2 0x113C SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x117E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1175 SWAP1 PUSH2 0x543B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1219 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1247 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12BB PUSH2 0x125D PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x129E PUSH1 0x2 PUSH2 0x1290 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12D7 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130D SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1388 DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1352 SWAP1 PUSH2 0x553C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 SLOAD DUP2 LT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1397 SWAP1 PUSH2 0x55A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x14 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x13B3 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x13F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1D DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1E DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x140D CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1443 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94799D86 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x55DD JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x1523 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151A SWAP1 PUSH2 0x56A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x20FFE2FD DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x513E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15C1 PUSH1 0x13 SLOAD PUSH2 0x231D JUMP JUMPDEST SWAP1 POP PUSH1 0x13 SLOAD DUP2 GT PUSH2 0x15D2 JUMPI PUSH1 0x13 SLOAD SWAP1 POP JUMPDEST PUSH1 0x15 SLOAD DUP2 LT PUSH2 0x15E1 JUMPI PUSH1 0x15 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x160C PUSH1 0x13 SLOAD PUSH2 0x15FE DUP5 PUSH1 0x12 SLOAD PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x14 SLOAD DUP2 GT ISZERO PUSH2 0x161E JUMPI PUSH1 0x14 SLOAD SWAP1 POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x17F4 JUMPI PUSH2 0x1773 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E7420416C6C6F77616E636500000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x17FF DUP5 DUP5 DUP5 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1885 PUSH2 0x1838 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x1877 PUSH2 0x1866 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x25 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER SWAP1 POP PUSH2 0x1908 DUP2 DUP5 PUSH2 0x38AB JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1919 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194F SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xE DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xF DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x10 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH2 0x19AB DUP2 PUSH2 0x199D DUP5 PUSH2 0x198F DUP8 DUP10 PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE POP PUSH1 0x14 SLOAD PUSH1 0x12 SLOAD GT ISZERO PUSH2 0x19C7 JUMPI PUSH1 0x12 SLOAD PUSH1 0x14 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 PUSH1 0x13 SLOAD PUSH2 0x19D6 SWAP2 SWAP1 PUSH2 0x56F1 JUMP JUMPDEST PUSH1 0x12 SLOAD LT PUSH2 0x19E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F7 DUP3 PUSH1 0x6 SLOAD PUSH2 0xFF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A07 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1A46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3D SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH1 0x6 SLOAD PUSH2 0x1A56 SWAP2 SWAP1 PUSH2 0x56F1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1A75 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1AB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AAB SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x29 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x26 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B88 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1BC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBE SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5452460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CBD CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1CFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF3 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 DUP2 GT ISZERO PUSH2 0x1D42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D39 SWAP1 PUSH2 0x553C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7E SWAP1 PUSH2 0x55A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x15 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1D9A CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1DD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD0 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x98E5BFEE DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E34 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7BF7D61B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ED8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EFC SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F30 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F66 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x19 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2069 CALLER DUP5 DUP5 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x27 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2080 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x20BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B6 SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x25 DUP2 SWAP1 SSTORE POP PUSH2 0x20DC PUSH3 0x15180 DUP3 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x26 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x28 SLOAD PUSH1 0x27 SLOAD PUSH2 0x20F7 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2107 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2146 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213D SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x21A9 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x21E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21DF SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2214 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224A SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD2F00 PUSH1 0x28 SLOAD PUSH1 0x27 SLOAD PUSH2 0x2267 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST PUSH2 0x2271 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22AA SWAP1 PUSH2 0x57D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22EE SWAP1 PUSH2 0x5842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x27 DUP2 SWAP1 SSTORE POP PUSH2 0x2314 PUSH3 0x15180 DUP3 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x28 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2392 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B6 SWAP2 SWAP1 PUSH2 0x5737 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24B4 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x245C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2480 SWAP2 SWAP1 PUSH2 0x58E4 JUMP JUMPDEST DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH2 0x2588 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2587 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2557 SWAP2 SWAP1 PUSH2 0x58E4 JUMP JUMPDEST DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25E1 PUSH2 0x25A7 PUSH2 0x2598 PUSH2 0x1B71 JUMP JUMPDEST DUP5 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x25D3 PUSH2 0x25C4 DUP7 PUSH2 0x25B6 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP11 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2645 CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x2684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x267B SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x29 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2A DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2B DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x26BA CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x26F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26F0 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x275E DUP4 PUSH2 0x2750 DUP7 DUP6 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 PUSH1 0x24 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27DF SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x280D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28AD CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x28EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E3 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x28F9 DUP3 PUSH2 0x188A JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x293B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2932 SWAP1 PUSH2 0x5983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 JUMP JUMPDEST PUSH1 0x19 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29E1 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2A20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A17 SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x2A92 JUMPI PUSH2 0x2A8B PUSH2 0x15B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AA6 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2AE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ADC SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x4DBA622D284ED0014EE4B9A6A68386BE1A4C08A4913AE272DE89199CC686163 DUP2 PUSH1 0x40 MLOAD PUSH2 0x2BAB SWAP2 SWAP1 PUSH2 0x59C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2BBF CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x2BFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BF5 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2C88 JUMPI POP PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x2C91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2D83 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4C SWAP3 SWAP2 SWAP1 PUSH2 0x5A1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2E52 JUMP JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP4 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1F SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2E5F CALLER PUSH2 0x3039 JUMP JUMPDEST PUSH2 0x2E9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E95 SWAP1 PUSH2 0x54D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2F28 CALLER PUSH2 0x188A JUMP JUMPDEST PUSH2 0x2F67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5E SWAP1 PUSH2 0x534A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x25 SLOAD PUSH2 0x2F77 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2FB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB0 SWAP1 PUSH2 0x5A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2FE4 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3021 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x309D SWAP2 SWAP1 PUSH2 0x56F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30B3 SWAP2 SWAP1 PUSH2 0x5399 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x30C9 SWAP2 SWAP1 PUSH2 0x5AF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x3119 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3110 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3130 PUSH2 0x20E5 JUMP JUMPDEST ISZERO PUSH2 0x3224 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 PUSH2 0x31E4 JUMPI POP PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x3223 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x321A SWAP1 PUSH2 0x5BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x2C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x324B JUMPI PUSH2 0x3244 DUP5 DUP5 DUP5 PUSH2 0x3E70 JUMP JUMPDEST SWAP1 POP PUSH2 0x388E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32AB DUP5 DUP4 PUSH2 0x38AB JUMP JUMPDEST SWAP1 POP PUSH2 0x388E JUMP JUMPDEST PUSH2 0x32BC DUP5 DUP4 PUSH2 0x3FDE JUMP JUMPDEST PUSH2 0x32C4 PUSH2 0x407B JUMP JUMPDEST ISZERO PUSH2 0x32D6 JUMPI PUSH2 0x32D1 PUSH2 0x4126 JUMP JUMPDEST PUSH2 0x32ED JUMP JUMPDEST PUSH2 0x32DE PUSH2 0x45C2 JUMP JUMPDEST ISZERO PUSH2 0x32EC JUMPI PUSH2 0x32EB PUSH2 0x466D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x3376 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x33C4 DUP6 PUSH2 0x486F JUMP JUMPDEST PUSH2 0x33CE JUMPI DUP3 PUSH2 0x33DA JUMP JUMPDEST PUSH2 0x33D9 DUP6 DUP6 DUP6 PUSH2 0x48EB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x342E DUP2 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x34C1 JUMPI PUSH2 0x34BA DUP4 PUSH1 0x17 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x35E4 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP7 PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35AE SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x35D9 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x35E2 JUMPI PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3707 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP6 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D1 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x36FC JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3705 JUMPI PUSH2 0x3706 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x45153AF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3774 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3798 SWAP2 SWAP1 PUSH2 0x55DD JUMP JUMPDEST ISZERO PUSH2 0x3823 JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8BD2DA9A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3818 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3821 JUMPI PUSH2 0x3822 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3880 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x38A3 SWAP2 SWAP1 PUSH2 0x5BE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B5 PUSH2 0x20E5 JUMP JUMPDEST ISZERO PUSH2 0x394E JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x394D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3944 SWAP1 PUSH2 0x5C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3983 PUSH2 0x395B PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x3975 DUP6 PUSH2 0x3967 PUSH2 0x1B71 JUMP JUMPDEST PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x3A35 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3ACA DUP5 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH2 0x3B16 PUSH2 0x1FF5 JUMP JUMPDEST LT PUSH2 0x3BAF JUMPI PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 DUP7 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B78 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x3CDC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BCB PUSH2 0x3BBC PUSH2 0x1FF5 JUMP JUMPDEST DUP5 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x21 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A50D278 DUP8 PUSH2 0x3C14 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C31 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3C89 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3CC6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3CCB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3DFF JUMPI PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x14B6CA96 DUP7 PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC9 SWAP3 SWAP2 SWAP1 PUSH2 0x545B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3DF4 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x3DFD JUMPI PUSH2 0x3DFE JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0x3E5C SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EFB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E73756666696369656E742042616C616E6365000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3F90 DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO DUP1 PUSH2 0x4038 JUMPI POP PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x4077 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406E SWAP1 PUSH2 0x5CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x40E0 JUMPI POP PUSH2 0x40DE PUSH2 0x20E5 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x40F9 JUMPI POP PUSH1 0x2C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4111 JUMPI POP PUSH1 0x29 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4121 JUMPI POP PUSH1 0x2A SLOAD PUSH1 0x16 SLOAD LT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x4151 PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH2 0x124F JUMP JUMPDEST PUSH2 0x415D JUMPI PUSH1 0xE SLOAD PUSH2 0x4160 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x41A0 PUSH1 0x2 PUSH2 0x4192 PUSH1 0x12 SLOAD PUSH2 0x4184 DUP7 PUSH1 0x2A SLOAD PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x41B9 DUP3 PUSH1 0x2A SLOAD PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41D8 JUMPI PUSH2 0x41D7 PUSH2 0x5D13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4206 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x421E JUMPI PUSH2 0x421D PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x428F JUMPI PUSH2 0x428E PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x791AC947 DUP5 PUSH1 0x0 DUP6 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4332 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x434C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4360 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4381 PUSH1 0x17 SLOAD PUSH2 0x4373 ADDRESS PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x439C DUP3 SELFBALANCE PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x43C8 PUSH2 0x43B7 PUSH1 0x2 DUP10 PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4404 PUSH1 0x2 PUSH2 0x43F6 DUP5 PUSH2 0x43E8 DUP13 DUP9 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x442F DUP4 PUSH2 0x4421 PUSH1 0x11 SLOAD DUP8 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x445A DUP5 PUSH2 0x444C PUSH1 0xF SLOAD DUP9 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x4466 DUP3 DUP3 PUSH2 0x4B2F JUMP JUMPDEST PUSH1 0x0 DUP10 GT ISZERO PUSH2 0x459B JUMPI PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 DUP5 ADDRESS DUP13 PUSH1 0x0 DUP1 PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44F8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E89 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x453B SWAP2 SWAP1 PUSH2 0x5EFF JUMP JUMPDEST POP POP POP PUSH2 0x455B PUSH1 0x17 SLOAD PUSH2 0x454D ADDRESS PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP PUSH32 0x424DB2872186FA7E7AFA7A5E902ED3B49A2EF19C2F5431E672462495DD6B4506 DUP4 DUP11 PUSH1 0x40 MLOAD PUSH2 0x4592 SWAP3 SWAP2 SWAP1 PUSH2 0x5F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4627 JUMPI POP PUSH2 0x4625 PUSH2 0x20E5 JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4640 JUMPI POP PUSH1 0x2C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4658 JUMPI POP PUSH1 0x29 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 ISZERO PUSH2 0x4668 JUMPI POP PUSH1 0x2B SLOAD PUSH1 0x17 SLOAD LT ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46A5 JUMPI PUSH2 0x46A4 PUSH2 0x5D13 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x46D3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46EB JUMPI PUSH2 0x46EA PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x475C JUMPI PUSH2 0x475B PUSH2 0x5D42 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x791AC947 PUSH1 0x2B SLOAD PUSH1 0x0 DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47FC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x482A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x484B PUSH1 0x16 SLOAD PUSH2 0x483D ADDRESS PUSH2 0x1B22 JUMP JUMPDEST PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x2C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 ISZERO ISZERO PUSH1 0x1C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x4895 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x48E6 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH1 0x0 PUSH2 0x4972 PUSH1 0x13 SLOAD PUSH2 0x4964 PUSH2 0x4955 DUP6 PUSH2 0x2A7B JUMP JUMPDEST DUP8 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x49FB JUMPI PUSH1 0x0 PUSH2 0x49A5 PUSH1 0x13 SLOAD PUSH2 0x4997 PUSH1 0x12 SLOAD DUP9 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x49BC DUP3 DUP5 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x49D3 DUP2 PUSH1 0x17 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x17 DUP2 SWAP1 SSTORE POP PUSH2 0x49EE DUP3 PUSH1 0x16 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x4A17 JUMP JUMPDEST PUSH2 0x4A10 DUP2 PUSH1 0x16 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x16 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x4A69 DUP2 PUSH1 0x8 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30A5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4B09 SWAP2 SWAP1 PUSH2 0x4D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4B24 DUP2 DUP6 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4B77 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4BB4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4BB9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4BF2 PUSH1 0x13 SLOAD PUSH2 0x4BE4 PUSH1 0x1B SLOAD DUP8 PUSH2 0x30BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x308F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C09 DUP3 DUP7 PUSH2 0x3895 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x19 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4C53 SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4C90 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C95 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CEB SWAP1 PUSH2 0x5AE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4D28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4D2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4D3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D57 DUP2 PUSH2 0x4D44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D72 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D97 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4DC1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DE3 DUP3 PUSH2 0x4D78 JUMP JUMPDEST PUSH2 0x4DED DUP2 DUP6 PUSH2 0x4D83 JUMP JUMPDEST SWAP4 POP PUSH2 0x4DFD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D94 JUMP JUMPDEST PUSH2 0x4E06 DUP2 PUSH2 0x4DC7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E2B DUP2 DUP5 PUSH2 0x4DD8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E63 DUP3 PUSH2 0x4E38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E73 DUP2 PUSH2 0x4E58 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E90 DUP2 PUSH2 0x4E6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E9F DUP2 PUSH2 0x4D44 JUMP JUMPDEST DUP2 EQ PUSH2 0x4EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4EBC DUP2 PUSH2 0x4E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4ED9 JUMPI PUSH2 0x4ED8 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4EE7 DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4EF8 DUP6 DUP3 DUP7 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F17 DUP2 PUSH2 0x4F02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F4E JUMPI PUSH2 0x4F4D PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F5C DUP5 DUP3 DUP6 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4F7C JUMPI PUSH2 0x4F7B PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4F8A DUP6 DUP3 DUP7 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4F9B DUP6 DUP3 DUP7 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FBB JUMPI PUSH2 0x4FBA PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FC9 DUP5 DUP3 DUP6 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4FEB JUMPI PUSH2 0x4FEA PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FF9 DUP7 DUP3 DUP8 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x500A DUP7 DUP3 DUP8 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x501B DUP7 DUP3 DUP8 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x503B DUP2 PUSH2 0x5025 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5056 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x5076 JUMPI PUSH2 0x5075 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5084 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x5095 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x50A6 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x50B7 DUP8 DUP3 DUP9 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x50CC DUP2 PUSH2 0x4F02 JUMP JUMPDEST DUP2 EQ PUSH2 0x50D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50E9 DUP2 PUSH2 0x50C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5106 JUMPI PUSH2 0x5105 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5114 DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5125 DUP6 DUP3 DUP7 ADD PUSH2 0x50DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5138 DUP2 PUSH2 0x4E58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5153 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x512F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5170 JUMPI PUSH2 0x516F PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x517E DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x518F DUP6 DUP3 DUP7 ADD PUSH2 0x4E81 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51AF JUMPI PUSH2 0x51AE PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51BD DUP5 DUP3 DUP6 ADD PUSH2 0x50DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x51DF JUMPI PUSH2 0x51DE PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51ED DUP7 DUP3 DUP8 ADD PUSH2 0x50DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x51FE DUP7 DUP3 DUP8 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x520F DUP7 DUP3 DUP8 ADD PUSH2 0x4EAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5224 DUP3 PUSH2 0x4E38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5234 DUP2 PUSH2 0x5219 JUMP JUMPDEST DUP2 EQ PUSH2 0x523F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5251 DUP2 PUSH2 0x522B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x526D JUMPI PUSH2 0x526C PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x527B DUP5 DUP3 DUP6 ADD PUSH2 0x5242 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A9 PUSH2 0x52A4 PUSH2 0x529F DUP5 PUSH2 0x4E38 JUMP JUMPDEST PUSH2 0x5284 JUMP JUMPDEST PUSH2 0x4E38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52BB DUP3 PUSH2 0x528E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52CD DUP3 PUSH2 0x52B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52DD DUP2 PUSH2 0x52C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x52F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x52D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x214F574E45520000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5334 PUSH1 0x6 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x533F DUP3 PUSH2 0x52FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5363 DUP2 PUSH2 0x5327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x53A4 DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x53AF DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x53E4 JUMPI PUSH2 0x53E3 PUSH2 0x536A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265776172647320706F6F6C2063757272656E746C79206C6F636B6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5425 PUSH1 0x1D DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5430 DUP3 PUSH2 0x53EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5454 DUP2 PUSH2 0x5418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5470 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x547D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x21415554484F52495A4544000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54BA PUSH1 0xB DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x54C5 DUP3 PUSH2 0x5484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54E9 DUP2 PUSH2 0x54AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F2068696768000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5526 PUSH1 0xE DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5531 DUP3 PUSH2 0x54F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5555 DUP2 PUSH2 0x5519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56616C756520746F6F206C6F7700000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5592 PUSH1 0xD DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x559D DUP3 PUSH2 0x555C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x55C1 DUP2 PUSH2 0x5585 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x55D7 DUP2 PUSH2 0x50C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55F3 JUMPI PUSH2 0x55F2 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5601 DUP5 DUP3 DUP6 ADD PUSH2 0x55C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206368616E6765206469766964656E6420746F6B656E20616674 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65722074686520666972737420646973747269627574696F6E20686173207374 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6172746564000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568C PUSH1 0x45 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5697 DUP3 PUSH2 0x560A JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56BB DUP2 PUSH2 0x567F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x56FC DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x5707 DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5717 JUMPI PUSH2 0x5716 PUSH2 0x56C2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5731 DUP2 PUSH2 0x4E6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x574D JUMPI PUSH2 0x574C PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x575B DUP5 DUP3 DUP6 ADD PUSH2 0x5722 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682064617973207061737365642073696E6365206C6173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420706175736500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C0 PUSH1 0x27 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x57CB DUP3 PUSH2 0x5764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57EF DUP2 PUSH2 0x57B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465736972656420706175736520746F6F206C6F6E6700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582C PUSH1 0x16 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5837 DUP3 PUSH2 0x57F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x585B DUP2 PUSH2 0x581F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5885 DUP2 PUSH2 0x5862 JUMP JUMPDEST DUP2 EQ PUSH2 0x5890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58A2 DUP2 PUSH2 0x587C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58C1 DUP2 PUSH2 0x58A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x58CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58DE DUP2 PUSH2 0x58B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58FD JUMPI PUSH2 0x58FC PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x590B DUP7 DUP3 DUP8 ADD PUSH2 0x5893 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x591C DUP7 DUP3 DUP8 ADD PUSH2 0x5893 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x592D DUP7 DUP3 DUP8 ADD PUSH2 0x58CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4552523A206F776E65722063616E277420626520696E636C7564656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596D PUSH1 0x1C DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5978 DUP3 PUSH2 0x5937 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x599C DUP2 PUSH2 0x5960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59AE DUP3 PUSH2 0x52B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59BE DUP2 PUSH2 0x59A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A04 PUSH2 0x59FF PUSH2 0x59FA DUP5 PUSH2 0x59DF JUMP JUMPDEST PUSH2 0x5284 JUMP JUMPDEST PUSH2 0x4D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A14 DUP2 PUSH2 0x59E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5A2F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5A3C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5A0B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x417373657420706F6F6C2063757272656E746C79206C6F636B65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A79 PUSH1 0x1B DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A84 DUP3 PUSH2 0x5A43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AA8 DUP2 PUSH2 0x5A6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ACA PUSH1 0x0 DUP4 PUSH2 0x5AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x5AD5 DUP3 PUSH2 0x5ABA JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AEB DUP3 PUSH2 0x5ABD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B00 DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B0B DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5B44 JUMPI PUSH2 0x5B43 PUSH2 0x536A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5741524E494E473A20636F6E747261637420697320696E20706175736520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206D61696E74656E616E636500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BAB PUSH1 0x2D DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BB6 DUP3 PUSH2 0x5B4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5BDA DUP2 PUSH2 0x5B9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BEC DUP3 PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BF7 DUP4 PUSH2 0x4D44 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C0A JUMPI PUSH2 0x5C09 PUSH2 0x536A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5741524E494E473A20636F6E747261637420697320696E20706175736520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7220757067726164650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C71 PUSH1 0x29 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C7C DUP3 PUSH2 0x5C15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CA0 DUP2 PUSH2 0x5C64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5458204C696D6974204578636565646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CDD PUSH1 0x11 DUP4 PUSH2 0x4D83 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CE8 DUP3 PUSH2 0x5CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D0C DUP2 PUSH2 0x5CD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DA6 DUP2 PUSH2 0x4E58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DB8 DUP4 DUP4 PUSH2 0x5D9D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DDC DUP3 PUSH2 0x5D71 JUMP JUMPDEST PUSH2 0x5DE6 DUP2 DUP6 PUSH2 0x5D7C JUMP JUMPDEST SWAP4 POP PUSH2 0x5DF1 DUP4 PUSH2 0x5D8D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E22 JUMPI DUP2 MLOAD PUSH2 0x5E09 DUP9 DUP3 PUSH2 0x5DAC JUMP JUMPDEST SWAP8 POP PUSH2 0x5E14 DUP4 PUSH2 0x5DC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5DF5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5E44 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4D4E JUMP JUMPDEST PUSH2 0x5E51 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x5A0B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5E63 DUP2 DUP7 PUSH2 0x5DD1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E72 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5E7F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x5E9E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5EAB PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x4D4E JUMP JUMPDEST PUSH2 0x5EB8 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x5A0B JUMP JUMPDEST PUSH2 0x5EC5 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5A0B JUMP JUMPDEST PUSH2 0x5ED2 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x512F JUMP JUMPDEST PUSH2 0x5EDF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5EF9 DUP2 PUSH2 0x4E96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5F18 JUMPI PUSH2 0x5F17 PUSH2 0x4E33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5F26 DUP7 DUP3 DUP8 ADD PUSH2 0x5EEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5F37 DUP7 DUP3 DUP8 ADD PUSH2 0x5EEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5F48 DUP7 DUP3 DUP8 ADD PUSH2 0x5EEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5F67 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D4E JUMP JUMPDEST PUSH2 0x5F74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4D4E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0x5E CODESIZE ADD 0x5E 0x4E 0xB7 SLOAD 0xEC PUSH8 0xE8D2F537CC862E8C MOD PUSH19 0xA842EF86E40F29402AE1A0FF64736F6C634300 ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;15357:50;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17316:80;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17734:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35654:320;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32885:183;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17049:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29261:236;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32089:180;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28877:291;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21607:574;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18236:360;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32664:140;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2598:101;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17142:80;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14982:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14301:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;36085:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30757:550;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17953:115;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28577:142;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30364:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15321:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17484:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15025:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33582:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13223:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34831:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17401:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12755:64;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14342:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17227:84;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29597:277;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32435:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33904:135;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14934:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31418:225;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33780:117;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14792:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18075:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15063:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34045:184;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34657:115;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2283:92;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32314:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14254:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34310:341;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22286:623;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14386:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14848:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31764:224;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33167:336;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;17594:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15422:57;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34996:188;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12701:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14428:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14216:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2447:95;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22982:151;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2986:169;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29943:355;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30570:126;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14762:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35236:367;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2766:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15098:24;;;;:::o;15357:50::-;;;;:::o;17316:80::-;17364:13;17388:5;;;;;;;;;;;;;;;;;17381:12;;17316:80;:::o;17734:212::-;17809:4;17860:6;17825:11;:23;17837:10;17825:23;;;;;;;;;;;;;;;:32;17849:7;17825:32;;;;;;;;;;;;;;;:41;;;;17902:7;17881:37;;17890:10;17881:37;;;17911:6;17881:37;;;;;;:::i;:::-;;;;;;;;17935:4;17928:11;;17734:212;;;;:::o;35654:320::-;2010:19;2018:10;2010:7;:19::i;:::-;2002:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;35778:17:::1;;35753:22;;:42;;;;:::i;:::-;35734:15;:61;;35726:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;35839:26;35868:18;;;;;;;;;;;:26;;;35839:55;;35904:11;;;;;;;;;;;:32;;;35937:9;35948:18;35904:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;35716:258;35654:320:::0;:::o;32885:183::-;32965:4;33055:6;32988:64;33029:22;:20;:22::i;:::-;32988:36;33001:22;33021:1;33001:15;33011:4;;;;;;;;;;;33001:9;:15::i;:::-;:19;;:22;;;;:::i;:::-;32988:8;:12;;:36;;;;:::i;:::-;:40;;:64;;;;:::i;:::-;:73;32981:80;;32885:183;;;;:::o;17049:88::-;17104:7;17122:12;;17115:19;;17049:88;:::o;29261:236::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;29374:4:::1;29359:11;:19;;29351:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;29430:8;;29415:11;:23;;29407:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;29479:11;29466:10;:24;;;;29261:236:::0;:::o;32089:180::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;32204:7:::1;32186:15;:25;;;;32250:12;32221:26;:41;;;;32089:180:::0;;:::o;28877:291::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;29014:4:::1;28972:46;;:19;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;;28964:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;29102:19;;;;;;;;;;;:36;;;29139:21;29102:59;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;28877:291:::0;:::o;21607:574::-;21660:7;21679:22;21704:34;21723:14;;21704:18;:34::i;:::-;21679:59;;21769:14;;21751;:32;21748:92;;21815:14;;21798:31;;21748:92;21870:17;;21852:14;:35;21849:98;;21919:17;;21902:34;;21849:98;21956:15;21974:48;22007:14;;21974:28;21987:14;21974:8;;:12;;:28;;;;:::i;:::-;:32;;:48;;;;:::i;:::-;21956:66;;22095:10;;22085:7;:20;22082:69;;;22130:10;;22120:20;;22082:69;22167:7;22160:14;;;;21607:574;:::o;18236:360::-;18336:4;18390:12;;18355:11;:19;18367:6;18355:19;;;;;;;;;;;;;;;:31;18375:10;18355:31;;;;;;;;;;;;;;;;:47;18352:179;;18451:69;18487:6;18451:69;;;;;;;;;;;;;;;;;:11;:19;18463:6;18451:19;;;;;;;;;;;;;;;:31;18471:10;18451:31;;;;;;;;;;;;;;;;:35;;:69;;;;;:::i;:::-;18417:11;:19;18429:6;18417:19;;;;;;;;;;;;;;;:31;18437:10;18417:31;;;;;;;;;;;;;;;:103;;;;18352:179;18549:40;18563:6;18571:9;18582:6;18549:13;:40::i;:::-;18542:47;;18236:360;;;;;:::o;32664:140::-;32717:7;32743:54;32781:15;32791:4;;;;;;;;;;;32781:9;:15::i;:::-;32743:33;32760:15;32770:4;;;;;;;;;;;32760:9;:15::i;:::-;32743:12;;:16;;:33;;;;:::i;:::-;:37;;:54;;;;:::i;:::-;32736:61;;32664:140;:::o;2598:101::-;2653:4;2687:5;;;;;;;;;;;2676:16;;:7;:16;;;2669:23;;2598:101;;;:::o;17142:80::-;17194:5;13144:1;17203:16;;17142:80;:::o;14982:37::-;;;;:::o;14301:35::-;;;;:::o;36085:150::-;36139:4;36157:14;36174:10;36157:27;;36201;36213:6;36221;36201:11;:27::i;:::-;36194:34;;;36085:150;;;:::o;30757:550::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;30965:13:::1;30950:12;:28;;;;31001:11;30988:10;:24;;;;31035:11;31022:10;:24;;;;31071:13;31056:12;:28;;;;31105:66;31157:13;31105:47;31140:11;31105:30;31123:11;31105:13;:17;;:30;;;;:::i;:::-;:34;;:47;;;;:::i;:::-;:51;;:66;;;;:::i;:::-;31094:8;:77;;;;31195:10;;31184:8;;:21;31181:72;;;31234:8;;31221:10;:21;;;;31181:72;31298:1;31281:14;;:18;;;;:::i;:::-;31270:8;;:29;31262:38;;;::::0;::::1;;30757:550:::0;;;;:::o;17953:115::-;18008:4;18031:30;18039:7;18048:12;;18031:7;:30::i;:::-;18024:37;;17953:115;;;:::o;28577:142::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;28676:4:::1;28661:12;;:19;;;;:::i;:::-;28651:6;:29;;28643:38;;;::::0;::::1;;28706:6;28691:12;:21;;;;28577:142:::0;:::o;30364:118::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;30469:6:::1;30447:11;:19;30459:6;30447:19;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;30364:118:::0;;:::o;15321:30::-;;;;;;;;;;;;;:::o;17484:105::-;17550:7;17568:9;:18;17578:7;17568:18;;;;;;;;;;;;;;;;17561:25;;17484:105;;;:::o;15025:32::-;;;;:::o;33582:110::-;33638:7;33664:21;33657:28;;33582:110;:::o;13223:51::-;;;;:::o;34831:113::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;34933:4:::1;34902:19;:28;34922:7;34902:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;34831:113:::0;:::o;17401:78::-;17453:7;17471:5;;;;;;;;;;;17464:12;;17401:78;:::o;12755:64::-;;;;;;;;;;;;;:::o;14342:36::-;;;;:::o;17227:84::-;17277:13;17301:7;;;;;;;;;;;;;;;;;17294:14;;17227:84;:::o;29597:277::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;29731:6:::1;29709:18;:28;;29701:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;29796:5;29774:18;:27;;29766:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;29849:18;29829:17;:38;;;;29597:277:::0;:::o;32435:157::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;32524:19:::1;;;;;;;;;;;:43;;;32568:16;32524:61;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;32435:157:::0;:::o;33904:135::-;33960:7;33986:19;;;;;;;;;;;:44;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33979:53;;33904:135;:::o;14934:41::-;;;;;;;;;;;;;:::o;31418:225::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;31560:22:::1;31536:21;;:46;;;;;;;;;;;;;;;;;;31615:21;31592:20;;:44;;;;;;;;;;;;;;;;;;31418:225:::0;;:::o;33780:117::-;33838:7;33864:18;;;;;;;;;;;:26;;;33857:33;;33780:117;:::o;14792:19::-;;;;;;;;;;;;;:::o;18075:154::-;18155:4;18178:44;18192:10;18204:9;18215:6;18178:13;:44::i;:::-;18171:51;;18075:154;;;;:::o;15063:29::-;;;;:::o;34045:184::-;2010:19;2018:10;2010:7;:19::i;:::-;2002:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;34152:15:::1;34127:22;:40;;;;34197:25;34215:6;34197:13;:17;;:25;;;;:::i;:::-;34177:17;:45;;;;34045:184:::0;:::o;34657:115::-;34698:4;34756:9;;34739:14;;:26;;;;:::i;:::-;34721:15;:44;34714:51;;34657:115;:::o;2283:92::-;2010:19;2018:10;2010:7;:19::i;:::-;2002:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2364:4:::1;2342:14:::0;:19:::1;2357:3;2342:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2283:92:::0;:::o;32314:114::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;32405:16:::1;32389:13;;:32;;;;;;;;;;;;;;;;;;32314:114:::0;:::o;14254:40::-;;;;:::o;34310:341::-;2010:19;2018:10;2010:7;:19::i;:::-;2002:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;34441:7:::1;34429:9;;34412:14;;:26;;;;:::i;:::-;:36;;;;:::i;:::-;34393:15;:55;;34385:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;34527:1;34510:13;:18;;34502:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;34582:15;34565:14;:32;;;;34619:25;34637:6;34619:13;:17;;:25;;;;:::i;:::-;34607:9;:37;;;;34310:341:::0;:::o;22286:623::-;22356:7;22375:19;22406:4;;;;;;;;;;;22375:36;;22421:14;22438:10;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22421:36;;22467:19;22496:21;22540:4;;;;;;;;;;;22530:14;;:6;:14;;;22527:216;;;22592:10;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22560:56;;;;;;;;;;;;;;;;;;;22527:216;;;22655:4;22637:23;;:6;:23;;;22633:110;;;22708:10;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22676:56;;;;;;;;;;;;;;;;;;;22633:110;22527:216;22752:16;22771:106;22832:44;22850:25;:23;:25::i;:::-;22832:13;:17;;:44;;;;:::i;:::-;22771:56;22787:39;22814:11;22787:22;:20;:22::i;:::-;:26;;:39;;;;:::i;:::-;22771:11;:15;;:56;;;;:::i;:::-;:60;;:106;;;;:::i;:::-;22752:125;;22894:8;22887:15;;;;;;;22286:623;;;:::o;14386:36::-;;;;;;;;;;;;;:::o;14848:33::-;;;;;;;;;;;;;:::o;31764:224::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;31893:8:::1;31879:11;;:22;;;;;;;;;;;;;;;;;;31927:7;31911:13;:23;;;;31967:14;31944:20;:37;;;;31764:224:::0;;;:::o;33167:336::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;33274:26:::1;33303:18;;;;;;;;;;;:26;;;33274:55;;33339:20;33362:50;33400:11;33362:33;33385:9;33362:18;:22;;:33;;;;:::i;:::-;:37;;:50;;;;:::i;:::-;33339:73;;33422:11;;;;;;;;;;;:32;;;33455:26;;;;;;;;;;;33483:12;33422:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;33264:239;;33167:336:::0;;:::o;17594:133::-;17678:7;17696:11;:19;17708:6;17696:19;;;;;;;;;;;;;;;:28;17716:7;17696:28;;;;;;;;;;;;;;;;17689:35;;17594:133;;;;:::o;15422:57::-;;;;:::o;34996:188::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;35093:5:::1;35073:25;;:16;35081:7;35073;:16::i;:::-;:25;;;35065:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;35172:5;35141:19;:28;35161:7;35141:28;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;34996:188:::0;:::o;12701:48::-;12732:17;12701:48;;;:::o;14428:35::-;;;;;;;;;;;;;:::o;14216:32::-;;;;:::o;2447:95::-;2010:19;2018:10;2010:7;:19::i;:::-;2002:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2530:5:::1;2508:14;:19;2523:3;2508:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2447:95:::0;:::o;22982:151::-;23038:7;23060;23057:45;;;23077:22;:20;:22::i;:::-;23070:29;;;;23057:45;23118:8;;23111:15;;22982:151;;;;:::o;2986:169::-;2010:19;2018:10;2010:7;:19::i;:::-;2002:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3069:3:::1;3061:5;::::0;:11:::1;;;;;;;;;;;;;;;;;;3104:4;3082:14:::0;:19:::1;3097:3;3082:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3123:25;3144:3;3123:25;;;;;;:::i;:::-;;;;;;;;2986:169:::0;:::o;29943:355::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;30057:4:::1;30039:23;;:6;:23;;;;:41;;;;;30076:4;;;;;;;;;;;30066:14;;:6;:14;;;;30039:41;30031:50;;;::::0;::::1;;30118:6;30091:16;:24;30108:6;30091:24;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;30137:6;30134:158;;;30158:19;;;;;;;;;;;:28;;;30187:6;30195:1;30158:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;30134:158;;;30226:19;;;;;;;;;;;:28;;;30255:6;30263:9;:17;30273:6;30263:17;;;;;;;;;;;;;;;;30226:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;30134:158;29943:355:::0;;:::o;30570:126::-;2173:24;2186:10;2173:12;:24::i;:::-;2165:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;30683:6:::1;30657:15;:23;30673:6;30657:23;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;30570:126:::0;;:::o;14762:24::-;;;;;;;;;;;;;:::o;35236:367::-;2010:19;2018:10;2010:7;:19::i;:::-;2002:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;35359:17:::1;;35334:22;;:42;;;;:::i;:::-;35315:15;:61;;35307:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;35418:36;35457:21;35418:60;;35489:12;35514:9;35506:23;;35537:28;35506:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35488:82;;;35588:7;35580:16;;;::::0;::::1;;35297:306;;35236:367:::0;:::o;2766:105::-;2822:4;2845:14;:19;2860:3;2845:19;;;;;;;;;;;;;;;;;;;;;;;;;2838:26;;2766:105;;;:::o;463:96::-;521:7;551:1;547;:5;;;;:::i;:::-;540:12;;463:96;;;;:::o;154:::-;212:7;242:1;238;:5;;;;:::i;:::-;231:12;;154:96;;;;:::o;360:::-;418:7;448:1;444;:5;;;;:::i;:::-;437:12;;360:96;;;;:::o;566:201::-;652:7;708:1;703;:6;;711:12;695:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;749:1;745;:5;738:12;;566:201;;;;;:::o;18603:2043::-;18695:4;18714:10;:8;:10::i;:::-;18711:171;;;18776:4;18745:35;;:19;:27;18765:6;18745:27;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;:77;;;;18818:4;18784:38;;:19;:30;18804:9;18784:30;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;18745:77;18737:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;18711:171;18997:6;;;;;;;;;;;18994:63;;;19013:41;19028:6;19036:9;19047:6;19013:14;:41::i;:::-;19006:48;;;;18994:63;19217:4;;;;;;;;;;;19204:17;;:9;:17;;;19201:60;;;19231:27;19243:6;19251;19231:11;:27::i;:::-;19224:34;;;;19201:60;19360:28;19373:6;19381;19360:12;:28::i;:::-;19641:16;:14;:16::i;:::-;19638:98;;;19660:10;:8;:10::i;:::-;19638:98;;;19690:23;:21;:23::i;:::-;19687:49;;;19716:17;:15;:17::i;:::-;19687:49;19638:98;19767:53;19789:6;19767:53;;;;;;;;;;;;;;;;;:9;:17;19777:6;19767:17;;;;;;;;;;;;;;;;:21;;:53;;;;;:::i;:::-;19747:9;:17;19757:6;19747:17;;;;;;;;;;;;;;;:73;;;;19832:22;19857:21;19871:6;19857:13;:21::i;:::-;:67;;19918:6;19857:67;;;19881:34;19889:6;19897:9;19908:6;19881:7;:34::i;:::-;19857:67;19832:92;;19959:40;19984:14;19959:9;:20;19969:9;19959:20;;;;;;;;;;;;;;;;:24;;:40;;;;:::i;:::-;19936:9;:20;19946:9;19936:20;;;;;;;;;;;;;;;:63;;;;20033:4;20012:26;;:9;:26;;;20009:91;;;20065:33;20091:6;20065:21;;:25;;:33;;;;:::i;:::-;20041:21;:57;;;;20009:91;20231:16;:24;20248:6;20231:24;;;;;;;;;;;;;;;;;;;;;;;;;20227:104;;20262:19;;;;;;;;;;;:28;;;20291:6;20299:9;:17;20309:6;20299:17;;;;;;;;;;;;;;;;20262:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20258:71;;;;;;20227:104;20344:16;:27;20361:9;20344:27;;;;;;;;;;;;;;;;;;;;;;;;;20340:113;;20378:19;;;;;;;;;;;:28;;;20407:9;20418;:20;20428:9;20418:20;;;;;;;;;;;;;;;;20378:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20374:77;;;;;;20340:113;20467:19;;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20464:95;;;20509:19;;;;;;;;;;;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20505:53;;;;;;20464:95;20592:9;20575:43;;20584:6;20575:43;;;20603:14;20575:43;;;;;;:::i;:::-;;;;;;;;20635:4;20628:11;;;18603:2043;;;;;;:::o;257:96::-;315:7;345:1;341;:5;;;;:::i;:::-;334:12;;257:96;;;;:::o;36322:1955::-;36393:4;36412:10;:8;:10::i;:::-;36409:125;;;36474:4;36443:35;;:19;:27;36463:6;36443:27;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;36435:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;36409:125;36770:27;36800:65;36842:22;:20;:22::i;:::-;36800:37;36830:6;36800:25;:23;:25::i;:::-;:29;;:37;;;;:::i;:::-;:41;;:65;;;;:::i;:::-;36770:95;;36877:17;36897:4;;;;;;;;;;;36877:24;;37035:53;37057:6;37035:53;;;;;;;;;;;;;;;;;:9;:17;37045:6;37035:17;;;;;;;;;;;;;;;;:21;;:53;;;;;:::i;:::-;37015:9;:17;37025:6;37015:17;;;;;;;;;;;;;;;:73;;;;37121:32;37146:6;37121:9;:20;37131:9;37121:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;37098:9;:20;37108:9;37098:20;;;;;;;;;;;;;;;:55;;;;37581:19;37550:27;:25;:27::i;:::-;:50;37547:469;;37616:11;;;;;;;;;;;:32;;;37649:6;37657:19;37616:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37547:469;;;37708:36;37747:52;37771:27;:25;:27::i;:::-;37747:19;:23;;:52;;;;:::i;:::-;37708:91;;37813:11;;;;;;;;;;;:32;;;37846:6;37854:27;:25;:27::i;:::-;37813:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37897:12;37922:6;37914:20;;37942:28;37914:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37896:79;;;37997:7;37989:16;;;;;;37694:322;;37547:469;38098:16;:24;38115:6;38098:24;;;;;;;;;;;;;;;;;;;;;;;;;38094:104;;38129:19;;;;;;;;;;;:28;;;38158:6;38166:9;:17;38176:6;38166:17;;;;;;;;;;;;;;;;38129:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38125:71;;;;;;38094:104;38231:9;38214:35;;38223:6;38214:35;;;38242:6;38214:35;;;;;;:::i;:::-;;;;;;;;38266:4;38259:11;;;;36322:1955;;;;:::o;20653:327::-;20746:4;20782:53;20804:6;20782:53;;;;;;;;;;;;;;;;;:9;:17;20792:6;20782:17;;;;;;;;;;;;;;;;:21;;:53;;;;;:::i;:::-;20762:9;:17;20772:6;20762:17;;;;;;;;;;;;;;;:73;;;;20868:32;20893:6;20868:9;:20;20878:9;20868:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;20845:9;:20;20855:9;20845:20;;;;;;;;;;;;;;;:55;;;;20969:4;20962:11;;20653:327;;;;;:::o;20987:164::-;21083:12;;21073:6;:22;;:49;;;;21099:15;:23;21115:6;21099:23;;;;;;;;;;;;;;;;;;;;;;;;;21073:49;21065:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;20987:164;;:::o;24049:211::-;24098:4;24135;;;;;;;;;;;24121:18;;:10;:18;;;;:41;;;;;24152:10;:8;:10::i;:::-;24151:11;24121:41;:60;;;;;24175:6;;;;;;;;;;;24174:7;24121:60;:83;;;;;24193:11;;;;;;;;;;;24121:83;:132;;;;;24240:13;;24216:20;;:37;;24121:132;24114:139;;24049:211;:::o;24478:2224::-;15544:4;15535:6;;:13;;;;;;;;;;;;;;;;;;24526:27:::1;24556:60;24572:15;;24589:26;;24556:15;:60::i;:::-;:79;;24623:12;;24556:79;;;24619:1;24556:79;24526:109;;24645:23;24671:59;24728:1;24671:52;24714:8;;24671:38;24689:19;24671:13;;:17;;:38;;;;:::i;:::-;:42;;:52;;;;:::i;:::-;:56;;:59;;;;:::i;:::-;24645:85;;24740:20;24763:34;24781:15;24763:13;;:17;;:34;;;;:::i;:::-;24740:57;;24893:21;24931:1;24917:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24893:40;;24961:4;24943;24948:1;24943:7;;;;;;;;:::i;:::-;;;;;;;:23;;;;;;;;;::::0;::::1;24986:4;;;;;;;;;;;24976;24981:1;24976:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;::::0;::::1;25000:21;25024;25000:45;;25101:6;;;;;;;;;;;:57;;;25172:12;25198:1;25213:4;25239;25258:15;25101:182;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;25317:51;25346:21;;25317:24;25335:4;25317:9;:24::i;:::-;:28;;:51;;;;:::i;:::-;25294:20;:74;;;;25444:17;25464:40;25490:13;25464:21;:25;;:40;;;;:::i;:::-;25444:60;;25516:19;25538:40;25551:26;25575:1;25551:19;:23;;:26;;;;:::i;:::-;25538:8;;:12;;:40;;;;:::i;:::-;25516:62;;25698:26;25727:58;25783:1;25727:51;25766:11;25727:34;25741:19;25727:9;:13;;:34;;;;:::i;:::-;:38;;:51;;;;:::i;:::-;:55;;:58;;;;:::i;:::-;25698:87;;25795:26;25824:44;25856:11;25824:27;25838:12;;25824:9;:13;;:27;;;;:::i;:::-;:31;;:44;;;;:::i;:::-;25795:73;;25878:27;25908:42;25938:11;25908:25;25922:10;;25908:9;:13;;:25;;;;:::i;:::-;:29;;:42;;;;:::i;:::-;25878:72;;26095:55;26110:18;26130:19;26095:14;:55::i;:::-;26277:1;26259:15;:19;26256:440;;;26293:6;;;;;;;;;;;:22;;;26323:18;26368:4;26391:15;26424:1;26443::::0;26462:21:::1;;;;;;;;;;;26501:15;26293:237;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;26567:51;26596:21;;26567:24;26585:4;26567:9;:24::i;:::-;:28;;:51;;;;:::i;:::-;26544:20;:74;;;;26637:48;26649:18;26669:15;26637:48;;;;;;;:::i;:::-;;;;;;;;26256:440;24516:2186;;;;;;;;;;15562:5:::0;15553:6;;:14;;;;;;;;;;;;;;;;;;24478:2224::o;26708:226::-;26764:4;26801;;;;;;;;;;;26787:18;;:10;:18;;;;:41;;;;;26818:10;:8;:10::i;:::-;26817:11;26787:41;:60;;;;;26841:6;;;;;;;;;;;26840:7;26787:60;:83;;;;;26859:11;;;;;;;;;;;26787:83;:140;;;;;26907:20;;26882:21;;:45;;26787:140;26780:147;;26708:226;:::o;27035:576::-;15544:4;15535:6;;:13;;;;;;;;;;;;;;;;;;27176:21:::1;27214:1;27200:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27176:40;;27244:4;27226;27231:1;27226:7;;;;;;;;:::i;:::-;;;;;;;:23;;;;;;;;;::::0;::::1;27269:4;;;;;;;;;;;27259;27264:1;27259:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;::::0;::::1;27329:6;;;;;;;;;;;:57;;;27400:20;;27434:1;27449:4;27475;27494:15;27329:190;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;27554:50;27583:20;;27554:24;27572:4;27554:9;:24::i;:::-;:28;;:50;;;;:::i;:::-;27530:21;:74;;;;27080:531;15562:5:::0;15553:6;;:14;;;;;;;;;;;;;;;;;;27035:576::o;21249:186::-;21311:4;21348:5;21331:22;;:13;;;;;;;;;;;:22;;;21327:65;;;21376:5;21369:12;;;;21327:65;21409:11;:19;21421:6;21409:19;;;;;;;;;;;;;;;;;;;;;;;;;21408:20;21401:27;;21249:186;;;;:::o;23245:797::-;23330:7;23349:12;23376:4;;;;;;;;;;;23364:16;;:8;:16;;;23349:31;;23390:17;23410:52;23447:14;;23410:32;23421:20;23433:7;23421:11;:20::i;:::-;23410:6;:10;;:32;;;;:::i;:::-;:36;;:52;;;;:::i;:::-;23390:72;;23476:7;23472:387;;;23499:15;23517:40;23542:14;;23517:20;23528:8;;23517:6;:10;;:20;;;;:::i;:::-;:24;;:40;;;;:::i;:::-;23499:58;;23571:18;23592:22;23606:7;23592:9;:13;;:22;;;;:::i;:::-;23571:43;;23652:37;23678:10;23652:21;;:25;;:37;;;;:::i;:::-;23628:21;:61;;;;23726:33;23751:7;23726:20;;:24;;:33;;;;:::i;:::-;23703:20;:56;;;;23485:285;;23472:387;;;23813:35;23838:9;23813:20;;:24;;:35;;;;:::i;:::-;23790:20;:58;;;;23472:387;23897:39;23926:9;23897;:24;23915:4;23897:24;;;;;;;;;;;;;;;;:28;;:39;;;;:::i;:::-;23870:9;:24;23888:4;23870:24;;;;;;;;;;;;;;;:66;;;;23978:4;23953:42;;23962:6;23953:42;;;23985:9;23953:42;;;;;;:::i;:::-;;;;;;;;24014:21;24025:9;24014:6;:10;;:21;;;;:::i;:::-;24007:28;;;;23245:797;;;;;:::o;27617:914::-;27803:27;27843:18;;;;;;;;;;;27835:32;;27875:19;27835:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27802:97;;;27917:22;27909:31;;;;;;28043:23;28069:78;28123:14;;28069:36;28092:12;;28069:18;:22;;:36;;;;:::i;:::-;:40;;:78;;;;:::i;:::-;28043:104;;28157:23;28183:39;28206:15;28183:18;:22;;:39;;;;:::i;:::-;28157:65;;28235:29;28277:20;;;;;;;;;;;28269:34;;28311:15;28269:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28234:97;;;28349:24;28341:33;;;;;;28385:29;28427:20;;;;;;;;;;;28419:34;;28461:15;28419:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28384:97;;;28499:24;28491:33;;;;;;27707:824;;;;;27617:914;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:307::-;790:1;800:113;814:6;811:1;808:13;800:113;;;899:1;894:3;890:11;884:18;880:1;875:3;871:11;864:39;836:2;833:1;829:10;824:15;;800:113;;;931:6;928:1;925:13;922:101;;;1011:1;1002:6;997:3;993:16;986:27;922:101;771:258;722:307;;;:::o;1035:102::-;1076:6;1127:2;1123:7;1118:2;1111:5;1107:14;1103:28;1093:38;;1035:102;;;:::o;1143:364::-;1231:3;1259:39;1292:5;1259:39;:::i;:::-;1314:71;1378:6;1373:3;1314:71;:::i;:::-;1307:78;;1394:52;1439:6;1434:3;1427:4;1420:5;1416:16;1394:52;:::i;:::-;1471:29;1493:6;1471:29;:::i;:::-;1466:3;1462:39;1455:46;;1235:272;1143:364;;;;:::o;1513:313::-;1626:4;1664:2;1653:9;1649:18;1641:26;;1713:9;1707:4;1703:20;1699:1;1688:9;1684:17;1677:47;1741:78;1814:4;1805:6;1741:78;:::i;:::-;1733:86;;1513:313;;;;:::o;1913:117::-;2022:1;2019;2012:12;2159:126;2196:7;2236:42;2229:5;2225:54;2214:65;;2159:126;;;:::o;2291:96::-;2328:7;2357:24;2375:5;2357:24;:::i;:::-;2346:35;;2291:96;;;:::o;2393:122::-;2466:24;2484:5;2466:24;:::i;:::-;2459:5;2456:35;2446:63;;2505:1;2502;2495:12;2446:63;2393:122;:::o;2521:139::-;2567:5;2605:6;2592:20;2583:29;;2621:33;2648:5;2621:33;:::i;:::-;2521:139;;;;:::o;2666:122::-;2739:24;2757:5;2739:24;:::i;:::-;2732:5;2729:35;2719:63;;2778:1;2775;2768:12;2719:63;2666:122;:::o;2794:139::-;2840:5;2878:6;2865:20;2856:29;;2894:33;2921:5;2894:33;:::i;:::-;2794:139;;;;:::o;2939:474::-;3007:6;3015;3064:2;3052:9;3043:7;3039:23;3035:32;3032:119;;;3070:79;;:::i;:::-;3032:119;3190:1;3215:53;3260:7;3251:6;3240:9;3236:22;3215:53;:::i;:::-;3205:63;;3161:117;3317:2;3343:53;3388:7;3379:6;3368:9;3364:22;3343:53;:::i;:::-;3333:63;;3288:118;2939:474;;;;;:::o;3419:90::-;3453:7;3496:5;3489:13;3482:21;3471:32;;3419:90;;;:::o;3515:109::-;3596:21;3611:5;3596:21;:::i;:::-;3591:3;3584:34;3515:109;;:::o;3630:210::-;3717:4;3755:2;3744:9;3740:18;3732:26;;3768:65;3830:1;3819:9;3815:17;3806:6;3768:65;:::i;:::-;3630:210;;;;:::o;3846:329::-;3905:6;3954:2;3942:9;3933:7;3929:23;3925:32;3922:119;;;3960:79;;:::i;:::-;3922:119;4080:1;4105:53;4150:7;4141:6;4130:9;4126:22;4105:53;:::i;:::-;4095:63;;4051:117;3846:329;;;;:::o;4181:474::-;4249:6;4257;4306:2;4294:9;4285:7;4281:23;4277:32;4274:119;;;4312:79;;:::i;:::-;4274:119;4432:1;4457:53;4502:7;4493:6;4482:9;4478:22;4457:53;:::i;:::-;4447:63;;4403:117;4559:2;4585:53;4630:7;4621:6;4610:9;4606:22;4585:53;:::i;:::-;4575:63;;4530:118;4181:474;;;;;:::o;4661:329::-;4720:6;4769:2;4757:9;4748:7;4744:23;4740:32;4737:119;;;4775:79;;:::i;:::-;4737:119;4895:1;4920:53;4965:7;4956:6;4945:9;4941:22;4920:53;:::i;:::-;4910:63;;4866:117;4661:329;;;;:::o;4996:619::-;5073:6;5081;5089;5138:2;5126:9;5117:7;5113:23;5109:32;5106:119;;;5144:79;;:::i;:::-;5106:119;5264:1;5289:53;5334:7;5325:6;5314:9;5310:22;5289:53;:::i;:::-;5279:63;;5235:117;5391:2;5417:53;5462:7;5453:6;5442:9;5438:22;5417:53;:::i;:::-;5407:63;;5362:118;5519:2;5545:53;5590:7;5581:6;5570:9;5566:22;5545:53;:::i;:::-;5535:63;;5490:118;4996:619;;;;;:::o;5621:86::-;5656:7;5696:4;5689:5;5685:16;5674:27;;5621:86;;;:::o;5713:112::-;5796:22;5812:5;5796:22;:::i;:::-;5791:3;5784:35;5713:112;;:::o;5831:214::-;5920:4;5958:2;5947:9;5943:18;5935:26;;5971:67;6035:1;6024:9;6020:17;6011:6;5971:67;:::i;:::-;5831:214;;;;:::o;6051:765::-;6137:6;6145;6153;6161;6210:3;6198:9;6189:7;6185:23;6181:33;6178:120;;;6217:79;;:::i;:::-;6178:120;6337:1;6362:53;6407:7;6398:6;6387:9;6383:22;6362:53;:::i;:::-;6352:63;;6308:117;6464:2;6490:53;6535:7;6526:6;6515:9;6511:22;6490:53;:::i;:::-;6480:63;;6435:118;6592:2;6618:53;6663:7;6654:6;6643:9;6639:22;6618:53;:::i;:::-;6608:63;;6563:118;6720:2;6746:53;6791:7;6782:6;6771:9;6767:22;6746:53;:::i;:::-;6736:63;;6691:118;6051:765;;;;;;;:::o;6822:116::-;6892:21;6907:5;6892:21;:::i;:::-;6885:5;6882:32;6872:60;;6928:1;6925;6918:12;6872:60;6822:116;:::o;6944:133::-;6987:5;7025:6;7012:20;7003:29;;7041:30;7065:5;7041:30;:::i;:::-;6944:133;;;;:::o;7083:468::-;7148:6;7156;7205:2;7193:9;7184:7;7180:23;7176:32;7173:119;;;7211:79;;:::i;:::-;7173:119;7331:1;7356:53;7401:7;7392:6;7381:9;7377:22;7356:53;:::i;:::-;7346:63;;7302:117;7458:2;7484:50;7526:7;7517:6;7506:9;7502:22;7484:50;:::i;:::-;7474:60;;7429:115;7083:468;;;;;:::o;7557:118::-;7644:24;7662:5;7644:24;:::i;:::-;7639:3;7632:37;7557:118;;:::o;7681:222::-;7774:4;7812:2;7801:9;7797:18;7789:26;;7825:71;7893:1;7882:9;7878:17;7869:6;7825:71;:::i;:::-;7681:222;;;;:::o;7909:474::-;7977:6;7985;8034:2;8022:9;8013:7;8009:23;8005:32;8002:119;;;8040:79;;:::i;:::-;8002:119;8160:1;8185:53;8230:7;8221:6;8210:9;8206:22;8185:53;:::i;:::-;8175:63;;8131:117;8287:2;8313:53;8358:7;8349:6;8338:9;8334:22;8313:53;:::i;:::-;8303:63;;8258:118;7909:474;;;;;:::o;8389:323::-;8445:6;8494:2;8482:9;8473:7;8469:23;8465:32;8462:119;;;8500:79;;:::i;:::-;8462:119;8620:1;8645:50;8687:7;8678:6;8667:9;8663:22;8645:50;:::i;:::-;8635:60;;8591:114;8389:323;;;;:::o;8718:613::-;8792:6;8800;8808;8857:2;8845:9;8836:7;8832:23;8828:32;8825:119;;;8863:79;;:::i;:::-;8825:119;8983:1;9008:50;9050:7;9041:6;9030:9;9026:22;9008:50;:::i;:::-;8998:60;;8954:114;9107:2;9133:53;9178:7;9169:6;9158:9;9154:22;9133:53;:::i;:::-;9123:63;;9078:118;9235:2;9261:53;9306:7;9297:6;9286:9;9282:22;9261:53;:::i;:::-;9251:63;;9206:118;8718:613;;;;;:::o;9337:104::-;9382:7;9411:24;9429:5;9411:24;:::i;:::-;9400:35;;9337:104;;;:::o;9447:138::-;9528:32;9554:5;9528:32;:::i;:::-;9521:5;9518:43;9508:71;;9575:1;9572;9565:12;9508:71;9447:138;:::o;9591:155::-;9645:5;9683:6;9670:20;9661:29;;9699:41;9734:5;9699:41;:::i;:::-;9591:155;;;;:::o;9752:345::-;9819:6;9868:2;9856:9;9847:7;9843:23;9839:32;9836:119;;;9874:79;;:::i;:::-;9836:119;9994:1;10019:61;10072:7;10063:6;10052:9;10048:22;10019:61;:::i;:::-;10009:71;;9965:125;9752:345;;;;:::o;10103:60::-;10131:3;10152:5;10145:12;;10103:60;;;:::o;10169:142::-;10219:9;10252:53;10270:34;10279:24;10297:5;10279:24;:::i;:::-;10270:34;:::i;:::-;10252:53;:::i;:::-;10239:66;;10169:142;;;:::o;10317:126::-;10367:9;10400:37;10431:5;10400:37;:::i;:::-;10387:50;;10317:126;;;:::o;10449:144::-;10517:9;10550:37;10581:5;10550:37;:::i;:::-;10537:50;;10449:144;;;:::o;10599:167::-;10704:55;10753:5;10704:55;:::i;:::-;10699:3;10692:68;10599:167;;:::o;10772:258::-;10883:4;10921:2;10910:9;10906:18;10898:26;;10934:89;11020:1;11009:9;11005:17;10996:6;10934:89;:::i;:::-;10772:258;;;;:::o;11036:156::-;11176:8;11172:1;11164:6;11160:14;11153:32;11036:156;:::o;11198:365::-;11340:3;11361:66;11425:1;11420:3;11361:66;:::i;:::-;11354:73;;11436:93;11525:3;11436:93;:::i;:::-;11554:2;11549:3;11545:12;11538:19;;11198:365;;;:::o;11569:419::-;11735:4;11773:2;11762:9;11758:18;11750:26;;11822:9;11816:4;11812:20;11808:1;11797:9;11793:17;11786:47;11850:131;11976:4;11850:131;:::i;:::-;11842:139;;11569:419;;;:::o;11994:180::-;12042:77;12039:1;12032:88;12139:4;12136:1;12129:15;12163:4;12160:1;12153:15;12180:305;12220:3;12239:20;12257:1;12239:20;:::i;:::-;12234:25;;12273:20;12291:1;12273:20;:::i;:::-;12268:25;;12427:1;12359:66;12355:74;12352:1;12349:81;12346:107;;;12433:18;;:::i;:::-;12346:107;12477:1;12474;12470:9;12463:16;;12180:305;;;;:::o;12491:179::-;12631:31;12627:1;12619:6;12615:14;12608:55;12491:179;:::o;12676:366::-;12818:3;12839:67;12903:2;12898:3;12839:67;:::i;:::-;12832:74;;12915:93;13004:3;12915:93;:::i;:::-;13033:2;13028:3;13024:12;13017:19;;12676:366;;;:::o;13048:419::-;13214:4;13252:2;13241:9;13237:18;13229:26;;13301:9;13295:4;13291:20;13287:1;13276:9;13272:17;13265:47;13329:131;13455:4;13329:131;:::i;:::-;13321:139;;13048:419;;;:::o;13473:332::-;13594:4;13632:2;13621:9;13617:18;13609:26;;13645:71;13713:1;13702:9;13698:17;13689:6;13645:71;:::i;:::-;13726:72;13794:2;13783:9;13779:18;13770:6;13726:72;:::i;:::-;13473:332;;;;;:::o;13811:161::-;13951:13;13947:1;13939:6;13935:14;13928:37;13811:161;:::o;13978:366::-;14120:3;14141:67;14205:2;14200:3;14141:67;:::i;:::-;14134:74;;14217:93;14306:3;14217:93;:::i;:::-;14335:2;14330:3;14326:12;14319:19;;13978:366;;;:::o;14350:419::-;14516:4;14554:2;14543:9;14539:18;14531:26;;14603:9;14597:4;14593:20;14589:1;14578:9;14574:17;14567:47;14631:131;14757:4;14631:131;:::i;:::-;14623:139;;14350:419;;;:::o;14775:164::-;14915:16;14911:1;14903:6;14899:14;14892:40;14775:164;:::o;14945:366::-;15087:3;15108:67;15172:2;15167:3;15108:67;:::i;:::-;15101:74;;15184:93;15273:3;15184:93;:::i;:::-;15302:2;15297:3;15293:12;15286:19;;14945:366;;;:::o;15317:419::-;15483:4;15521:2;15510:9;15506:18;15498:26;;15570:9;15564:4;15560:20;15556:1;15545:9;15541:17;15534:47;15598:131;15724:4;15598:131;:::i;:::-;15590:139;;15317:419;;;:::o;15742:163::-;15882:15;15878:1;15870:6;15866:14;15859:39;15742:163;:::o;15911:366::-;16053:3;16074:67;16138:2;16133:3;16074:67;:::i;:::-;16067:74;;16150:93;16239:3;16150:93;:::i;:::-;16268:2;16263:3;16259:12;16252:19;;15911:366;;;:::o;16283:419::-;16449:4;16487:2;16476:9;16472:18;16464:26;;16536:9;16530:4;16526:20;16522:1;16511:9;16507:17;16500:47;16564:131;16690:4;16564:131;:::i;:::-;16556:139;;16283:419;;;:::o;16708:137::-;16762:5;16793:6;16787:13;16778:22;;16809:30;16833:5;16809:30;:::i;:::-;16708:137;;;;:::o;16851:345::-;16918:6;16967:2;16955:9;16946:7;16942:23;16938:32;16935:119;;;16973:79;;:::i;:::-;16935:119;17093:1;17118:61;17171:7;17162:6;17151:9;17147:22;17118:61;:::i;:::-;17108:71;;17064:125;16851:345;;;;:::o;17202:293::-;17342:34;17338:1;17330:6;17326:14;17319:58;17411:34;17406:2;17398:6;17394:15;17387:59;17480:7;17475:2;17467:6;17463:15;17456:32;17202:293;:::o;17501:366::-;17643:3;17664:67;17728:2;17723:3;17664:67;:::i;:::-;17657:74;;17740:93;17829:3;17740:93;:::i;:::-;17858:2;17853:3;17849:12;17842:19;;17501:366;;;:::o;17873:419::-;18039:4;18077:2;18066:9;18062:18;18054:26;;18126:9;18120:4;18116:20;18112:1;18101:9;18097:17;18090:47;18154:131;18280:4;18154:131;:::i;:::-;18146:139;;17873:419;;;:::o;18298:180::-;18346:77;18343:1;18336:88;18443:4;18440:1;18433:15;18467:4;18464:1;18457:15;18484:185;18524:1;18541:20;18559:1;18541:20;:::i;:::-;18536:25;;18575:20;18593:1;18575:20;:::i;:::-;18570:25;;18614:1;18604:35;;18619:18;;:::i;:::-;18604:35;18661:1;18658;18654:9;18649:14;;18484:185;;;;:::o;18675:143::-;18732:5;18763:6;18757:13;18748:22;;18779:33;18806:5;18779:33;:::i;:::-;18675:143;;;;:::o;18824:351::-;18894:6;18943:2;18931:9;18922:7;18918:23;18914:32;18911:119;;;18949:79;;:::i;:::-;18911:119;19069:1;19094:64;19150:7;19141:6;19130:9;19126:22;19094:64;:::i;:::-;19084:74;;19040:128;18824:351;;;;:::o;19181:226::-;19321:34;19317:1;19309:6;19305:14;19298:58;19390:9;19385:2;19377:6;19373:15;19366:34;19181:226;:::o;19413:366::-;19555:3;19576:67;19640:2;19635:3;19576:67;:::i;:::-;19569:74;;19652:93;19741:3;19652:93;:::i;:::-;19770:2;19765:3;19761:12;19754:19;;19413:366;;;:::o;19785:419::-;19951:4;19989:2;19978:9;19974:18;19966:26;;20038:9;20032:4;20028:20;20024:1;20013:9;20009:17;20002:47;20066:131;20192:4;20066:131;:::i;:::-;20058:139;;19785:419;;;:::o;20210:172::-;20350:24;20346:1;20338:6;20334:14;20327:48;20210:172;:::o;20388:366::-;20530:3;20551:67;20615:2;20610:3;20551:67;:::i;:::-;20544:74;;20627:93;20716:3;20627:93;:::i;:::-;20745:2;20740:3;20736:12;20729:19;;20388:366;;;:::o;20760:419::-;20926:4;20964:2;20953:9;20949:18;20941:26;;21013:9;21007:4;21003:20;20999:1;20988:9;20984:17;20977:47;21041:131;21167:4;21041:131;:::i;:::-;21033:139;;20760:419;;;:::o;21185:114::-;21222:7;21262:30;21255:5;21251:42;21240:53;;21185:114;;;:::o;21305:122::-;21378:24;21396:5;21378:24;:::i;:::-;21371:5;21368:35;21358:63;;21417:1;21414;21407:12;21358:63;21305:122;:::o;21433:143::-;21490:5;21521:6;21515:13;21506:22;;21537:33;21564:5;21537:33;:::i;:::-;21433:143;;;;:::o;21582:93::-;21618:7;21658:10;21651:5;21647:22;21636:33;;21582:93;;;:::o;21681:120::-;21753:23;21770:5;21753:23;:::i;:::-;21746:5;21743:34;21733:62;;21791:1;21788;21781:12;21733:62;21681:120;:::o;21807:141::-;21863:5;21894:6;21888:13;21879:22;;21910:32;21936:5;21910:32;:::i;:::-;21807:141;;;;:::o;21954:661::-;22041:6;22049;22057;22106:2;22094:9;22085:7;22081:23;22077:32;22074:119;;;22112:79;;:::i;:::-;22074:119;22232:1;22257:64;22313:7;22304:6;22293:9;22289:22;22257:64;:::i;:::-;22247:74;;22203:128;22370:2;22396:64;22452:7;22443:6;22432:9;22428:22;22396:64;:::i;:::-;22386:74;;22341:129;22509:2;22535:63;22590:7;22581:6;22570:9;22566:22;22535:63;:::i;:::-;22525:73;;22480:128;21954:661;;;;;:::o;22621:178::-;22761:30;22757:1;22749:6;22745:14;22738:54;22621:178;:::o;22805:366::-;22947:3;22968:67;23032:2;23027:3;22968:67;:::i;:::-;22961:74;;23044:93;23133:3;23044:93;:::i;:::-;23162:2;23157:3;23153:12;23146:19;;22805:366;;;:::o;23177:419::-;23343:4;23381:2;23370:9;23366:18;23358:26;;23430:9;23424:4;23420:20;23416:1;23405:9;23401:17;23394:47;23458:131;23584:4;23458:131;:::i;:::-;23450:139;;23177:419;;;:::o;23602:134::-;23660:9;23693:37;23724:5;23693:37;:::i;:::-;23680:50;;23602:134;;;:::o;23742:147::-;23837:45;23876:5;23837:45;:::i;:::-;23832:3;23825:58;23742:147;;:::o;23895:238::-;23996:4;24034:2;24023:9;24019:18;24011:26;;24047:79;24123:1;24112:9;24108:17;24099:6;24047:79;:::i;:::-;23895:238;;;;:::o;24139:85::-;24184:7;24213:5;24202:16;;24139:85;;;:::o;24230:158::-;24288:9;24321:61;24339:42;24348:32;24374:5;24348:32;:::i;:::-;24339:42;:::i;:::-;24321:61;:::i;:::-;24308:74;;24230:158;;;:::o;24394:147::-;24489:45;24528:5;24489:45;:::i;:::-;24484:3;24477:58;24394:147;;:::o;24547:348::-;24676:4;24714:2;24703:9;24699:18;24691:26;;24727:71;24795:1;24784:9;24780:17;24771:6;24727:71;:::i;:::-;24808:80;24884:2;24873:9;24869:18;24860:6;24808:80;:::i;:::-;24547:348;;;;;:::o;24901:177::-;25041:29;25037:1;25029:6;25025:14;25018:53;24901:177;:::o;25084:366::-;25226:3;25247:67;25311:2;25306:3;25247:67;:::i;:::-;25240:74;;25323:93;25412:3;25323:93;:::i;:::-;25441:2;25436:3;25432:12;25425:19;;25084:366;;;:::o;25456:419::-;25622:4;25660:2;25649:9;25645:18;25637:26;;25709:9;25703:4;25699:20;25695:1;25684:9;25680:17;25673:47;25737:131;25863:4;25737:131;:::i;:::-;25729:139;;25456:419;;;:::o;25881:147::-;25982:11;26019:3;26004:18;;25881:147;;;;:::o;26034:114::-;;:::o;26154:398::-;26313:3;26334:83;26415:1;26410:3;26334:83;:::i;:::-;26327:90;;26426:93;26515:3;26426:93;:::i;:::-;26544:1;26539:3;26535:11;26528:18;;26154:398;;;:::o;26558:379::-;26742:3;26764:147;26907:3;26764:147;:::i;:::-;26757:154;;26928:3;26921:10;;26558:379;;;:::o;26943:348::-;26983:7;27006:20;27024:1;27006:20;:::i;:::-;27001:25;;27040:20;27058:1;27040:20;:::i;:::-;27035:25;;27228:1;27160:66;27156:74;27153:1;27150:81;27145:1;27138:9;27131:17;27127:105;27124:131;;;27235:18;;:::i;:::-;27124:131;27283:1;27280;27276:9;27265:20;;26943:348;;;;:::o;27297:232::-;27437:34;27433:1;27425:6;27421:14;27414:58;27506:15;27501:2;27493:6;27489:15;27482:40;27297:232;:::o;27535:366::-;27677:3;27698:67;27762:2;27757:3;27698:67;:::i;:::-;27691:74;;27774:93;27863:3;27774:93;:::i;:::-;27892:2;27887:3;27883:12;27876:19;;27535:366;;;:::o;27907:419::-;28073:4;28111:2;28100:9;28096:18;28088:26;;28160:9;28154:4;28150:20;28146:1;28135:9;28131:17;28124:47;28188:131;28314:4;28188:131;:::i;:::-;28180:139;;27907:419;;;:::o;28332:191::-;28372:4;28392:20;28410:1;28392:20;:::i;:::-;28387:25;;28426:20;28444:1;28426:20;:::i;:::-;28421:25;;28465:1;28462;28459:8;28456:34;;;28470:18;;:::i;:::-;28456:34;28515:1;28512;28508:9;28500:17;;28332:191;;;;:::o;28529:228::-;28669:34;28665:1;28657:6;28653:14;28646:58;28738:11;28733:2;28725:6;28721:15;28714:36;28529:228;:::o;28763:366::-;28905:3;28926:67;28990:2;28985:3;28926:67;:::i;:::-;28919:74;;29002:93;29091:3;29002:93;:::i;:::-;29120:2;29115:3;29111:12;29104:19;;28763:366;;;:::o;29135:419::-;29301:4;29339:2;29328:9;29324:18;29316:26;;29388:9;29382:4;29378:20;29374:1;29363:9;29359:17;29352:47;29416:131;29542:4;29416:131;:::i;:::-;29408:139;;29135:419;;;:::o;29560:167::-;29700:19;29696:1;29688:6;29684:14;29677:43;29560:167;:::o;29733:366::-;29875:3;29896:67;29960:2;29955:3;29896:67;:::i;:::-;29889:74;;29972:93;30061:3;29972:93;:::i;:::-;30090:2;30085:3;30081:12;30074:19;;29733:366;;;:::o;30105:419::-;30271:4;30309:2;30298:9;30294:18;30286:26;;30358:9;30352:4;30348:20;30344:1;30333:9;30329:17;30322:47;30386:131;30512:4;30386:131;:::i;:::-;30378:139;;30105:419;;;:::o;30530:180::-;30578:77;30575:1;30568:88;30675:4;30672:1;30665:15;30699:4;30696:1;30689:15;30716:180;30764:77;30761:1;30754:88;30861:4;30858:1;30851:15;30885:4;30882:1;30875:15;30902:114;30969:6;31003:5;30997:12;30987:22;;30902:114;;;:::o;31022:184::-;31121:11;31155:6;31150:3;31143:19;31195:4;31190:3;31186:14;31171:29;;31022:184;;;;:::o;31212:132::-;31279:4;31302:3;31294:11;;31332:4;31327:3;31323:14;31315:22;;31212:132;;;:::o;31350:108::-;31427:24;31445:5;31427:24;:::i;:::-;31422:3;31415:37;31350:108;;:::o;31464:179::-;31533:10;31554:46;31596:3;31588:6;31554:46;:::i;:::-;31632:4;31627:3;31623:14;31609:28;;31464:179;;;;:::o;31649:113::-;31719:4;31751;31746:3;31742:14;31734:22;;31649:113;;;:::o;31798:732::-;31917:3;31946:54;31994:5;31946:54;:::i;:::-;32016:86;32095:6;32090:3;32016:86;:::i;:::-;32009:93;;32126:56;32176:5;32126:56;:::i;:::-;32205:7;32236:1;32221:284;32246:6;32243:1;32240:13;32221:284;;;32322:6;32316:13;32349:63;32408:3;32393:13;32349:63;:::i;:::-;32342:70;;32435:60;32488:6;32435:60;:::i;:::-;32425:70;;32281:224;32268:1;32265;32261:9;32256:14;;32221:284;;;32225:14;32521:3;32514:10;;31922:608;;;31798:732;;;;:::o;32536:831::-;32799:4;32837:3;32826:9;32822:19;32814:27;;32851:71;32919:1;32908:9;32904:17;32895:6;32851:71;:::i;:::-;32932:80;33008:2;32997:9;32993:18;32984:6;32932:80;:::i;:::-;33059:9;33053:4;33049:20;33044:2;33033:9;33029:18;33022:48;33087:108;33190:4;33181:6;33087:108;:::i;:::-;33079:116;;33205:72;33273:2;33262:9;33258:18;33249:6;33205:72;:::i;:::-;33287:73;33355:3;33344:9;33340:19;33331:6;33287:73;:::i;:::-;32536:831;;;;;;;;:::o;33373:807::-;33622:4;33660:3;33649:9;33645:19;33637:27;;33674:71;33742:1;33731:9;33727:17;33718:6;33674:71;:::i;:::-;33755:72;33823:2;33812:9;33808:18;33799:6;33755:72;:::i;:::-;33837:80;33913:2;33902:9;33898:18;33889:6;33837:80;:::i;:::-;33927;34003:2;33992:9;33988:18;33979:6;33927:80;:::i;:::-;34017:73;34085:3;34074:9;34070:19;34061:6;34017:73;:::i;:::-;34100;34168:3;34157:9;34153:19;34144:6;34100:73;:::i;:::-;33373:807;;;;;;;;;:::o;34186:143::-;34243:5;34274:6;34268:13;34259:22;;34290:33;34317:5;34290:33;:::i;:::-;34186:143;;;;:::o;34335:663::-;34423:6;34431;34439;34488:2;34476:9;34467:7;34463:23;34459:32;34456:119;;;34494:79;;:::i;:::-;34456:119;34614:1;34639:64;34695:7;34686:6;34675:9;34671:22;34639:64;:::i;:::-;34629:74;;34585:128;34752:2;34778:64;34834:7;34825:6;34814:9;34810:22;34778:64;:::i;:::-;34768:74;;34723:129;34891:2;34917:64;34973:7;34964:6;34953:9;34949:22;34917:64;:::i;:::-;34907:74;;34862:129;34335:663;;;;;:::o;35004:332::-;35125:4;35163:2;35152:9;35148:18;35140:26;;35176:71;35244:1;35233:9;35229:17;35220:6;35176:71;:::i;:::-;35257:72;35325:2;35314:9;35310:18;35301:6;35257:72;:::i;:::-;35004:332;;;;;:::o"
            },
            "methodIdentifiers": {
              "MASK()": "e91f214e",
              "WBNB()": "8dd95002",
              "_maxTxAmount()": "7d1db4a5",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveMax(address)": "571ac8b0",
              "assetPoolLockTime()": "748a9dc2",
              "assetPoolLockTimestamp()": "367ff4a7",
              "authorize(address)": "b6a5d7de",
              "autoLiquidityReceiver()": "ca33e64c",
              "balanceOf(address)": "70a08231",
              "baseTaxesAccumulated()": "3ff942ce",
              "burnForBNB(uint256)": "51d016f5",
              "decimals()": "313ce567",
              "dividendDistributorAddress()": "a26bd13c",
              "excludeFromPause(address)": "885bd9ee",
              "getAmountBNBInAssetPool()": "75ead12b",
              "getAmountBNBInRewardsPool()": "a69c17e0",
              "getCirculatingSupply()": "2b112e49",
              "getCurrentGapRatio(uint256)": "c8e02934",
              "getDividendTokenAddress()": "9e061b48",
              "getOwner()": "893d20e8",
              "getSellMultipliedFee()": "2138ce01",
              "getTotalFee(bool)": "f1f3bca3",
              "includeInPause(address)": "e2482606",
              "isAuthorized(address)": "fe9fbb80",
              "isOverLiquified(uint256,uint256)": "1161ae39",
              "isOwner(address)": "2f54bf6e",
              "isPaused()": "b187bd26",
              "lockAssetRewardPools(uint256)": "af7a2458",
              "marketingFeeReceiver()": "e96fada2",
              "maxSellFee()": "efe25ad2",
              "maxSellMultiplier()": "bbea13d4",
              "moveAssetPool(address)": "fb4193be",
              "moveRewardPool(address)": "09cfc486",
              "name()": "06fdde03",
              "pair()": "a8aa1b31",
              "pauseContract(uint256)": "c2852f38",
              "pauseTime()": "015cb3ff",
              "pauseTimestamp()": "ad84f341",
              "payoutFractionOfRewardsPool(uint256,uint256)": "d717c918",
              "rewardsPoolAddress()": "cce85055",
              "router()": "f887ea40",
              "sellingSwapThreshold()": "e2163851",
              "sellingTaxAccumulated()": "94da3e86",
              "setDistributionCriteria(uint256)": "98e5bfee",
              "setDividendToken(address)": "20ffe2fd",
              "setFeeActive(bool)": "b7bfff65",
              "setFeeReceivers(address,address)": "a4b45c00",
              "setFeesWithDenominator10000(uint256,uint256,uint256,uint256)": "563bf54d",
              "setIsDividendExempt(address,bool)": "f708a64f",
              "setIsFeeExempt(address,bool)": "658d4b7f",
              "setIsTxLimitExempt(address,bool)": "f84ba65d",
              "setMaxSellFeeDenominator10000(uint256)": "19fbe385",
              "setMaxSellMultiplierDenominator10000(uint256)": "95dab460",
              "setSwapBackSettings(bool,uint256,uint256)": "d0889358",
              "setTargetLiquidity(uint256,uint256)": "201e7991",
              "setTxLimit(uint256)": "5c85974f",
              "swapEnabled()": "6ddd1713",
              "swapThreshold()": "0445b667",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "unauthorize(address)": "f0b37c04"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dexRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingFeeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBNB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBOG\",\"type\":\"uint256\"}],\"name\":\"AutoLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MASK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"approveMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetPoolLockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetPoolLockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoLiquidityReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTaxesAccumulated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnForBNB\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dividendDistributorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmountBNBInAssetPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmountBNBInRewardsPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"getCurrentGapRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDividendTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellMultipliedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"}],\"name\":\"getTotalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracy\",\"type\":\"uint256\"}],\"name\":\"isOverLiquified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfDays\",\"type\":\"uint256\"}],\"name\":\"lockAssetRewardPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSellMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"moveAssetPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"moveRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfDays\",\"type\":\"uint256\"}],\"name\":\"pauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"payoutFractionOfRewardsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingTaxAccumulated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minDistribution\",\"type\":\"uint256\"}],\"name\":\"setDistributionCriteria\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dividendTokenAddress\",\"type\":\"address\"}],\"name\":\"setDividendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"setTakeFeeActive\",\"type\":\"bool\"}],\"name\":\"setFeeActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_autoLiquidityReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingFeeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceivers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_backingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"}],\"name\":\"setFeesWithDenominator10000\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setIsDividendExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setIsFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setIsTxLimitExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxSellFee\",\"type\":\"uint256\"}],\"name\":\"setMaxSellFeeDenominator10000\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxSellMultiplier\",\"type\":\"uint256\"}],\"name\":\"setMaxSellMultiplierDenominator10000\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellingAmount\",\"type\":\"uint256\"}],\"name\":\"setSwapBackSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"name\":\"setTargetLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTxLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"this token is backed by BNB, which can be sent to the contract by anyone and can be redeemed by burning the token.  There are two BNB pools - the asset pool which is simply the amount of BNB the contract holds,  and the reward pool, which is the amount of BNB collected through taxes and is stored in a separate contract (RewardsPool). When burning the token, the amount of BNB given is calculated by taking (token amount)/(circulating supply) and giving that fraction of the asset pool BNB. However if there is BNB in the rewards pool, that is given first before dipping into the asset pool. This raises the floor price of the token when burning it as less BNB leaves the asset pool. The rewards pool is separated because the owner of the token can also choose to distribute a fraction of the rewards pool at specific points in time to reward holders.\",\"kind\":\"dev\",\"methods\":{\"burnForBNB(uint256)\":{\"details\":\"allow holders to burn their token in exchange for BNB stored in the asset and rewards pool\"},\"excludeFromPause(address)\":{\"details\":\"exclude specific wallets from the pause\"},\"getAmountBNBInAssetPool()\":{\"details\":\"get amount of BNB stored in the asset pool (this contract)\"},\"getAmountBNBInRewardsPool()\":{\"details\":\"get amount of BNB stored in the rewards pool (RewardsPool contract)\"},\"getCirculatingSupply()\":{\"details\":\"get the token supply not stored in the burn wallets\"},\"getCurrentGapRatio(uint256)\":{\"details\":\"check ratio of LP price and the floor price determined by the BNB held in asset pool\"},\"getSellMultipliedFee()\":{\"details\":\"multiply fee by selling multiplier if person is selling the tokensell multiplier is set depending on the current gap ratio proportionally\"},\"getTotalFee(bool)\":{\"details\":\"calculae the total fee to be taken on the transaction\"},\"includeInPause(address)\":{\"details\":\"include and address in the pause\"},\"isOverLiquified(uint256,uint256)\":{\"details\":\"check whether too much of the token is in the liquidity pool\"},\"moveAssetPool(address)\":{\"details\":\"necessary for contract upgrades\"},\"moveRewardPool(address)\":{\"details\":\"necessary for contract upgrades\"},\"pauseContract(uint256)\":{\"details\":\"necessary for contract upgrades. Can do at most every 10 days\"},\"payoutFractionOfRewardsPool(uint256,uint256)\":{\"details\":\"pay out a fraction of the BNB stored in the reward pool contract (RewardsPool)\"},\"setDividendToken(address)\":{\"details\":\"change the token the dividend distributor distributes. This can only be done before the dividend distributor starts its first distribution\"},\"setFeeActive(bool)\":{\"details\":\"enable or disable the fee\"},\"setFeeReceivers(address,address)\":{\"details\":\"set the addresses that benefit from the marketing fee and those that receive the liquidity\"},\"setFeesWithDenominator10000(uint256,uint256,uint256,uint256)\":{\"details\":\"set the fees with a denominator of 10000\"},\"setIsDividendExempt(address,bool)\":{\"details\":\"set whether an address is exempt from the reward\"},\"setIsFeeExempt(address,bool)\":{\"details\":\"set whether an address is exempt from the fee\"},\"setIsTxLimitExempt(address,bool)\":{\"details\":\"set whether an address is exempt from the maximum transaction limit\"},\"setMaxSellFeeDenominator10000(uint256)\":{\"details\":\"set the maximum sell fee that can be applied with a denominator of 10,000\"},\"setMaxSellMultiplierDenominator10000(uint256)\":{\"details\":\"set the maximum sell multiplier that can be applied with a denominator of 10,000\"},\"setSwapBackSettings(bool,uint256,uint256)\":{\"details\":\"set whether the contract can swap back its accumulated token into BNB and set the threshold for this\"},\"setTargetLiquidity(uint256,uint256)\":{\"details\":\"set the maximum amount of liquidity up to which taxes keep being sent to the pool\"},\"setTxLimit(uint256)\":{\"details\":\"set the transaction limit\"}},\"stateVariables\":{\"backingFee\":{\"details\":\"backingFee determines tax to send to the asset pool, which backs the token\"},\"feeDenominator\":{\"details\":\"fee denominator allows taxes to be decimal number percentages\"},\"liquidityFee\":{\"details\":\"liquidityFee determines tax to send to the liquidity pool\"},\"marketingFee\":{\"details\":\"marketingFee determines tax to send to the marketing wallet\"},\"rewardsFee\":{\"details\":\"rewardsFee determines tax to send to the rewards pool\"},\"swapEnabled\":{\"details\":\"before processing taxes in BNB, the taxed token is accumulated in the contract to save on gas feesthe swap to BNB will only occur once the swapThreshold is reached\"},\"takeFeeActive\":{\"details\":\"takeFeeActive allows to temporarily pause any taxes\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorize(address)\":{\"notice\":\"Authorize address. Owner only\"},\"isAuthorized(address)\":{\"notice\":\"Return address' authorization status\"},\"isOwner(address)\":{\"notice\":\"Check if address is owner\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership to new address. Caller must be owner. Leaves old owner authorized\"},\"unauthorize(address)\":{\"notice\":\"Remove address' authorization. Owner only\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test.sol\":\"TokifyRisingFloor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test.sol\":{\"keccak256\":\"0xa980091e5cdc24455aa4da7beabbc2b55af6cc082ee1900d041b706d004ab9a6\",\"license\":\"No License\",\"urls\":[\"bzz-raw://f22a5cebec80828d1e9da3f442396e5960c696044151eb823539172e26cd79e1\",\"dweb:/ipfs/QmZoGC6vwz5sw3szEaZAk5tS9aYSYNcuoGpH9U9FB5bJEM\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/test.sol": {
        "ast": {
          "absolutePath": "contracts/test.sol",
          "exportedSymbols": {
            "Auth": [
              302
            ],
            "DividendDistributor": [
              1064
            ],
            "IBEP20": [
              170
            ],
            "IDEXFactory": [
              312
            ],
            "IDEXPair": [
              327
            ],
            "IDEXRouter": [
              385
            ],
            "IDividendDistributor": [
              411
            ],
            "IRewardsPool": [
              1072
            ],
            "RewardsPool": [
              1149
            ],
            "SafeMath": [
              83
            ],
            "TokifyRisingFloor": [
              3373
            ]
          },
          "id": 3374,
          "license": "No License",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "101:27:0",
                "text": " SAFEMATH LIBRARY"
              },
              "fullyImplemented": true,
              "id": 83,
              "linearizedBaseContracts": [
                83
              ],
              "name": "SafeMath",
              "nameLocation": "137:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 15,
                    "nodeType": "Block",
                    "src": "221:29:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "238:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 12,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "242:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "238:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 10,
                        "id": 14,
                        "nodeType": "Return",
                        "src": "231:12:0"
                      }
                    ]
                  },
                  "id": 16,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "163:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "175:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "167:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "167:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "186:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "178:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "178:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "166:22:0"
                  },
                  "returnParameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "212:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "212:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "211:9:0"
                  },
                  "scope": 83,
                  "src": "154:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 29,
                    "nodeType": "Block",
                    "src": "324:29:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "341:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 26,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "345:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "341:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 24,
                        "id": 28,
                        "nodeType": "Return",
                        "src": "334:12:0"
                      }
                    ]
                  },
                  "id": 30,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "266:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "278:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "270:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "270:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "289:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "281:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "281:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "269:22:0"
                  },
                  "returnParameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "315:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "315:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "314:9:0"
                  },
                  "scope": 83,
                  "src": "257:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "427:29:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 39,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "444:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 40,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "448:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "444:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 38,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "437:12:0"
                      }
                    ]
                  },
                  "id": 44,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "369:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "381:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "373:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "373:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "392:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "384:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "384:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "372:22:0"
                  },
                  "returnParameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "418:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "418:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "417:9:0"
                  },
                  "scope": 83,
                  "src": "360:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "530:29:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 53,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "547:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 54,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "551:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "547:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 52,
                        "id": 56,
                        "nodeType": "Return",
                        "src": "540:12:0"
                      }
                    ]
                  },
                  "id": 58,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "472:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 49,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "484:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "476:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "476:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 48,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "495:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "487:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "487:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "475:22:0"
                  },
                  "returnParameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "521:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "520:9:0"
                  },
                  "scope": 83,
                  "src": "463:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "661:106:0",
                    "statements": [
                      {
                        "id": 80,
                        "nodeType": "UncheckedBlock",
                        "src": "671:90:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 72,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 70,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "703:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 71,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "708:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "703:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 73,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "711:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 69,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "695:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "695:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 75,
                            "nodeType": "ExpressionStatement",
                            "src": "695:29:0"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 76,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "745:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 77,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "749:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "745:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 68,
                            "id": 79,
                            "nodeType": "Return",
                            "src": "738:12:0"
                          }
                        ]
                      }
                    ]
                  },
                  "id": 82,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "575:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 60,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "587:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "579:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "579:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "598:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "590:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "590:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "615:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "601:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "601:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "578:50:0"
                  },
                  "returnParameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "652:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:9:0"
                  },
                  "scope": 83,
                  "src": "566:201:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3374,
              "src": "129:640:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBEP20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 170,
              "linearizedBaseContracts": [
                170
              ],
              "name": "IBEP20",
              "nameLocation": "782:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "18160ddd",
                  "id": 88,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "804:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "815:2:0"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "841:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "841:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "840:9:0"
                  },
                  "scope": 170,
                  "src": "795:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 93,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "864:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "872:2:0"
                  },
                  "returnParameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "898:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "898:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "897:7:0"
                  },
                  "scope": 170,
                  "src": "855:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 98,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "919:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "925:2:0"
                  },
                  "returnParameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "951:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "951:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "950:15:0"
                  },
                  "scope": 170,
                  "src": "910:56:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 103,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "980:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "984:2:0"
                  },
                  "returnParameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "1010:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1010:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1009:15:0"
                  },
                  "scope": 170,
                  "src": "971:54:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "893d20e8",
                  "id": 108,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOwner",
                  "nameLocation": "1039:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1047:2:0"
                  },
                  "returnParameters": {
                    "id": 107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 106,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1073:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1072:9:0"
                  },
                  "scope": 170,
                  "src": "1030:52:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 115,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "1096:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1114:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "1106:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1106:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1105:17:0"
                  },
                  "returnParameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "1146:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1146:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1145:9:0"
                  },
                  "scope": 170,
                  "src": "1087:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 124,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1169:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1186:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "1178:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1178:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1205:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "1197:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1197:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1177:35:0"
                  },
                  "returnParameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "1231:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1231:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1230:6:0"
                  },
                  "scope": 170,
                  "src": "1160:77:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 133,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1251:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "1269:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 133,
                        "src": "1261:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1261:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1285:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 133,
                        "src": "1277:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1277:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1260:33:0"
                  },
                  "returnParameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 133,
                        "src": "1317:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:9:0"
                  },
                  "scope": 170,
                  "src": "1242:84:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 142,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1340:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1356:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "1348:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1348:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1373:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "1365:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1365:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1347:33:0"
                  },
                  "returnParameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "1399:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1399:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1398:6:0"
                  },
                  "scope": 170,
                  "src": "1331:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 153,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "1419:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1440:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "1432:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1432:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1456:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "1448:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1448:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1475:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "1467:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1467:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1431:51:0"
                  },
                  "returnParameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "1501:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1501:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1500:6:0"
                  },
                  "scope": 170,
                  "src": "1410:97:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 161,
                  "name": "Transfer",
                  "nameLocation": "1518:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1543:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "1527:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1527:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1565:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "1549:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 159,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1577:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 161,
                        "src": "1569:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1526:57:0"
                  },
                  "src": "1512:72:0"
                },
                {
                  "anonymous": false,
                  "id": 169,
                  "name": "Approval",
                  "nameLocation": "1595:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1620:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1604:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1604:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 165,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1643:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1627:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1627:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1660:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1652:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1652:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1603:63:0"
                  },
                  "src": "1589:78:0"
                }
              ],
              "scope": 3374,
              "src": "772:897:0",
              "usedErrors": []
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Auth",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 302,
              "linearizedBaseContracts": [
                302
              ],
              "name": "Auth",
              "nameLocation": "1690:4:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1718:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "1701:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "authorizations",
                  "nameLocation": "1764:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "1729:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 175,
                    "keyType": {
                      "id": 173,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1738:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1729:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 174,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1749:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "1814:70:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 181,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "1824:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 182,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "1832:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1824:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 184,
                        "nodeType": "ExpressionStatement",
                        "src": "1824:14:0"
                      },
                      {
                        "expression": {
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 185,
                              "name": "authorizations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 176,
                              "src": "1848:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 187,
                            "indexExpression": {
                              "id": 186,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "1863:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1848:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1873:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1848:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 190,
                        "nodeType": "ExpressionStatement",
                        "src": "1848:29:0"
                      }
                    ]
                  },
                  "id": 192,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "1806:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1798:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1797:16:0"
                  },
                  "returnParameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1814:0:0"
                  },
                  "scope": 302,
                  "src": "1786:98:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 204,
                    "nodeType": "Block",
                    "src": "1992:58:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 197,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2018:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2018:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 196,
                                "name": "isOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "2010:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2010:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "214f574e4552",
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2031:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558",
                                "typeString": "literal_string \"!OWNER\""
                              },
                              "value": "!OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5c60264964a4aa6df663be321a21bb3860fbeb9f2250a09fba7d491ed480558",
                                "typeString": "literal_string \"!OWNER\""
                              }
                            ],
                            "id": 195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2002:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2002:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "2002:38:0"
                      },
                      {
                        "id": 203,
                        "nodeType": "PlaceholderStatement",
                        "src": "2042:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "1891:75:0",
                    "text": " Function modifier to require caller to be contract owner"
                  },
                  "id": 205,
                  "name": "onlyOwner",
                  "nameLocation": "1980:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1989:2:0"
                  },
                  "src": "1971:79:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 217,
                    "nodeType": "Block",
                    "src": "2155:68:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 210,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2186:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2186:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 209,
                                "name": "isAuthorized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 274,
                                "src": "2173:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2173:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "21415554484f52495a4544",
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2199:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0",
                                "typeString": "literal_string \"!AUTHORIZED\""
                              },
                              "value": "!AUTHORIZED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f2f8633fe6ecd35ac2063e273c5662f69e57f1e9dc62e1c5f442a1cab94711c0",
                                "typeString": "literal_string \"!AUTHORIZED\""
                              }
                            ],
                            "id": 208,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2165:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:48:0"
                      },
                      {
                        "id": 216,
                        "nodeType": "PlaceholderStatement",
                        "src": "2215:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 206,
                    "nodeType": "StructuredDocumentation",
                    "src": "2057:71:0",
                    "text": " Function modifier to require caller to be authorized"
                  },
                  "id": 218,
                  "name": "authorized",
                  "nameLocation": "2142:10:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2152:2:0"
                  },
                  "src": "2133:90:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "2332:43:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 226,
                              "name": "authorizations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 176,
                              "src": "2342:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 228,
                            "indexExpression": {
                              "id": 227,
                              "name": "adr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "2357:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2342:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2364:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2342:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "2342:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 219,
                    "nodeType": "StructuredDocumentation",
                    "src": "2230:48:0",
                    "text": " Authorize address. Owner only"
                  },
                  "functionSelector": "b6a5d7de",
                  "id": 233,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 224,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 223,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 205,
                        "src": "2322:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2322:9:0"
                    }
                  ],
                  "name": "authorize",
                  "nameLocation": "2292:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "adr",
                        "nameLocation": "2310:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "2302:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2302:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2301:13:0"
                  },
                  "returnParameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2332:0:0"
                  },
                  "scope": 302,
                  "src": "2283:92:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "2498:44:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 241,
                              "name": "authorizations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 176,
                              "src": "2508:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 243,
                            "indexExpression": {
                              "id": 242,
                              "name": "adr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "2523:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2508:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2530:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2508:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 246,
                        "nodeType": "ExpressionStatement",
                        "src": "2508:27:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "2382:60:0",
                    "text": " Remove address' authorization. Owner only"
                  },
                  "functionSelector": "f0b37c04",
                  "id": 248,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 239,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 238,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 205,
                        "src": "2488:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2488:9:0"
                    }
                  ],
                  "name": "unauthorize",
                  "nameLocation": "2456:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "adr",
                        "nameLocation": "2476:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "2468:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2468:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2467:13:0"
                  },
                  "returnParameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2498:0:0"
                  },
                  "scope": 302,
                  "src": "2447:95:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "2659:40:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 256,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "2676:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 257,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "2687:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2676:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 255,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "2669:23:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 249,
                    "nodeType": "StructuredDocumentation",
                    "src": "2549:44:0",
                    "text": " Check if address is owner"
                  },
                  "functionSelector": "2f54bf6e",
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOwner",
                  "nameLocation": "2607:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2623:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "2615:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2615:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2614:17:0"
                  },
                  "returnParameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "2653:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:6:0"
                  },
                  "scope": 302,
                  "src": "2598:101:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 273,
                    "nodeType": "Block",
                    "src": "2828:43:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 269,
                            "name": "authorizations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "2845:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 271,
                          "indexExpression": {
                            "id": 270,
                            "name": "adr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "2860:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2845:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 268,
                        "id": 272,
                        "nodeType": "Return",
                        "src": "2838:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "2706:55:0",
                    "text": " Return address' authorization status"
                  },
                  "functionSelector": "fe9fbb80",
                  "id": 274,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAuthorized",
                  "nameLocation": "2775:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "adr",
                        "nameLocation": "2796:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 274,
                        "src": "2788:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2788:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2787:13:0"
                  },
                  "returnParameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 274,
                        "src": "2822:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2822:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2821:6:0"
                  },
                  "scope": 302,
                  "src": "2766:105:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 296,
                    "nodeType": "Block",
                    "src": "3051:104:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 282,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3061:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 283,
                            "name": "adr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "3069:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3061:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 285,
                        "nodeType": "ExpressionStatement",
                        "src": "3061:11:0"
                      },
                      {
                        "expression": {
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 286,
                              "name": "authorizations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 176,
                              "src": "3082:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 288,
                            "indexExpression": {
                              "id": 287,
                              "name": "adr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "3097:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3082:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3104:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3082:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "3082:26:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 293,
                              "name": "adr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "3144:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 292,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "3123:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3123:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 295,
                        "nodeType": "EmitStatement",
                        "src": "3118:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 275,
                    "nodeType": "StructuredDocumentation",
                    "src": "2878:103:0",
                    "text": " Transfer ownership to new address. Caller must be owner. Leaves old owner authorized"
                  },
                  "functionSelector": "f2fde38b",
                  "id": 297,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 280,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 279,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 205,
                        "src": "3041:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3041:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2995:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "adr",
                        "nameLocation": "3029:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "3013:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3013:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3012:21:0"
                  },
                  "returnParameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3051:0:0"
                  },
                  "scope": 302,
                  "src": "2986:169:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 301,
                  "name": "OwnershipTransferred",
                  "nameLocation": "3168:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3197:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "3189:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3189:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3188:15:0"
                  },
                  "src": "3162:42:0"
                }
              ],
              "scope": 3374,
              "src": "1672:1534:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IDEXFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 312,
              "linearizedBaseContracts": [
                312
              ],
              "name": "IDEXFactory",
              "nameLocation": "3219:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c9c65396",
                  "id": 311,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "3246:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "3265:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "3257:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3257:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "3281:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "3273:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3273:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3256:32:0"
                  },
                  "returnParameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "3315:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 311,
                        "src": "3307:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3307:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3306:14:0"
                  },
                  "scope": 312,
                  "src": "3237:84:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3374,
              "src": "3209:114:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IDEXPair",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 327,
              "linearizedBaseContracts": [
                327
              ],
              "name": "IDEXPair",
              "nameLocation": "3336:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "0902f1ac",
                  "id": 321,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "3360:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3371:2:0"
                  },
                  "returnParameters": {
                    "id": 320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "3405:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "3397:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "3397:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 317,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "3423:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "3415:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 316,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "3415:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "bassetPoolLockTimestampLast",
                        "nameLocation": "3440:27:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "3433:34:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3433:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3396:72:0"
                  },
                  "scope": 327,
                  "src": "3351:118:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0dfe1681",
                  "id": 326,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nameLocation": "3483:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3489:2:0"
                  },
                  "returnParameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "3515:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3515:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3514:9:0"
                  },
                  "scope": 327,
                  "src": "3474:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3374,
              "src": "3326:200:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IDEXRouter",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 385,
              "linearizedBaseContracts": [
                385
              ],
              "name": "IDEXRouter",
              "nameLocation": "3539:10:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c45a0155",
                  "id": 332,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "3565:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 328,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3572:2:0"
                  },
                  "returnParameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "3598:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3598:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3597:9:0"
                  },
                  "scope": 385,
                  "src": "3556:51:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ad5c4648",
                  "id": 337,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH",
                  "nameLocation": "3621:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 333,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3625:2:0"
                  },
                  "returnParameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "3651:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3651:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3650:9:0"
                  },
                  "scope": 385,
                  "src": "3612:48:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f305d719",
                  "id": 358,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidityETH",
                  "nameLocation": "3676:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3709:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3701:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3701:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "amountTokenDesired",
                        "nameLocation": "3729:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3724:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3724:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nameLocation": "3762:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3757:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3757:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nameLocation": "3791:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3786:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3786:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3821:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3813:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3813:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "3838:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3833:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3833:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3691:161:0"
                  },
                  "returnParameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nameLocation": "3884:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3879:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3879:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nameLocation": "3902:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3897:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3897:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "3918:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "3913:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3913:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3878:50:0"
                  },
                  "scope": 385,
                  "src": "3667:262:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b6f9de95",
                  "id": 370,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
                  "nameLocation": "3945:50:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "4010:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "4005:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4005:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 363,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "4051:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "4032:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 361,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4032:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 362,
                          "nodeType": "ArrayTypeName",
                          "src": "4032:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 365,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4073:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "4065:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 364,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4065:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "4090:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "4085:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4085:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:109:0"
                  },
                  "returnParameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4121:0:0"
                  },
                  "scope": 385,
                  "src": "3936:186:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "791ac947",
                  "id": 384,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                  "nameLocation": "4138:50:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "4203:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 384,
                        "src": "4198:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4198:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "4226:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 384,
                        "src": "4221:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4221:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "4267:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 384,
                        "src": "4248:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 375,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4248:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 376,
                          "nodeType": "ArrayTypeName",
                          "src": "4248:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4289:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 384,
                        "src": "4281:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4281:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 381,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "4306:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 384,
                        "src": "4301:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 380,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4301:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4188:132:0"
                  },
                  "returnParameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4329:0:0"
                  },
                  "scope": 385,
                  "src": "4129:201:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3374,
              "src": "3529:803:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IDividendDistributor",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 411,
              "linearizedBaseContracts": [
                411
              ],
              "name": "IDividendDistributor",
              "nameLocation": "4345:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "98e5bfee",
                  "id": 390,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setDistributionCriteria",
                  "nameLocation": "4381:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "_minDistribution",
                        "nameLocation": "4413:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "4405:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4405:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4404:26:0"
                  },
                  "returnParameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4439:0:0"
                  },
                  "scope": 411,
                  "src": "4372:68:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "14b6ca96",
                  "id": 397,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setShare",
                  "nameLocation": "4454:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "shareholder",
                        "nameLocation": "4471:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "4463:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4463:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4492:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "4484:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4484:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4462:37:0"
                  },
                  "returnParameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4508:0:0"
                  },
                  "scope": 411,
                  "src": "4445:64:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8bd2da9a",
                  "id": 400,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "processDividend",
                  "nameLocation": "4523:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4538:2:0"
                  },
                  "returnParameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4549:0:0"
                  },
                  "scope": 411,
                  "src": "4514:36:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7bf7d61b",
                  "id": 405,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "viewDividendTokenAddress",
                  "nameLocation": "4564:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4588:2:0"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "4622:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "4614:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4614:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4613:22:0"
                  },
                  "scope": 411,
                  "src": "4555:81:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "20ffe2fd",
                  "id": 410,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setDividendToken",
                  "nameLocation": "4650:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "_dividendTokenAddress",
                        "nameLocation": "4675:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 410,
                        "src": "4667:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4667:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4666:31:0"
                  },
                  "returnParameters": {
                    "id": 409,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4706:0:0"
                  },
                  "scope": 411,
                  "src": "4641:66:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3374,
              "src": "4335:374:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 412,
                    "name": "IDividendDistributor",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 411,
                    "src": "4744:20:0"
                  },
                  "id": 413,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4744:20:0"
                }
              ],
              "canonicalName": "DividendDistributor",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1064,
              "linearizedBaseContracts": [
                1064,
                411
              ],
              "name": "DividendDistributor",
              "nameLocation": "4721:19:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 416,
                  "libraryName": {
                    "id": 414,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 83,
                    "src": "4777:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "4771:27:0",
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4813:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "4805:14:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "_rewardsPool",
                  "nameLocation": "4833:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "4825:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "DividendDistributor.Share",
                  "id": 427,
                  "members": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4884:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 427,
                      "src": "4876:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 424,
                      "mutability": "mutable",
                      "name": "totalExcluded",
                      "nameLocation": "4908:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 427,
                      "src": "4900:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4900:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "totalRealised",
                      "nameLocation": "4939:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 427,
                      "src": "4931:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4931:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Share",
                  "nameLocation": "4860:5:0",
                  "nodeType": "StructDefinition",
                  "scope": 1064,
                  "src": "4853:106:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "dividendToken",
                  "nameLocation": "4973:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "4966:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBEP20_$170",
                    "typeString": "contract IBEP20"
                  },
                  "typeName": {
                    "id": 429,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 428,
                      "name": "IBEP20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 170,
                      "src": "4966:6:0"
                    },
                    "referencedDeclaration": 170,
                    "src": "4966:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBEP20_$170",
                      "typeString": "contract IBEP20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "WBNB",
                  "nameLocation": "5000:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "4992:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5007:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "5066:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5055:17:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDEXRouter_$385",
                    "typeString": "contract IDEXRouter"
                  },
                  "typeName": {
                    "id": 435,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 434,
                      "name": "IDEXRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 385,
                      "src": "5055:10:0"
                    },
                    "referencedDeclaration": 385,
                    "src": "5055:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDEXRouter_$385",
                      "typeString": "contract IDEXRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "shareholders",
                  "nameLocation": "5090:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5080:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 437,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5080:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 438,
                    "nodeType": "ArrayTypeName",
                    "src": "5080:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "shareholderIndexes",
                  "nameLocation": "5137:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5108:47:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 442,
                    "keyType": {
                      "id": 440,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5117:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "5108:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 441,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5128:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "ce7c2ac2",
                  "id": 448,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5197:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5163:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                    "typeString": "mapping(address => struct DividendDistributor.Share)"
                  },
                  "typeName": {
                    "id": 447,
                    "keyType": {
                      "id": 444,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5172:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "5163:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                      "typeString": "mapping(address => struct DividendDistributor.Share)"
                    },
                    "valueType": {
                      "id": 446,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 445,
                        "name": "Share",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 427,
                        "src": "5183:5:0"
                      },
                      "referencedDeclaration": 427,
                      "src": "5183:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Share_$427_storage_ptr",
                        "typeString": "struct DividendDistributor.Share"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3a98ef39",
                  "id": 450,
                  "mutability": "mutable",
                  "name": "totalShares",
                  "nameLocation": "5226:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5211:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "997664d7",
                  "id": 452,
                  "mutability": "mutable",
                  "name": "totalDividends",
                  "nameLocation": "5258:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5243:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5243:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "efca2eed",
                  "id": 454,
                  "mutability": "mutable",
                  "name": "totalDistributed",
                  "nameLocation": "5293:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5278:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5278:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e2d2e219",
                  "id": 456,
                  "mutability": "mutable",
                  "name": "dividendsPerShare",
                  "nameLocation": "5330:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5315:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5315:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "11ce023d",
                  "id": 461,
                  "mutability": "mutable",
                  "name": "dividendsPerShareAccuracyFactor",
                  "nameLocation": "5368:31:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5353:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5353:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                      "typeString": "int_const 1000...(29 digits omitted)...0000"
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5402:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3336",
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5408:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_36_by_1",
                        "typeString": "int_const 36"
                      },
                      "value": "36"
                    },
                    "src": "5402:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                      "typeString": "int_const 1000...(29 digits omitted)...0000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4fab0ae8",
                  "id": 464,
                  "mutability": "mutable",
                  "name": "minDistribution",
                  "nameLocation": "5431:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5416:34:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5416:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5449:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "currentIndex",
                  "nameLocation": "5466:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5458:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "45153af8",
                  "id": 468,
                  "mutability": "mutable",
                  "name": "isDistributing",
                  "nameLocation": "5498:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5486:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5486:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "94799d86",
                  "id": 471,
                  "mutability": "mutable",
                  "name": "neverDistributed",
                  "nameLocation": "5530:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5518:35:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5518:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "74727565",
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5549:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "startingIndex",
                  "nameLocation": "5567:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5559:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nameLocation": "5593:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "5588:16:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5588:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "5636:77:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5654:12:0",
                              "subExpression": {
                                "id": 478,
                                "name": "initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 475,
                                "src": "5655:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 477,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5646:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5646:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 481,
                        "nodeType": "ExpressionStatement",
                        "src": "5646:21:0"
                      },
                      {
                        "id": 482,
                        "nodeType": "PlaceholderStatement",
                        "src": "5677:1:0"
                      },
                      {
                        "expression": {
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 483,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "5688:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5702:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5688:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 486,
                        "nodeType": "ExpressionStatement",
                        "src": "5688:18:0"
                      }
                    ]
                  },
                  "id": 488,
                  "name": "initialization",
                  "nameLocation": "5619:14:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5633:2:0"
                  },
                  "src": "5610:103:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "5741:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 491,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5759:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5759:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 493,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 418,
                                "src": "5773:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5759:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 490,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5751:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5751:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "5751:29:0"
                      },
                      {
                        "id": 497,
                        "nodeType": "PlaceholderStatement",
                        "src": "5782:1:0"
                      }
                    ]
                  },
                  "id": 499,
                  "name": "onlyToken",
                  "nameLocation": "5729:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5738:2:0"
                  },
                  "src": "5720:70:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "5824:55:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 502,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5842:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5842:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 504,
                                "name": "_rewardsPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 420,
                                "src": "5856:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5842:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 501,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5834:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5834:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 507,
                        "nodeType": "ExpressionStatement",
                        "src": "5834:35:0"
                      },
                      {
                        "id": 508,
                        "nodeType": "PlaceholderStatement",
                        "src": "5871:1:0"
                      }
                    ]
                  },
                  "id": 510,
                  "name": "onlyRewardsPool",
                  "nameLocation": "5806:15:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5821:2:0"
                  },
                  "src": "5797:82:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 558,
                    "nodeType": "Block",
                    "src": "5974:326:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 519,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "5984:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDEXRouter_$385",
                              "typeString": "contract IDEXRouter"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 520,
                                "name": "_router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 512,
                                "src": "5993:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6012:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6004:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 521,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6004:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6004:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5993:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "arguments": [
                                {
                                  "hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
                                  "id": 530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6066:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 529,
                                "name": "IDEXRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 385,
                                "src": "6055:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDEXRouter_$385_$",
                                  "typeString": "type(contract IDEXRouter)"
                                }
                              },
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6055:54:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                "typeString": "contract IDEXRouter"
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "5993:116:0",
                            "trueExpression": {
                              "arguments": [
                                {
                                  "id": 527,
                                  "name": "_router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "6036:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 526,
                                "name": "IDEXRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 385,
                                "src": "6025:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDEXRouter_$385_$",
                                  "typeString": "type(contract IDEXRouter)"
                                }
                              },
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6025:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                "typeString": "contract IDEXRouter"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDEXRouter_$385",
                              "typeString": "contract IDEXRouter"
                            }
                          },
                          "src": "5984:125:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDEXRouter_$385",
                            "typeString": "contract IDEXRouter"
                          }
                        },
                        "id": 534,
                        "nodeType": "ExpressionStatement",
                        "src": "5984:125:0"
                      },
                      {
                        "expression": {
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 535,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "6119:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 536,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6128:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6128:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6119:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 539,
                        "nodeType": "ExpressionStatement",
                        "src": "6119:19:0"
                      },
                      {
                        "expression": {
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 540,
                            "name": "_rewardsPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "6148:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 541,
                            "name": "_rewardsPoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "6163:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6148:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 543,
                        "nodeType": "ExpressionStatement",
                        "src": "6148:34:0"
                      },
                      {
                        "expression": {
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 544,
                            "name": "dividendToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "6192:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBEP20_$170",
                              "typeString": "contract IBEP20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 546,
                                "name": "_rewardTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 514,
                                "src": "6215:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 545,
                              "name": "IBEP20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "6208:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBEP20_$170_$",
                                "typeString": "type(contract IBEP20)"
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6208:27:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBEP20_$170",
                              "typeString": "contract IBEP20"
                            }
                          },
                          "src": "6192:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$170",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "id": 549,
                        "nodeType": "ExpressionStatement",
                        "src": "6192:43:0"
                      },
                      {
                        "expression": {
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 550,
                            "name": "currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "6245:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6260:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6245:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 553,
                        "nodeType": "ExpressionStatement",
                        "src": "6245:16:0"
                      },
                      {
                        "expression": {
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 554,
                            "name": "isDistributing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "6271:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6288:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6271:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 557,
                        "nodeType": "ExpressionStatement",
                        "src": "6271:22:0"
                      }
                    ]
                  },
                  "id": 559,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "_router",
                        "nameLocation": "5907:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "5899:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5899:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "_rewardTokenAddress",
                        "nameLocation": "5924:19:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "5916:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5916:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "_rewardsPoolAddress",
                        "nameLocation": "5953:19:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 559,
                        "src": "5945:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5945:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5898:75:0"
                  },
                  "returnParameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5974:0:0"
                  },
                  "scope": 1064,
                  "src": "5886:414:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    390
                  ],
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "6394:51:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 567,
                            "name": "minDistribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "6404:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 568,
                            "name": "_minDistribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 561,
                            "src": "6422:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6404:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "6404:34:0"
                      }
                    ]
                  },
                  "functionSelector": "98e5bfee",
                  "id": 572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 565,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 564,
                        "name": "onlyToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 499,
                        "src": "6384:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6384:9:0"
                    }
                  ],
                  "name": "setDistributionCriteria",
                  "nameLocation": "6316:23:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 563,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6375:8:0"
                  },
                  "parameters": {
                    "id": 562,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 561,
                        "mutability": "mutable",
                        "name": "_minDistribution",
                        "nameLocation": "6348:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "6340:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 560,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6340:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6339:26:0"
                  },
                  "returnParameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6394:0:0"
                  },
                  "scope": 1064,
                  "src": "6307:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    397
                  ],
                  "body": {
                    "id": 658,
                    "nodeType": "Block",
                    "src": "6535:549:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 582,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "6548:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                  "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                }
                              },
                              "id": 584,
                              "indexExpression": {
                                "id": 583,
                                "name": "shareholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 574,
                                "src": "6555:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6548:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Share_$427_storage",
                                "typeString": "struct DividendDistributor.Share storage ref"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 422,
                            "src": "6548:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6577:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6548:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 593,
                        "nodeType": "IfStatement",
                        "src": "6545:90:0",
                        "trueBody": {
                          "id": 592,
                          "nodeType": "Block",
                          "src": "6579:56:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 589,
                                    "name": "shareholder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 574,
                                    "src": "6612:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 588,
                                  "name": "distributeDividend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 933,
                                  "src": "6593:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6593:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 591,
                              "nodeType": "ExpressionStatement",
                              "src": "6593:31:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 594,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "6649:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6658:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6649:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 597,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "6663:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                    "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                  }
                                },
                                "id": 599,
                                "indexExpression": {
                                  "id": 598,
                                  "name": "shareholder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 574,
                                  "src": "6670:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6663:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Share_$427_storage",
                                  "typeString": "struct DividendDistributor.Share storage ref"
                                }
                              },
                              "id": 600,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "6663:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6693:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6663:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6649:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 609,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "6755:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6765:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6755:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 612,
                                    "name": "shares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 448,
                                    "src": "6770:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                      "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                    }
                                  },
                                  "id": 614,
                                  "indexExpression": {
                                    "id": 613,
                                    "name": "shareholder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 574,
                                    "src": "6777:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6770:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Share_$427_storage",
                                    "typeString": "struct DividendDistributor.Share storage ref"
                                  }
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 422,
                                "src": "6770:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6799:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6770:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6755:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 624,
                          "nodeType": "IfStatement",
                          "src": "6752:104:0",
                          "trueBody": {
                            "id": 623,
                            "nodeType": "Block",
                            "src": "6801:55:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 620,
                                      "name": "shareholder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 574,
                                      "src": "6833:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 619,
                                    "name": "removeShareholder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1051,
                                    "src": "6815:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                      "typeString": "function (address)"
                                    }
                                  },
                                  "id": 621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6815:30:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 622,
                                "nodeType": "ExpressionStatement",
                                "src": "6815:30:0"
                              }
                            ]
                          }
                        },
                        "id": 625,
                        "nodeType": "IfStatement",
                        "src": "6646:210:0",
                        "trueBody": {
                          "id": 608,
                          "nodeType": "Block",
                          "src": "6695:52:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 605,
                                    "name": "shareholder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 574,
                                    "src": "6724:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 604,
                                  "name": "addShareholder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1014,
                                  "src": "6709:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6709:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 607,
                              "nodeType": "ExpressionStatement",
                              "src": "6709:27:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 626,
                            "name": "totalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "6867:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 635,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "6929:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 629,
                                        "name": "shares",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 448,
                                        "src": "6897:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                          "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                        }
                                      },
                                      "id": 631,
                                      "indexExpression": {
                                        "id": 630,
                                        "name": "shareholder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 574,
                                        "src": "6904:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6897:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Share_$427_storage",
                                        "typeString": "struct DividendDistributor.Share storage ref"
                                      }
                                    },
                                    "id": 632,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 422,
                                    "src": "6897:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 627,
                                    "name": "totalShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "6881:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30,
                                  "src": "6881:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6881:43:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "6881:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6881:55:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6867:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "6867:69:0"
                      },
                      {
                        "expression": {
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 639,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "6946:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                  "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                }
                              },
                              "id": 641,
                              "indexExpression": {
                                "id": 640,
                                "name": "shareholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 574,
                                "src": "6953:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6946:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Share_$427_storage",
                                "typeString": "struct DividendDistributor.Share storage ref"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 422,
                            "src": "6946:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 643,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "6975:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6946:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "6946:35:0"
                      },
                      {
                        "expression": {
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 646,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "6991:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                  "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                }
                              },
                              "id": 648,
                              "indexExpression": {
                                "id": 647,
                                "name": "shareholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 574,
                                "src": "6998:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6991:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Share_$427_storage",
                                "typeString": "struct DividendDistributor.Share storage ref"
                              }
                            },
                            "id": 649,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalExcluded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 424,
                            "src": "6991:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 651,
                                    "name": "shares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 448,
                                    "src": "7050:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                      "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                    }
                                  },
                                  "id": 653,
                                  "indexExpression": {
                                    "id": 652,
                                    "name": "shareholder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 574,
                                    "src": "7057:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7050:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Share_$427_storage",
                                    "typeString": "struct DividendDistributor.Share storage ref"
                                  }
                                },
                                "id": 654,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 422,
                                "src": "7050:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 650,
                              "name": "getCumulativeDividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 995,
                              "src": "7027:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7027:50:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6991:86:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "6991:86:0"
                      }
                    ]
                  },
                  "functionSelector": "14b6ca96",
                  "id": 659,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 580,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 579,
                        "name": "onlyToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 499,
                        "src": "6525:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6525:9:0"
                    }
                  ],
                  "name": "setShare",
                  "nameLocation": "6461:8:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 578,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6516:8:0"
                  },
                  "parameters": {
                    "id": 577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "shareholder",
                        "nameLocation": "6478:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 659,
                        "src": "6470:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6470:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 576,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6499:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 659,
                        "src": "6491:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 575,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6491:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6469:37:0"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6535:0:0"
                  },
                  "scope": 1064,
                  "src": "6452:632:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    410
                  ],
                  "body": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "7175:178:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 668,
                                "name": "neverDistributed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 471,
                                "src": "7193:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7213:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "7193:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616e6765206469766964656e6420746f6b656e2061667465722074686520666972737420646973747269627574696f6e206861732073746172746564",
                              "id": 671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7219:71:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                                "typeString": "literal_string \"Cannot change dividend token after the first distribution has started\""
                              },
                              "value": "Cannot change dividend token after the first distribution has started"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                                "typeString": "literal_string \"Cannot change dividend token after the first distribution has started\""
                              }
                            ],
                            "id": 667,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7185:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7185:106:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 673,
                        "nodeType": "ExpressionStatement",
                        "src": "7185:106:0"
                      },
                      {
                        "expression": {
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 674,
                            "name": "dividendToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "7301:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBEP20_$170",
                              "typeString": "contract IBEP20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 676,
                                "name": "_dividendTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 661,
                                "src": "7324:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 675,
                              "name": "IBEP20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "7317:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBEP20_$170_$",
                                "typeString": "type(contract IBEP20)"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7317:29:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBEP20_$170",
                              "typeString": "contract IBEP20"
                            }
                          },
                          "src": "7301:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$170",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "7301:45:0"
                      }
                    ]
                  },
                  "functionSelector": "20ffe2fd",
                  "id": 681,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 665,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 664,
                        "name": "onlyToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 499,
                        "src": "7165:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7165:9:0"
                    }
                  ],
                  "name": "setDividendToken",
                  "nameLocation": "7099:16:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 663,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7156:8:0"
                  },
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "_dividendTokenAddress",
                        "nameLocation": "7124:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "7116:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7116:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7115:31:0"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7175:0:0"
                  },
                  "scope": 1064,
                  "src": "7090:263:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 783,
                    "nodeType": "Block",
                    "src": "7403:742:0",
                    "statements": [
                      {
                        "assignments": [
                          687
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 687,
                            "mutability": "mutable",
                            "name": "balanceBefore",
                            "nameLocation": "7421:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 783,
                            "src": "7413:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 686,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7413:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 695,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 692,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7469:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                    "typeString": "contract DividendDistributor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                    "typeString": "contract DividendDistributor"
                                  }
                                ],
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7461:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 690,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7461:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7461:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 688,
                              "name": "dividendToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "7437:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$170",
                                "typeString": "contract IBEP20"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "7437:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7437:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7413:62:0"
                      },
                      {
                        "assignments": [
                          700
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 700,
                            "mutability": "mutable",
                            "name": "path",
                            "nameLocation": "7504:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 783,
                            "src": "7487:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 698,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7487:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 699,
                              "nodeType": "ArrayTypeName",
                              "src": "7487:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 706,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7525:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7511:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 701,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7515:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 702,
                              "nodeType": "ArrayTypeName",
                              "src": "7515:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7511:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7487:40:0"
                      },
                      {
                        "expression": {
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 707,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "7537:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 709,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7542:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7537:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 710,
                            "name": "WBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "7547:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7537:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 712,
                        "nodeType": "ExpressionStatement",
                        "src": "7537:14:0"
                      },
                      {
                        "expression": {
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 713,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "7561:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 715,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7566:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7561:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 718,
                                "name": "dividendToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "7579:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBEP20_$170",
                                  "typeString": "contract IBEP20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IBEP20_$170",
                                  "typeString": "contract IBEP20"
                                }
                              ],
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7571:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 716,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7571:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7571:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7561:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "7561:32:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7694:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 729,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "7709:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 732,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7735:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                    "typeString": "contract DividendDistributor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                    "typeString": "contract DividendDistributor"
                                  }
                                ],
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7727:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 730,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7727:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7727:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 734,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7754:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7754:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 722,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "7605:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                  "typeString": "contract IDEXRouter"
                                }
                              },
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "swapExactETHForTokensSupportingFeeOnTransferTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 370,
                              "src": "7605:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,address[] memory,address,uint256) payable external"
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 725,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7670:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "7670:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "7605:75:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256,address[] memory,address,uint256) payable external"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:174:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:174:0"
                      },
                      {
                        "assignments": [
                          739
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 739,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "7799:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 783,
                            "src": "7791:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 738,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7791:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 750,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 748,
                              "name": "balanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 687,
                              "src": "7851:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 744,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "7840:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                        "typeString": "contract DividendDistributor"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                        "typeString": "contract DividendDistributor"
                                      }
                                    ],
                                    "id": 743,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7832:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 742,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7832:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7832:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 740,
                                  "name": "dividendToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 430,
                                  "src": "7808:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBEP20_$170",
                                    "typeString": "contract IBEP20"
                                  }
                                },
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 115,
                                "src": "7808:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7808:38:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "7808:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7808:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7791:74:0"
                      },
                      {
                        "expression": {
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 751,
                            "name": "totalDividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 452,
                            "src": "7877:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 754,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "7913:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 752,
                                "name": "totalDividends",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 452,
                                "src": "7894:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "7894:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7894:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7877:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 757,
                        "nodeType": "ExpressionStatement",
                        "src": "7877:43:0"
                      },
                      {
                        "expression": {
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 758,
                            "name": "dividendsPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "7930:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 766,
                                    "name": "totalShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "8020:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 763,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 739,
                                        "src": "8008:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 761,
                                        "name": "dividendsPerShareAccuracyFactor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 461,
                                        "src": "7972:31:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 44,
                                      "src": "7972:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 764,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7972:43:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 765,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "7972:47:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7972:60:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 759,
                                "name": "dividendsPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "7950:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "7950:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7950:83:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7930:103:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 770,
                        "nodeType": "ExpressionStatement",
                        "src": "7930:103:0"
                      },
                      {
                        "expression": {
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 771,
                            "name": "startingIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "8045:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 772,
                            "name": "currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 466,
                            "src": "8061:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8045:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 774,
                        "nodeType": "ExpressionStatement",
                        "src": "8045:28:0"
                      },
                      {
                        "expression": {
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 775,
                            "name": "isDistributing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "8083:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8100:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8083:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "8083:21:0"
                      },
                      {
                        "expression": {
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 779,
                            "name": "neverDistributed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "8114:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8133:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "8114:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 782,
                        "nodeType": "ExpressionStatement",
                        "src": "8114:24:0"
                      }
                    ]
                  },
                  "id": 784,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [
                    {
                      "id": 684,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 683,
                        "name": "onlyRewardsPool",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 510,
                        "src": "7387:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7387:15:0"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7367:2:0"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7403:0:0"
                  },
                  "scope": 1064,
                  "src": "7360:785:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    400
                  ],
                  "body": {
                    "id": 853,
                    "nodeType": "Block",
                    "src": "8207:635:0",
                    "statements": [
                      {
                        "assignments": [
                          791
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 791,
                            "mutability": "mutable",
                            "name": "shareholderCount",
                            "nameLocation": "8225:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 853,
                            "src": "8217:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 790,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8217:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 794,
                        "initialValue": {
                          "expression": {
                            "id": 792,
                            "name": "shareholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "8244:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8244:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8217:46:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 795,
                            "name": "shareholderCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "8278:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8298:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8278:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 800,
                        "nodeType": "IfStatement",
                        "src": "8275:37:0",
                        "trueBody": {
                          "id": 799,
                          "nodeType": "Block",
                          "src": "8301:11:0",
                          "statements": [
                            {
                              "functionReturnParameters": 789,
                              "id": 798,
                              "nodeType": "Return",
                              "src": "8303:7:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 801,
                            "name": "isDistributing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "8324:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8342:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "8324:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 806,
                        "nodeType": "IfStatement",
                        "src": "8321:39:0",
                        "trueBody": {
                          "id": 805,
                          "nodeType": "Block",
                          "src": "8349:11:0",
                          "statements": [
                            {
                              "functionReturnParameters": 789,
                              "id": 804,
                              "nodeType": "Return",
                              "src": "8351:7:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          808
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 808,
                            "mutability": "mutable",
                            "name": "iterations",
                            "nameLocation": "8379:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 853,
                            "src": "8371:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 807,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8371:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 810,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8392:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8371:22:0"
                      },
                      {
                        "body": {
                          "id": 851,
                          "nodeType": "Block",
                          "src": "8427:409:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 814,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "8444:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 815,
                                  "name": "shareholderCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 791,
                                  "src": "8460:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8444:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 822,
                              "nodeType": "IfStatement",
                              "src": "8441:85:0",
                              "trueBody": {
                                "id": 821,
                                "nodeType": "Block",
                                "src": "8477:49:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 819,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 817,
                                        "name": "currentIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 466,
                                        "src": "8495:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 818,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8510:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "8495:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 820,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8495:16:0"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 824,
                                      "name": "shareholders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 439,
                                      "src": "8561:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 826,
                                    "indexExpression": {
                                      "id": 825,
                                      "name": "currentIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 466,
                                      "src": "8574:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8561:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 823,
                                  "name": "shouldDistribute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 868,
                                  "src": "8544:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8544:44:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 835,
                              "nodeType": "IfStatement",
                              "src": "8541:127:0",
                              "trueBody": {
                                "id": 834,
                                "nodeType": "Block",
                                "src": "8589:79:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 829,
                                            "name": "shareholders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 439,
                                            "src": "8626:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 831,
                                          "indexExpression": {
                                            "id": 830,
                                            "name": "currentIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 466,
                                            "src": "8639:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8626:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 828,
                                        "name": "distributeDividend",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 933,
                                        "src": "8607:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function (address)"
                                        }
                                      },
                                      "id": 832,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8607:46:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 833,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8607:46:0"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "8683:14:0",
                                "subExpression": {
                                  "id": 836,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "8683:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 838,
                              "nodeType": "ExpressionStatement",
                              "src": "8683:14:0"
                            },
                            {
                              "expression": {
                                "id": 840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "8711:12:0",
                                "subExpression": {
                                  "id": 839,
                                  "name": "iterations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 808,
                                  "src": "8711:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 841,
                              "nodeType": "ExpressionStatement",
                              "src": "8711:12:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 842,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "8740:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 843,
                                  "name": "startingIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 473,
                                  "src": "8756:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8740:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 850,
                              "nodeType": "IfStatement",
                              "src": "8737:89:0",
                              "trueBody": {
                                "id": 849,
                                "nodeType": "Block",
                                "src": "8771:55:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 847,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 845,
                                        "name": "isDistributing",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 468,
                                        "src": "8789:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 846,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8806:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "8789:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 848,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8789:22:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 811,
                            "name": "iterations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "8411:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8424:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "8411:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 852,
                        "nodeType": "WhileStatement",
                        "src": "8405:431:0"
                      }
                    ]
                  },
                  "functionSelector": "8bd2da9a",
                  "id": 854,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 788,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 787,
                        "name": "onlyToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 499,
                        "src": "8197:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8197:9:0"
                    }
                  ],
                  "name": "processDividend",
                  "nameLocation": "8161:15:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 786,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8188:8:0"
                  },
                  "parameters": {
                    "id": 785,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8176:2:0"
                  },
                  "returnParameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8207:0:0"
                  },
                  "scope": 1064,
                  "src": "8152:690:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "8925:72:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 862,
                                "name": "shareholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 856,
                                "src": "8960:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 861,
                              "name": "getUnpaidEarnings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "8942:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8942:30:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 864,
                            "name": "minDistribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "8975:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8942:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 860,
                        "id": 866,
                        "nodeType": "Return",
                        "src": "8935:55:0"
                      }
                    ]
                  },
                  "id": 868,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "shouldDistribute",
                  "nameLocation": "8858:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "shareholder",
                        "nameLocation": "8883:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "8875:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8875:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8874:21:0"
                  },
                  "returnParameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "8919:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8919:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8918:6:0"
                  },
                  "scope": 1064,
                  "src": "8849:148:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 932,
                    "nodeType": "Block",
                    "src": "9062:468:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 873,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "9075:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                  "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                }
                              },
                              "id": 875,
                              "indexExpression": {
                                "id": 874,
                                "name": "shareholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "9082:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9075:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Share_$427_storage",
                                "typeString": "struct DividendDistributor.Share storage ref"
                              }
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 422,
                            "src": "9075:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9105:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9075:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 881,
                        "nodeType": "IfStatement",
                        "src": "9072:46:0",
                        "trueBody": {
                          "id": 880,
                          "nodeType": "Block",
                          "src": "9107:11:0",
                          "statements": [
                            {
                              "functionReturnParameters": 872,
                              "id": 879,
                              "nodeType": "Return",
                              "src": "9109:7:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          883
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 883,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "9137:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 932,
                            "src": "9129:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 882,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9129:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 887,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 885,
                              "name": "shareholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 870,
                              "src": "9164:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 884,
                            "name": "getUnpaidEarnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "9146:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9146:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9129:47:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 888,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "9189:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9198:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9189:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 931,
                        "nodeType": "IfStatement",
                        "src": "9186:338:0",
                        "trueBody": {
                          "id": 930,
                          "nodeType": "Block",
                          "src": "9200:324:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 891,
                                  "name": "totalDistributed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 454,
                                  "src": "9214:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 894,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 883,
                                      "src": "9254:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 892,
                                      "name": "totalDistributed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 454,
                                      "src": "9233:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 893,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "9233:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 895,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9233:28:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9214:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 897,
                              "nodeType": "ExpressionStatement",
                              "src": "9214:47:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 901,
                                    "name": "shareholder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 870,
                                    "src": "9298:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 902,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 883,
                                    "src": "9311:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 898,
                                    "name": "dividendToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 430,
                                    "src": "9275:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBEP20_$170",
                                      "typeString": "contract IBEP20"
                                    }
                                  },
                                  "id": 900,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 124,
                                  "src": "9275:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9275:43:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 904,
                              "nodeType": "ExpressionStatement",
                              "src": "9275:43:0"
                            },
                            {
                              "expression": {
                                "id": 916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 905,
                                      "name": "shares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 448,
                                      "src": "9332:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                        "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                      }
                                    },
                                    "id": 907,
                                    "indexExpression": {
                                      "id": 906,
                                      "name": "shareholder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 870,
                                      "src": "9339:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9332:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Share_$427_storage",
                                      "typeString": "struct DividendDistributor.Share storage ref"
                                    }
                                  },
                                  "id": 908,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalRealised",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 426,
                                  "src": "9332:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 914,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 883,
                                      "src": "9406:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 909,
                                          "name": "shares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 448,
                                          "src": "9368:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                            "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                          }
                                        },
                                        "id": 911,
                                        "indexExpression": {
                                          "id": 910,
                                          "name": "shareholder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 870,
                                          "src": "9375:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9368:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Share_$427_storage",
                                          "typeString": "struct DividendDistributor.Share storage ref"
                                        }
                                      },
                                      "id": 912,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalRealised",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 426,
                                      "src": "9368:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 913,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "9368:37:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9368:45:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9332:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 917,
                              "nodeType": "ExpressionStatement",
                              "src": "9332:81:0"
                            },
                            {
                              "expression": {
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 918,
                                      "name": "shares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 448,
                                      "src": "9427:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                        "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                      }
                                    },
                                    "id": 920,
                                    "indexExpression": {
                                      "id": 919,
                                      "name": "shareholder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 870,
                                      "src": "9434:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9427:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Share_$427_storage",
                                      "typeString": "struct DividendDistributor.Share storage ref"
                                    }
                                  },
                                  "id": 921,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalExcluded",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 424,
                                  "src": "9427:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 923,
                                          "name": "shares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 448,
                                          "src": "9486:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                            "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                          }
                                        },
                                        "id": 925,
                                        "indexExpression": {
                                          "id": 924,
                                          "name": "shareholder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 870,
                                          "src": "9493:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9486:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Share_$427_storage",
                                          "typeString": "struct DividendDistributor.Share storage ref"
                                        }
                                      },
                                      "id": 926,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 422,
                                      "src": "9486:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 922,
                                    "name": "getCumulativeDividends",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 995,
                                    "src": "9463:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 927,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9463:50:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9427:86:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 929,
                              "nodeType": "ExpressionStatement",
                              "src": "9427:86:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 933,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "distributeDividend",
                  "nameLocation": "9013:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "shareholder",
                        "nameLocation": "9040:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 933,
                        "src": "9032:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9032:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9031:21:0"
                  },
                  "returnParameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9062:0:0"
                  },
                  "scope": 1064,
                  "src": "9004:526:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 978,
                    "nodeType": "Block",
                    "src": "9615:395:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 940,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "9628:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                  "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                }
                              },
                              "id": 942,
                              "indexExpression": {
                                "id": 941,
                                "name": "shareholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 935,
                                "src": "9635:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9628:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Share_$427_storage",
                                "typeString": "struct DividendDistributor.Share storage ref"
                              }
                            },
                            "id": 943,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 422,
                            "src": "9628:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9658:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9628:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 949,
                        "nodeType": "IfStatement",
                        "src": "9625:48:0",
                        "trueBody": {
                          "id": 948,
                          "nodeType": "Block",
                          "src": "9660:13:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9669:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 939,
                              "id": 947,
                              "nodeType": "Return",
                              "src": "9662:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          951
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 951,
                            "mutability": "mutable",
                            "name": "shareholderTotalDividends",
                            "nameLocation": "9692:25:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 978,
                            "src": "9684:33:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 950,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9684:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 958,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 953,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "9743:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                    "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                                  }
                                },
                                "id": 955,
                                "indexExpression": {
                                  "id": 954,
                                  "name": "shareholder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 935,
                                  "src": "9750:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9743:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Share_$427_storage",
                                  "typeString": "struct DividendDistributor.Share storage ref"
                                }
                              },
                              "id": 956,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "9743:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 952,
                            "name": "getCumulativeDividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "9720:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9720:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9684:86:0"
                      },
                      {
                        "assignments": [
                          960
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 960,
                            "mutability": "mutable",
                            "name": "shareholderTotalExcluded",
                            "nameLocation": "9788:24:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 978,
                            "src": "9780:32:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 959,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9780:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 965,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 961,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "9815:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Share_$427_storage_$",
                                "typeString": "mapping(address => struct DividendDistributor.Share storage ref)"
                              }
                            },
                            "id": 963,
                            "indexExpression": {
                              "id": 962,
                              "name": "shareholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "9822:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9815:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Share_$427_storage",
                              "typeString": "struct DividendDistributor.Share storage ref"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalExcluded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 424,
                          "src": "9815:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9780:68:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 966,
                            "name": "shareholderTotalDividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "9863:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 967,
                            "name": "shareholderTotalExcluded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "9892:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9863:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 972,
                        "nodeType": "IfStatement",
                        "src": "9860:70:0",
                        "trueBody": {
                          "id": 971,
                          "nodeType": "Block",
                          "src": "9917:13:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9926:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 939,
                              "id": 970,
                              "nodeType": "Return",
                              "src": "9919:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 975,
                              "name": "shareholderTotalExcluded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 960,
                              "src": "9978:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 973,
                              "name": "shareholderTotalDividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 951,
                              "src": "9948:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "9948:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9948:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 939,
                        "id": 977,
                        "nodeType": "Return",
                        "src": "9941:62:0"
                      }
                    ]
                  },
                  "functionSelector": "28fd3198",
                  "id": 979,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUnpaidEarnings",
                  "nameLocation": "9546:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 935,
                        "mutability": "mutable",
                        "name": "shareholder",
                        "nameLocation": "9572:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "9564:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9564:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9563:21:0"
                  },
                  "returnParameters": {
                    "id": 939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "9606:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9606:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9605:9:0"
                  },
                  "scope": 1064,
                  "src": "9537:473:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "10096:89:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 991,
                              "name": "dividendsPerShareAccuracyFactor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "10146:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 988,
                                  "name": "dividendsPerShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 456,
                                  "src": "10123:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 986,
                                  "name": "share",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 981,
                                  "src": "10113:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "10113:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10113:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "10113:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10113:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 985,
                        "id": 993,
                        "nodeType": "Return",
                        "src": "10106:72:0"
                      }
                    ]
                  },
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCumulativeDividends",
                  "nameLocation": "10026:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 981,
                        "mutability": "mutable",
                        "name": "share",
                        "nameLocation": "10057:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "10049:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 980,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10049:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10048:15:0"
                  },
                  "returnParameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "10087:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10087:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10086:9:0"
                  },
                  "scope": 1064,
                  "src": "10017:168:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1013,
                    "nodeType": "Block",
                    "src": "10246:110:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1000,
                              "name": "shareholderIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "10256:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1002,
                            "indexExpression": {
                              "id": 1001,
                              "name": "shareholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "10275:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10256:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1003,
                              "name": "shareholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10290:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10290:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10256:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1006,
                        "nodeType": "ExpressionStatement",
                        "src": "10256:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1010,
                              "name": "shareholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "10337:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1007,
                              "name": "shareholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10319:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10319:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10319:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1012,
                        "nodeType": "ExpressionStatement",
                        "src": "10319:30:0"
                      }
                    ]
                  },
                  "id": 1014,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addShareholder",
                  "nameLocation": "10201:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 998,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "shareholder",
                        "nameLocation": "10224:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1014,
                        "src": "10216:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10216:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10215:21:0"
                  },
                  "returnParameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10246:0:0"
                  },
                  "scope": 1064,
                  "src": "10192:164:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1050,
                    "nodeType": "Block",
                    "src": "10420:227:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1019,
                              "name": "shareholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10430:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1023,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1020,
                                "name": "shareholderIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 443,
                                "src": "10443:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1022,
                              "indexExpression": {
                                "id": 1021,
                                "name": "shareholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "10462:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10443:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10430:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1024,
                              "name": "shareholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10478:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1029,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1025,
                                  "name": "shareholders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 439,
                                  "src": "10491:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "10491:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10511:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "10491:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10478:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10430:83:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1031,
                        "nodeType": "ExpressionStatement",
                        "src": "10430:83:0"
                      },
                      {
                        "expression": {
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1032,
                              "name": "shareholderIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "10523:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1039,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1033,
                                "name": "shareholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 439,
                                "src": "10542:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1038,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1034,
                                    "name": "shareholders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 439,
                                    "src": "10555:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "10555:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10575:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10555:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10542:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10523:55:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1040,
                              "name": "shareholderIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "10581:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1042,
                            "indexExpression": {
                              "id": 1041,
                              "name": "shareholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1016,
                              "src": "10600:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10581:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10523:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1044,
                        "nodeType": "ExpressionStatement",
                        "src": "10523:89:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1045,
                              "name": "shareholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10622:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "10622:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10622:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1049,
                        "nodeType": "ExpressionStatement",
                        "src": "10622:18:0"
                      }
                    ]
                  },
                  "id": 1051,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeShareholder",
                  "nameLocation": "10372:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1017,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1016,
                        "mutability": "mutable",
                        "name": "shareholder",
                        "nameLocation": "10398:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "10390:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10390:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10389:21:0"
                  },
                  "returnParameters": {
                    "id": 1018,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10420:0:0"
                  },
                  "scope": 1064,
                  "src": "10363:284:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    405
                  ],
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "10744:46:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1059,
                              "name": "dividendToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "10769:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$170",
                                "typeString": "contract IBEP20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IBEP20_$170",
                                "typeString": "contract IBEP20"
                              }
                            ],
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10761:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1057,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10761:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10761:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1056,
                        "id": 1061,
                        "nodeType": "Return",
                        "src": "10754:29:0"
                      }
                    ]
                  },
                  "functionSelector": "7bf7d61b",
                  "id": 1063,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "viewDividendTokenAddress",
                  "nameLocation": "10663:24:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1053,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "10704:8:0"
                  },
                  "parameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10687:2:0"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "10730:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "10722:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10722:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10721:22:0"
                  },
                  "scope": 1064,
                  "src": "10654:136:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3374,
              "src": "4712:6080:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IRewardsPool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1072,
              "linearizedBaseContracts": [
                1072
              ],
              "name": "IRewardsPool",
              "nameLocation": "10805:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "2a50d278",
                  "id": 1071,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferBNBToAddress",
                  "nameLocation": "10833:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "10862:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "10854:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10854:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10881:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "10873:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10873:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10853:35:0"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10897:0:0"
                  },
                  "scope": 1072,
                  "src": "10824:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3374,
              "src": "10795:105:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1074,
                    "name": "IRewardsPool",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1072,
                    "src": "11032:12:0"
                  },
                  "id": 1075,
                  "nodeType": "InheritanceSpecifier",
                  "src": "11032:12:0"
                }
              ],
              "canonicalName": "RewardsPool",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1073,
                "nodeType": "StructuredDocumentation",
                "src": "10903:105:0",
                "text": "@dev Contract to store and distribute BNB rewards accrued through taxes in the parent token contract"
              },
              "fullyImplemented": true,
              "id": 1149,
              "linearizedBaseContracts": [
                1149,
                1072
              ],
              "name": "RewardsPool",
              "nameLocation": "11017:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1078,
                  "libraryName": {
                    "id": 1076,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 83,
                    "src": "11057:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "11051:27:0",
                  "typeName": {
                    "id": 1077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11070:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "11093:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "11085:14:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11085:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nameLocation": "11112:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "11107:16:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11107:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1094,
                    "nodeType": "Block",
                    "src": "11155:77:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "11173:12:0",
                              "subExpression": {
                                "id": 1085,
                                "name": "initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1082,
                                "src": "11174:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1084,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11165:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11165:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1088,
                        "nodeType": "ExpressionStatement",
                        "src": "11165:21:0"
                      },
                      {
                        "id": 1089,
                        "nodeType": "PlaceholderStatement",
                        "src": "11196:1:0"
                      },
                      {
                        "expression": {
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1090,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "11207:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11221:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11207:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1093,
                        "nodeType": "ExpressionStatement",
                        "src": "11207:18:0"
                      }
                    ]
                  },
                  "id": 1095,
                  "name": "initialization",
                  "nameLocation": "11138:14:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1083,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11152:2:0"
                  },
                  "src": "11129:103:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1106,
                    "nodeType": "Block",
                    "src": "11324:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1099,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "11342:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11342:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1101,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1080,
                                "src": "11356:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "11342:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1098,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11334:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11334:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1104,
                        "nodeType": "ExpressionStatement",
                        "src": "11334:29:0"
                      },
                      {
                        "id": 1105,
                        "nodeType": "PlaceholderStatement",
                        "src": "11365:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1096,
                    "nodeType": "StructuredDocumentation",
                    "src": "11239:59:0",
                    "text": "@dev Require the caller to be the parent token contract"
                  },
                  "id": 1107,
                  "name": "onlyToken",
                  "nameLocation": "11312:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11321:2:0"
                  },
                  "src": "11303:70:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1115,
                    "nodeType": "Block",
                    "src": "11395:36:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1110,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "11405:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1111,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11414:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11414:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11405:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1114,
                        "nodeType": "ExpressionStatement",
                        "src": "11405:19:0"
                      }
                    ]
                  },
                  "id": 1116,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11392:2:0"
                  },
                  "returnParameters": {
                    "id": 1109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11395:0:0"
                  },
                  "scope": 1149,
                  "src": "11380:51:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1119,
                    "nodeType": "Block",
                    "src": "11464:2:0",
                    "statements": []
                  },
                  "id": 1120,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11445:2:0"
                  },
                  "returnParameters": {
                    "id": 1118,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11464:0:0"
                  },
                  "scope": 1149,
                  "src": "11438:28:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1071
                  ],
                  "body": {
                    "id": 1147,
                    "nodeType": "Block",
                    "src": "11636:103:0",
                    "statements": [
                      {
                        "assignments": [
                          1132,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1132,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "11652:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1147,
                            "src": "11647:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1131,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "11647:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1142,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11703:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1135,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1123,
                                    "src": "11672:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11664:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1133,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11664:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11664:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "11664:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1138,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "11695:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "11664:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11664:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11646:60:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1144,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "11724:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1143,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11716:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11716:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "11716:16:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1121,
                    "nodeType": "StructuredDocumentation",
                    "src": "11473:65:0",
                    "text": "@dev Transfer the BNB reward from the contract to a recipient"
                  },
                  "functionSelector": "2a50d278",
                  "id": 1148,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1129,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1128,
                        "name": "onlyToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1107,
                        "src": "11626:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11626:9:0"
                    }
                  ],
                  "name": "transferBNBToAddress",
                  "nameLocation": "11552:20:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1127,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "11617:8:0"
                  },
                  "parameters": {
                    "id": 1126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1123,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "11581:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1148,
                        "src": "11573:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11573:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1125,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "11600:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1148,
                        "src": "11592:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1124,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11592:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11572:35:0"
                  },
                  "returnParameters": {
                    "id": 1130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11636:0:0"
                  },
                  "scope": 1149,
                  "src": "11543:196:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3374,
              "src": "11008:733:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1151,
                    "name": "IBEP20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 170,
                    "src": "12648:6:0"
                  },
                  "id": 1152,
                  "nodeType": "InheritanceSpecifier",
                  "src": "12648:6:0"
                },
                {
                  "baseName": {
                    "id": 1153,
                    "name": "Auth",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 302,
                    "src": "12656:4:0"
                  },
                  "id": 1154,
                  "nodeType": "InheritanceSpecifier",
                  "src": "12656:4:0"
                }
              ],
              "canonicalName": "TokifyRisingFloor",
              "contractDependencies": [
                1064,
                1149
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1150,
                "nodeType": "StructuredDocumentation",
                "src": "11744:870:0",
                "text": "@dev this token is backed by BNB, which can be sent to the contract by anyone and can be redeemed by burning the token. \nThere are two BNB pools - the asset pool which is simply the amount of BNB the contract holds, \nand the reward pool, which is the amount of BNB collected through taxes and is stored in a separate contract (RewardsPool).\nWhen burning the token, the amount of BNB given is calculated by taking (token amount)/(circulating supply) and giving that fraction of the asset pool BNB.\nHowever if there is BNB in the rewards pool, that is given first before dipping into the asset pool. This raises the floor price of the token when burning it as less BNB leaves the asset pool.\nThe rewards pool is separated because the owner of the token can also choose to distribute a fraction of the rewards pool at specific points in time to reward holders."
              },
              "fullyImplemented": true,
              "id": 3373,
              "linearizedBaseContracts": [
                3373,
                302,
                170
              ],
              "name": "TokifyRisingFloor",
              "nameLocation": "12627:17:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1157,
                  "libraryName": {
                    "id": 1155,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 83,
                    "src": "12673:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "12667:27:0",
                  "typeName": {
                    "id": 1156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12686:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": true,
                  "functionSelector": "e91f214e",
                  "id": 1164,
                  "mutability": "constant",
                  "name": "MASK",
                  "nameLocation": "12725:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "12701:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12701:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12737:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 1160,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "12737:7:0",
                            "typeDescriptions": {}
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          }
                        ],
                        "id": 1159,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "12732:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12732:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_uint128",
                        "typeString": "type(uint128)"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "max",
                    "nodeType": "MemberAccess",
                    "src": "12732:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8dd95002",
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "WBNB",
                  "nameLocation": "12770:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "12755:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12755:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12777:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "DEAD",
                  "nameLocation": "12833:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "12825:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12825:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12840:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x000000000000000000000000000000000000dEaD"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "ZERO",
                  "nameLocation": "12896:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "12888:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12888:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12903:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x0000000000000000000000000000000000000000"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "DEAD_NON_CHECKSUM",
                  "nameLocation": "12959:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "12951:70:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12951:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12979:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x000000000000000000000000000000000000dEaD"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1179,
                  "mutability": "constant",
                  "name": "_name",
                  "nameLocation": "13045:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13029:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13029:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "546f6b69667920526973696e6720466c6f6f72",
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13053:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9b67dd6f0f11bb69e244bd0778ce1d602955497932138a0c906d8bc2891485ba",
                      "typeString": "literal_string \"Tokify Rising Floor\""
                    },
                    "value": "Tokify Rising Floor"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1182,
                  "mutability": "constant",
                  "name": "_symbol",
                  "nameLocation": "13096:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13080:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13080:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "545246",
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13106:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a60fcebaee63e207242929916a51981c1c28619b8c468829f8d428354b2461fe",
                      "typeString": "literal_string \"TRF\""
                    },
                    "value": "TRF"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1185,
                  "mutability": "constant",
                  "name": "_decimals",
                  "nameLocation": "13132:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13117:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1183,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13117:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "39",
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13144:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_9_by_1",
                      "typeString": "int_const 9"
                    },
                    "value": "9"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "13161:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13153:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13153:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "315f3030305f3030305f3030305f3030305f303030",
                      "id": 1187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13176:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000_by_1",
                        "typeString": "int_const 1000000000000000"
                      },
                      "value": "1_000_000_000_000_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13201:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 1189,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "13207:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "13201:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1191,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13200:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13176:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "7d1db4a5",
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "_maxTxAmount",
                  "nameLocation": "13238:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13223:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13223:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "343030",
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13270:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_400_by_1",
                          "typeString": "int_const 400"
                        },
                        "value": "400"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_400_by_1",
                          "typeString": "int_const 400"
                        }
                      ],
                      "expression": {
                        "id": 1195,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "13253:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "13253:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13253:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "13320:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13291:38:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1202,
                    "keyType": {
                      "id": 1200,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13300:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13291:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1201,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13311:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "13385:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13335:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1208,
                    "keyType": {
                      "id": 1204,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13344:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13335:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 1207,
                      "keyType": {
                        "id": 1205,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13364:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "13355:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 1206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13375:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "isFeeExempt",
                  "nameLocation": "13430:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13404:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1212,
                    "keyType": {
                      "id": 1210,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13413:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13404:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 1211,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "13424:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "isTxLimitExempt",
                  "nameLocation": "13473:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13447:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1216,
                    "keyType": {
                      "id": 1214,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13456:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13447:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 1215,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "13467:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "isDividendExempt",
                  "nameLocation": "13520:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13494:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1220,
                    "keyType": {
                      "id": 1218,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13503:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13494:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 1219,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "13514:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "isExcludedFromPause",
                  "nameLocation": "13568:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13542:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1224,
                    "keyType": {
                      "id": 1222,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13551:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13542:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 1223,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "13562:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1226,
                    "nodeType": "StructuredDocumentation",
                    "src": "13595:66:0",
                    "text": "@dev liquidityFee determines tax to send to the liquidity pool"
                  },
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "liquidityFee",
                  "nameLocation": "13674:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13666:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13689:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "13698:62:0",
                    "text": "@dev rewardsFee determines tax to send to the rewards pool"
                  },
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "rewardsFee",
                  "nameLocation": "13773:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13765:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13765:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13786:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1234,
                    "nodeType": "StructuredDocumentation",
                    "src": "13795:83:0",
                    "text": "@dev backingFee determines tax to send to the asset pool, which backs the token"
                  },
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "backingFee",
                  "nameLocation": "13891:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13883:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13883:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13904:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1238,
                    "nodeType": "StructuredDocumentation",
                    "src": "13913:68:0",
                    "text": "@dev marketingFee determines tax to send to the marketing wallet"
                  },
                  "id": 1241,
                  "mutability": "mutable",
                  "name": "marketingFee",
                  "nameLocation": "13994:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "13986:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13986:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "323030",
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14009:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200_by_1",
                      "typeString": "int_const 200"
                    },
                    "value": "200"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "totalFee",
                  "nameLocation": "14026:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14018:81:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14018:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "id": 1251,
                        "name": "marketingFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "14086:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1248,
                            "name": "backingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "14070:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1245,
                                "name": "rewardsFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1233,
                                "src": "14054:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1243,
                                "name": "liquidityFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1229,
                                "src": "14037:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "14037:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14037:28:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "14037:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14037:44:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "14037:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14037:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1254,
                    "nodeType": "StructuredDocumentation",
                    "src": "14105:70:0",
                    "text": "@dev fee denominator allows taxes to be decimal number percentages"
                  },
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "feeDenominator",
                  "nameLocation": "14188:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14180:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030",
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14205:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "efe25ad2",
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "maxSellFee",
                  "nameLocation": "14231:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14216:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14216:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "35303030",
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14244:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5000_by_1",
                      "typeString": "int_const 5000"
                    },
                    "value": "5000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "bbea13d4",
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "maxSellMultiplier",
                  "nameLocation": "14269:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14254:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14254:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3530303030",
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14289:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000_by_1",
                      "typeString": "int_const 50000"
                    },
                    "value": "50000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3ff942ce",
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "baseTaxesAccumulated",
                  "nameLocation": "14316:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14301:35:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14301:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "94da3e86",
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "sellingTaxAccumulated",
                  "nameLocation": "14357:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14342:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14342:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ca33e64c",
                  "id": 1269,
                  "mutability": "mutable",
                  "name": "autoLiquidityReceiver",
                  "nameLocation": "14401:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14386:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14386:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e96fada2",
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "marketingFeeReceiver",
                  "nameLocation": "14443:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14428:35:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14428:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "generatorFeeReceiver",
                  "nameLocation": "14477:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14469:73:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14469:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307846366246333639333331343930333065643442323132463061373938373233303636393065343865",
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14500:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xF6bF36933149030ed4B212F0a79872306690e48e"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "generatorFee",
                  "nameLocation": "14556:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14548:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14548:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "353030",
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14571:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_500_by_1",
                      "typeString": "int_const 500"
                    },
                    "value": "500"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1278,
                    "nodeType": "StructuredDocumentation",
                    "src": "14582:60:0",
                    "text": "@dev takeFeeActive allows to temporarily pause any taxes"
                  },
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "takeFeeActive",
                  "nameLocation": "14652:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14647:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14647:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "74727565",
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14668:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1284,
                  "mutability": "mutable",
                  "name": "targetLiquidity",
                  "nameLocation": "14688:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14680:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14680:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3235",
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14706:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1287,
                  "mutability": "mutable",
                  "name": "targetLiquidityDenominator",
                  "nameLocation": "14722:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14714:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14714:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14751:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "f887ea40",
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "14780:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14762:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDEXRouter_$385",
                    "typeString": "contract IDEXRouter"
                  },
                  "typeName": {
                    "id": 1289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1288,
                      "name": "IDEXRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 385,
                      "src": "14762:10:0"
                    },
                    "referencedDeclaration": 385,
                    "src": "14762:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDEXRouter_$385",
                      "typeString": "contract IDEXRouter"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a8aa1b31",
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "14807:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14792:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14792:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "rewardsPool",
                  "nameLocation": "14831:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14819:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RewardsPool_$1149",
                    "typeString": "contract RewardsPool"
                  },
                  "typeName": {
                    "id": 1294,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1293,
                      "name": "RewardsPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1149,
                      "src": "14819:11:0"
                    },
                    "referencedDeclaration": 1149,
                    "src": "14819:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RewardsPool_$1149",
                      "typeString": "contract RewardsPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "cce85055",
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "rewardsPoolAddress",
                  "nameLocation": "14863:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14848:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14848:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1300,
                  "mutability": "mutable",
                  "name": "dividendDistributor",
                  "nameLocation": "14909:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14889:39:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                    "typeString": "contract DividendDistributor"
                  },
                  "typeName": {
                    "id": 1299,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1298,
                      "name": "DividendDistributor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1064,
                      "src": "14889:19:0"
                    },
                    "referencedDeclaration": 1064,
                    "src": "14889:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                      "typeString": "contract DividendDistributor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "a26bd13c",
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "dividendDistributorAddress",
                  "nameLocation": "14949:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14934:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14934:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "367ff4a7",
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "assetPoolLockTimestamp",
                  "nameLocation": "14997:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "14982:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14982:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "748a9dc2",
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "assetPoolLockTime",
                  "nameLocation": "15040:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "15025:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15025:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ad84f341",
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "pauseTimestamp",
                  "nameLocation": "15078:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "15063:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15063:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "015cb3ff",
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "pauseTime",
                  "nameLocation": "15113:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "15098:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15098:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1311,
                    "nodeType": "StructuredDocumentation",
                    "src": "15130:186:0",
                    "text": "@dev before processing taxes in BNB, the taxed token is accumulated in the contract to save on gas fees\n @dev the swap to BNB will only occur once the swapThreshold is reached"
                  },
                  "functionSelector": "6ddd1713",
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "swapEnabled",
                  "nameLocation": "15333:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "15321:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15321:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "74727565",
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15347:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0445b667",
                  "id": 1319,
                  "mutability": "mutable",
                  "name": "swapThreshold",
                  "nameLocation": "15372:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "15357:50:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1316,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "15388:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32303030",
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15403:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2000_by_1",
                        "typeString": "int_const 2000"
                      },
                      "value": "2000"
                    },
                    "src": "15388:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e2163851",
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "sellingSwapThreshold",
                  "nameLocation": "15437:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "15422:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15422:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1321,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "15460:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "38303030",
                      "id": 1322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15475:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8000_by_1",
                        "typeString": "int_const 8000"
                      },
                      "value": "8000"
                    },
                    "src": "15460:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "inSwap",
                  "nameLocation": "15501:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "15496:11:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15496:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1337,
                    "nodeType": "Block",
                    "src": "15533:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1328,
                            "name": "inSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1326,
                            "src": "15535:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15544:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "15535:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1331,
                        "nodeType": "ExpressionStatement",
                        "src": "15535:13:0"
                      },
                      {
                        "id": 1332,
                        "nodeType": "PlaceholderStatement",
                        "src": "15550:1:0"
                      },
                      {
                        "expression": {
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1333,
                            "name": "inSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1326,
                            "src": "15553:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15562:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "15553:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1336,
                        "nodeType": "ExpressionStatement",
                        "src": "15553:14:0"
                      }
                    ]
                  },
                  "id": 1338,
                  "name": "swapping",
                  "nameLocation": "15522:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1327,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15530:2:0"
                  },
                  "src": "15513:57:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1510,
                    "nodeType": "Block",
                    "src": "15721:1285:0",
                    "statements": [
                      {
                        "documentation": "@dev set the router address and create pair",
                        "expression": {
                          "id": 1355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1351,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "15787:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDEXRouter_$385",
                              "typeString": "contract IDEXRouter"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1353,
                                "name": "_dexRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "15807:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1352,
                              "name": "IDEXRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "15796:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDEXRouter_$385_$",
                                "typeString": "type(contract IDEXRouter)"
                              }
                            },
                            "id": 1354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15796:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDEXRouter_$385",
                              "typeString": "contract IDEXRouter"
                            }
                          },
                          "src": "15787:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDEXRouter_$385",
                            "typeString": "contract IDEXRouter"
                          }
                        },
                        "id": 1356,
                        "nodeType": "ExpressionStatement",
                        "src": "15787:31:0"
                      },
                      {
                        "expression": {
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1357,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "15828:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1364,
                                "name": "WBNB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1167,
                                "src": "15876:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1367,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "15890:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                      "typeString": "contract TokifyRisingFloor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                      "typeString": "contract TokifyRisingFloor"
                                    }
                                  ],
                                  "id": 1366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15882:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1365,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15882:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15882:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1359,
                                        "name": "router",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1290,
                                        "src": "15847:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                          "typeString": "contract IDEXRouter"
                                        }
                                      },
                                      "id": 1360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "factory",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 332,
                                      "src": "15847:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 1361,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15847:16:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1358,
                                  "name": "IDEXFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 312,
                                  "src": "15835:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IDEXFactory_$312_$",
                                    "typeString": "type(contract IDEXFactory)"
                                  }
                                },
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15835:29:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDEXFactory_$312",
                                  "typeString": "contract IDEXFactory"
                                }
                              },
                              "id": 1363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createPair",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 311,
                              "src": "15835:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address) external returns (address)"
                              }
                            },
                            "id": 1369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15835:61:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15828:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1371,
                        "nodeType": "ExpressionStatement",
                        "src": "15828:68:0"
                      },
                      {
                        "expression": {
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1372,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "15906:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1381,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 1375,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "15926:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                      "typeString": "contract TokifyRisingFloor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                      "typeString": "contract TokifyRisingFloor"
                                    }
                                  ],
                                  "id": 1374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15918:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1373,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15918:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15918:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15906:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1382,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1379,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "15941:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                    "typeString": "contract IDEXRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                    "typeString": "contract IDEXRouter"
                                  }
                                ],
                                "id": 1378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15933:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1377,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15933:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15933:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15906:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1383,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "15952:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15906:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1385,
                        "nodeType": "ExpressionStatement",
                        "src": "15906:58:0"
                      },
                      {
                        "expression": {
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1386,
                            "name": "WBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1167,
                            "src": "15974:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1387,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1290,
                                "src": "15981:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                  "typeString": "contract IDEXRouter"
                                }
                              },
                              "id": 1388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "WETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 337,
                              "src": "15981:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                "typeString": "function () pure external returns (address)"
                              }
                            },
                            "id": 1389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15981:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15974:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1391,
                        "nodeType": "ExpressionStatement",
                        "src": "15974:20:0"
                      },
                      {
                        "documentation": "@dev create the rewards pool to store BNB rewards",
                        "expression": {
                          "id": 1397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1392,
                            "name": "rewardsPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1295,
                            "src": "16068:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RewardsPool_$1149",
                              "typeString": "contract RewardsPool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "16082:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RewardsPool_$1149_$",
                                "typeString": "function () returns (contract RewardsPool)"
                              },
                              "typeName": {
                                "id": 1394,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1393,
                                  "name": "RewardsPool",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1149,
                                  "src": "16086:11:0"
                                },
                                "referencedDeclaration": 1149,
                                "src": "16086:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RewardsPool_$1149",
                                  "typeString": "contract RewardsPool"
                                }
                              }
                            },
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16082:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RewardsPool_$1149",
                              "typeString": "contract RewardsPool"
                            }
                          },
                          "src": "16068:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RewardsPool_$1149",
                            "typeString": "contract RewardsPool"
                          }
                        },
                        "id": 1398,
                        "nodeType": "ExpressionStatement",
                        "src": "16068:31:0"
                      },
                      {
                        "expression": {
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1399,
                            "name": "rewardsPoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "16109:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1402,
                                "name": "rewardsPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1295,
                                "src": "16138:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RewardsPool_$1149",
                                  "typeString": "contract RewardsPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RewardsPool_$1149",
                                  "typeString": "contract RewardsPool"
                                }
                              ],
                              "id": 1401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16130:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1400,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16130:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16130:20:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16109:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1405,
                        "nodeType": "ExpressionStatement",
                        "src": "16109:41:0"
                      },
                      {
                        "documentation": "@dev create the dividend distributor to distribute BNB rewards",
                        "expression": {
                          "id": 1414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1406,
                            "name": "dividendDistributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1300,
                            "src": "16237:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                              "typeString": "contract DividendDistributor"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1410,
                                "name": "_dexRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "16283:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1411,
                                "name": "_rewardTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1344,
                                "src": "16295:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1412,
                                "name": "rewardsPoolAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1297,
                                "src": "16316:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "16259:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_DividendDistributor_$1064_$",
                                "typeString": "function (address,address,address) returns (contract DividendDistributor)"
                              },
                              "typeName": {
                                "id": 1408,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1407,
                                  "name": "DividendDistributor",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1064,
                                  "src": "16263:19:0"
                                },
                                "referencedDeclaration": 1064,
                                "src": "16263:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                  "typeString": "contract DividendDistributor"
                                }
                              }
                            },
                            "id": 1413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16259:76:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                              "typeString": "contract DividendDistributor"
                            }
                          },
                          "src": "16237:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                            "typeString": "contract DividendDistributor"
                          }
                        },
                        "id": 1415,
                        "nodeType": "ExpressionStatement",
                        "src": "16237:98:0"
                      },
                      {
                        "expression": {
                          "id": 1421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1416,
                            "name": "dividendDistributorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1302,
                            "src": "16345:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1419,
                                "name": "dividendDistributor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1300,
                                "src": "16382:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                  "typeString": "contract DividendDistributor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                  "typeString": "contract DividendDistributor"
                                }
                              ],
                              "id": 1418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16374:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1417,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16374:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16374:28:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16345:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1422,
                        "nodeType": "ExpressionStatement",
                        "src": "16345:57:0"
                      },
                      {
                        "expression": {
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1423,
                              "name": "isFeeExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "16414:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1426,
                            "indexExpression": {
                              "expression": {
                                "id": 1424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16426:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16426:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16414:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16440:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16414:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1429,
                        "nodeType": "ExpressionStatement",
                        "src": "16414:30:0"
                      },
                      {
                        "expression": {
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1430,
                              "name": "isExcludedFromPause",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "16454:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1433,
                            "indexExpression": {
                              "expression": {
                                "id": 1431,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16474:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16474:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16454:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16488:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16454:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1436,
                        "nodeType": "ExpressionStatement",
                        "src": "16454:38:0"
                      },
                      {
                        "expression": {
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1437,
                              "name": "isTxLimitExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1217,
                              "src": "16502:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1440,
                            "indexExpression": {
                              "expression": {
                                "id": 1438,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16518:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16518:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16502:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16532:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16502:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1443,
                        "nodeType": "ExpressionStatement",
                        "src": "16502:34:0"
                      },
                      {
                        "expression": {
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1444,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "16546:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1446,
                            "indexExpression": {
                              "id": 1445,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1292,
                              "src": "16563:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16546:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16571:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16546:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1449,
                        "nodeType": "ExpressionStatement",
                        "src": "16546:29:0"
                      },
                      {
                        "expression": {
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1450,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "16585:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1455,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1453,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16610:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                ],
                                "id": 1452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16602:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1451,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16602:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16602:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16585:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16619:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16585:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1458,
                        "nodeType": "ExpressionStatement",
                        "src": "16585:38:0"
                      },
                      {
                        "expression": {
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1459,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "16633:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1461,
                            "indexExpression": {
                              "id": 1460,
                              "name": "DEAD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "16650:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16633:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16658:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16633:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1464,
                        "nodeType": "ExpressionStatement",
                        "src": "16633:29:0"
                      },
                      {
                        "expression": {
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1465,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "16672:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1467,
                            "indexExpression": {
                              "id": 1466,
                              "name": "ZERO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "16689:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16672:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16697:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16672:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1470,
                        "nodeType": "ExpressionStatement",
                        "src": "16672:29:0"
                      },
                      {
                        "expression": {
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1471,
                            "name": "autoLiquidityReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "16713:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1472,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16737:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16737:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16713:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1475,
                        "nodeType": "ExpressionStatement",
                        "src": "16713:34:0"
                      },
                      {
                        "expression": {
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1476,
                            "name": "marketingFeeReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1271,
                            "src": "16757:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1477,
                            "name": "_marketingFeeReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1342,
                            "src": "16780:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16757:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1479,
                        "nodeType": "ExpressionStatement",
                        "src": "16757:44:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1481,
                              "name": "_dexRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1340,
                              "src": "16821:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1482,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "16833:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1480,
                            "name": "approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1619,
                            "src": "16813:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16813:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1484,
                        "nodeType": "ExpressionStatement",
                        "src": "16813:33:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1488,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1292,
                                  "src": "16872:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16864:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1486,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16864:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16864:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1490,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "16879:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1485,
                            "name": "approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1619,
                            "src": "16856:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16856:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1492,
                        "nodeType": "ExpressionStatement",
                        "src": "16856:36:0"
                      },
                      {
                        "expression": {
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1493,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "16902:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1496,
                            "indexExpression": {
                              "expression": {
                                "id": 1494,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16912:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16912:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16902:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1497,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "16926:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16902:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1499,
                        "nodeType": "ExpressionStatement",
                        "src": "16902:36:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16970:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16962:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1501,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16962:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16962:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1505,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "16974:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16974:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1507,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "16986:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1500,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "16953:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16953:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1509,
                        "nodeType": "EmitStatement",
                        "src": "16948:51:0"
                      }
                    ]
                  },
                  "id": 1511,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1347,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15709:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15709:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1349,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1346,
                        "name": "Auth",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 302,
                        "src": "15704:4:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15704:16:0"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "_dexRouter",
                        "nameLocation": "15607:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "15599:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15599:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "_marketingFeeReceiver",
                        "nameLocation": "15635:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "15627:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15627:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1344,
                        "mutability": "mutable",
                        "name": "_rewardTokenAddress",
                        "nameLocation": "15674:19:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "15666:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15666:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15589:114:0"
                  },
                  "returnParameters": {
                    "id": 1350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15721:0:0"
                  },
                  "scope": 3373,
                  "src": "15577:1429:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1514,
                    "nodeType": "Block",
                    "src": "17040:2:0",
                    "statements": []
                  },
                  "id": 1515,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17020:2:0"
                  },
                  "returnParameters": {
                    "id": 1513,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17040:0:0"
                  },
                  "scope": 3373,
                  "src": "17013:29:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    88
                  ],
                  "body": {
                    "id": 1523,
                    "nodeType": "Block",
                    "src": "17113:24:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1521,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "17122:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1520,
                        "id": 1522,
                        "nodeType": "Return",
                        "src": "17115:19:0"
                      }
                    ]
                  },
                  "functionSelector": "18160ddd",
                  "id": 1524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "17058:11:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1517,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17086:8:0"
                  },
                  "parameters": {
                    "id": 1516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17069:2:0"
                  },
                  "returnParameters": {
                    "id": 1520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1519,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1524,
                        "src": "17104:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1518,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17104:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17103:9:0"
                  },
                  "scope": 3373,
                  "src": "17049:88:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    93
                  ],
                  "body": {
                    "id": 1532,
                    "nodeType": "Block",
                    "src": "17201:21:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1530,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1185,
                          "src": "17210:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1529,
                        "id": 1531,
                        "nodeType": "Return",
                        "src": "17203:16:0"
                      }
                    ]
                  },
                  "functionSelector": "313ce567",
                  "id": 1533,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "17151:8:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1526,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17176:8:0"
                  },
                  "parameters": {
                    "id": 1525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17159:2:0"
                  },
                  "returnParameters": {
                    "id": 1529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1528,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1533,
                        "src": "17194:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1527,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "17194:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17193:7:0"
                  },
                  "scope": 3373,
                  "src": "17142:80:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    98
                  ],
                  "body": {
                    "id": 1541,
                    "nodeType": "Block",
                    "src": "17292:19:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1539,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1182,
                          "src": "17301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1538,
                        "id": 1540,
                        "nodeType": "Return",
                        "src": "17294:14:0"
                      }
                    ]
                  },
                  "functionSelector": "95d89b41",
                  "id": 1542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "17236:6:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1535,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17259:8:0"
                  },
                  "parameters": {
                    "id": 1534,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17242:2:0"
                  },
                  "returnParameters": {
                    "id": 1538,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1537,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1542,
                        "src": "17277:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1536,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17277:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17276:15:0"
                  },
                  "scope": 3373,
                  "src": "17227:84:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    103
                  ],
                  "body": {
                    "id": 1550,
                    "nodeType": "Block",
                    "src": "17379:17:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1548,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "17388:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1547,
                        "id": 1549,
                        "nodeType": "Return",
                        "src": "17381:12:0"
                      }
                    ]
                  },
                  "functionSelector": "06fdde03",
                  "id": 1551,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "17325:4:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1544,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17346:8:0"
                  },
                  "parameters": {
                    "id": 1543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17329:2:0"
                  },
                  "returnParameters": {
                    "id": 1547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1551,
                        "src": "17364:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17364:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17363:15:0"
                  },
                  "scope": 3373,
                  "src": "17316:80:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    108
                  ],
                  "body": {
                    "id": 1559,
                    "nodeType": "Block",
                    "src": "17462:17:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1557,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "17471:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1556,
                        "id": 1558,
                        "nodeType": "Return",
                        "src": "17464:12:0"
                      }
                    ]
                  },
                  "functionSelector": "893d20e8",
                  "id": 1560,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOwner",
                  "nameLocation": "17410:8:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1553,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17435:8:0"
                  },
                  "parameters": {
                    "id": 1552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17418:2:0"
                  },
                  "returnParameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1555,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1560,
                        "src": "17453:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17453:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17452:9:0"
                  },
                  "scope": 3373,
                  "src": "17401:78:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    115
                  ],
                  "body": {
                    "id": 1572,
                    "nodeType": "Block",
                    "src": "17559:30:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1568,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "17568:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1570,
                          "indexExpression": {
                            "id": 1569,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "17578:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17568:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1567,
                        "id": 1571,
                        "nodeType": "Return",
                        "src": "17561:25:0"
                      }
                    ]
                  },
                  "functionSelector": "70a08231",
                  "id": 1573,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "17493:9:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1564,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17532:8:0"
                  },
                  "parameters": {
                    "id": 1563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1562,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "17511:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1573,
                        "src": "17503:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1561,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17503:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17502:17:0"
                  },
                  "returnParameters": {
                    "id": 1567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1566,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1573,
                        "src": "17550:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1565,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17550:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17549:9:0"
                  },
                  "scope": 3373,
                  "src": "17484:105:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    133
                  ],
                  "body": {
                    "id": 1589,
                    "nodeType": "Block",
                    "src": "17687:40:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1583,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1209,
                              "src": "17696:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1585,
                            "indexExpression": {
                              "id": 1584,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1575,
                              "src": "17708:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17696:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1587,
                          "indexExpression": {
                            "id": 1586,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1577,
                            "src": "17716:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17696:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1582,
                        "id": 1588,
                        "nodeType": "Return",
                        "src": "17689:35:0"
                      }
                    ]
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "17603:9:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1579,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17660:8:0"
                  },
                  "parameters": {
                    "id": 1578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1575,
                        "mutability": "mutable",
                        "name": "holder",
                        "nameLocation": "17621:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "17613:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17613:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1577,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "17637:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "17629:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17629:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17612:33:0"
                  },
                  "returnParameters": {
                    "id": 1582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1581,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "17678:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1580,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17678:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17677:9:0"
                  },
                  "scope": 3373,
                  "src": "17594:133:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    142
                  ],
                  "body": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "17815:131:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1600,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "17825:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1604,
                              "indexExpression": {
                                "expression": {
                                  "id": 1601,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17837:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "17837:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17825:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1605,
                            "indexExpression": {
                              "id": 1603,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1592,
                              "src": "17849:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17825:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1606,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "17860:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17825:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1608,
                        "nodeType": "ExpressionStatement",
                        "src": "17825:41:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1610,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17890:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17890:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1612,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1592,
                              "src": "17902:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1613,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "17911:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1609,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "17881:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17881:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1615,
                        "nodeType": "EmitStatement",
                        "src": "17876:42:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17935:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1599,
                        "id": 1617,
                        "nodeType": "Return",
                        "src": "17928:11:0"
                      }
                    ]
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "17743:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1596,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17791:8:0"
                  },
                  "parameters": {
                    "id": 1595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "17759:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "17751:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17751:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1594,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "17776:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "17768:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17768:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17750:33:0"
                  },
                  "returnParameters": {
                    "id": 1599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "17809:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1597,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17809:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17808:6:0"
                  },
                  "scope": 3373,
                  "src": "17734:212:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1631,
                    "nodeType": "Block",
                    "src": "18014:54:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1627,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1621,
                              "src": "18039:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1628,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "18048:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1626,
                            "name": "approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1619,
                            "src": "18031:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18031:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1625,
                        "id": 1630,
                        "nodeType": "Return",
                        "src": "18024:37:0"
                      }
                    ]
                  },
                  "functionSelector": "571ac8b0",
                  "id": 1632,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveMax",
                  "nameLocation": "17962:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1621,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "17981:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1632,
                        "src": "17973:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17973:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17972:17:0"
                  },
                  "returnParameters": {
                    "id": 1625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1624,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1632,
                        "src": "18008:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1623,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18008:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18007:6:0"
                  },
                  "scope": 3373,
                  "src": "17953:115:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    124
                  ],
                  "body": {
                    "id": 1649,
                    "nodeType": "Block",
                    "src": "18161:68:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1643,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "18192:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "18192:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1645,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1634,
                              "src": "18204:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1646,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1636,
                              "src": "18215:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1642,
                            "name": "_transferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1874,
                            "src": "18178:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18178:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1641,
                        "id": 1648,
                        "nodeType": "Return",
                        "src": "18171:51:0"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1650,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "18084:8:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1638,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18137:8:0"
                  },
                  "parameters": {
                    "id": 1637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1634,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "18101:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1650,
                        "src": "18093:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18093:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1636,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "18120:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1650,
                        "src": "18112:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1635,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18112:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18092:35:0"
                  },
                  "returnParameters": {
                    "id": 1641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1640,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1650,
                        "src": "18155:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18155:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18154:6:0"
                  },
                  "scope": 3373,
                  "src": "18075:154:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    153
                  ],
                  "body": {
                    "id": 1696,
                    "nodeType": "Block",
                    "src": "18342:254:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1662,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "18355:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1664,
                              "indexExpression": {
                                "id": 1663,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1652,
                                "src": "18367:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18355:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1667,
                            "indexExpression": {
                              "expression": {
                                "id": 1665,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "18375:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "18375:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18355:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1668,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "18390:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18355:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1689,
                        "nodeType": "IfStatement",
                        "src": "18352:179:0",
                        "trueBody": {
                          "id": 1688,
                          "nodeType": "Block",
                          "src": "18403:128:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 1670,
                                      "name": "_allowances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1209,
                                      "src": "18417:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 1674,
                                    "indexExpression": {
                                      "id": 1671,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1652,
                                      "src": "18429:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18417:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1675,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1672,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "18437:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "18437:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18417:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1683,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1656,
                                      "src": "18487:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "496e73756666696369656e7420416c6c6f77616e6365",
                                      "id": 1684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18495:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_3f0ff8cd200538bae802ddf9006bb5040e9e9ddc88045ad2938dcac06977cbf6",
                                        "typeString": "literal_string \"Insufficient Allowance\""
                                      },
                                      "value": "Insufficient Allowance"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_3f0ff8cd200538bae802ddf9006bb5040e9e9ddc88045ad2938dcac06977cbf6",
                                        "typeString": "literal_string \"Insufficient Allowance\""
                                      }
                                    ],
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1676,
                                          "name": "_allowances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1209,
                                          "src": "18451:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(address => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 1678,
                                        "indexExpression": {
                                          "id": 1677,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1652,
                                          "src": "18463:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18451:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1681,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1679,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "18471:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1680,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "18471:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18451:31:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1682,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 82,
                                    "src": "18451:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18451:69:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18417:103:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1687,
                              "nodeType": "ExpressionStatement",
                              "src": "18417:103:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1691,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1652,
                              "src": "18563:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1692,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1654,
                              "src": "18571:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1693,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1656,
                              "src": "18582:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1690,
                            "name": "_transferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1874,
                            "src": "18549:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18549:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1661,
                        "id": 1695,
                        "nodeType": "Return",
                        "src": "18542:47:0"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 1697,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "18245:12:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1658,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18318:8:0"
                  },
                  "parameters": {
                    "id": 1657,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1652,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "18266:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "18258:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1651,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18258:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1654,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "18282:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "18274:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1653,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18274:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1656,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "18301:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "18293:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1655,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18293:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18257:51:0"
                  },
                  "returnParameters": {
                    "id": 1661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1660,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "18336:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1659,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18336:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18335:6:0"
                  },
                  "scope": 3373,
                  "src": "18236:360:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1873,
                    "nodeType": "Block",
                    "src": "18701:1945:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1708,
                            "name": "isPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "18714:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18714:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1726,
                        "nodeType": "IfStatement",
                        "src": "18711:171:0",
                        "trueBody": {
                          "id": 1725,
                          "nodeType": "Block",
                          "src": "18725:157:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 1711,
                                          "name": "isExcludedFromPause",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1225,
                                          "src": "18745:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 1713,
                                        "indexExpression": {
                                          "id": 1712,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1699,
                                          "src": "18765:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18745:27:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "74727565",
                                        "id": 1714,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18776:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "18745:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1720,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 1716,
                                          "name": "isExcludedFromPause",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1225,
                                          "src": "18784:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                            "typeString": "mapping(address => bool)"
                                          }
                                        },
                                        "id": 1718,
                                        "indexExpression": {
                                          "id": 1717,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1701,
                                          "src": "18804:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18784:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "74727565",
                                        "id": 1719,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18818:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "18784:38:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "18745:77:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5741524e494e473a20636f6e747261637420697320696e20706175736520666f72206d61696e74656e616e6365",
                                    "id": 1722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18823:47:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1",
                                      "typeString": "literal_string \"WARNING: contract is in pause for maintenance\""
                                    },
                                    "value": "WARNING: contract is in pause for maintenance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_9a9ade2253a86a67664eb7784d3c23df2ee607bd1540caf5ebb6edb0ec46b9c1",
                                      "typeString": "literal_string \"WARNING: contract is in pause for maintenance\""
                                    }
                                  ],
                                  "id": 1710,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18737:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18737:134:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1724,
                              "nodeType": "ExpressionStatement",
                              "src": "18737:134:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 1727,
                          "name": "inSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "18997:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev if the token is currently being swapped by the contract into BNB, then no taxes apply",
                        "id": 1735,
                        "nodeType": "IfStatement",
                        "src": "18994:63:0",
                        "trueBody": {
                          "id": 1734,
                          "nodeType": "Block",
                          "src": "19004:53:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1729,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1699,
                                    "src": "19028:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1730,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1701,
                                    "src": "19036:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1731,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1703,
                                    "src": "19047:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1728,
                                  "name": "_basicTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1911,
                                  "src": "19013:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) returns (bool)"
                                  }
                                },
                                "id": 1732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19013:41:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 1707,
                              "id": 1733,
                              "nodeType": "Return",
                              "src": "19006:48:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1736,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1701,
                            "src": "19204:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1737,
                            "name": "DEAD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1170,
                            "src": "19217:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19204:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev if the token is being burned then the recipient will be reimbursed with BNB according to the amount in the asset pool",
                        "id": 1745,
                        "nodeType": "IfStatement",
                        "src": "19201:60:0",
                        "trueBody": {
                          "id": 1744,
                          "nodeType": "Block",
                          "src": "19222:39:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1740,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1699,
                                    "src": "19243:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1741,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1703,
                                    "src": "19251:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1739,
                                  "name": "_burnForBNB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3366,
                                  "src": "19231:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) returns (bool)"
                                  }
                                },
                                "id": 1742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19231:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 1707,
                              "id": 1743,
                              "nodeType": "Return",
                              "src": "19224:34:0"
                            }
                          ]
                        }
                      },
                      {
                        "documentation": "@dev check that the size of the transaction is not over the transaction limit",
                        "expression": {
                          "arguments": [
                            {
                              "id": 1747,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "19373:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1748,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1703,
                              "src": "19381:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1746,
                            "name": "checkTxLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "19360:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) view"
                            }
                          },
                          "id": 1749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19360:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1750,
                        "nodeType": "ExpressionStatement",
                        "src": "19360:28:0"
                      },
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1751,
                            "name": "shouldSwapBack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "19641:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19641:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev check if enough of the token has been accumulated in the contract to swap into BNB and if so then swap the token accumulated in contract to BNB\n @dev only do either selling or base tax swap back at a single time",
                        "falseBody": {
                          "condition": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1757,
                              "name": "shouldSwapBackSelling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2446,
                              "src": "19690:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19690:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1763,
                          "nodeType": "IfStatement",
                          "src": "19687:49:0",
                          "trueBody": {
                            "id": 1762,
                            "nodeType": "Block",
                            "src": "19714:22:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1759,
                                    "name": "swapBackSelling",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2505,
                                    "src": "19716:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                      "typeString": "function ()"
                                    }
                                  },
                                  "id": 1760,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19716:17:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1761,
                                "nodeType": "ExpressionStatement",
                                "src": "19716:17:0"
                              }
                            ]
                          }
                        },
                        "id": 1764,
                        "nodeType": "IfStatement",
                        "src": "19638:98:0",
                        "trueBody": {
                          "id": 1756,
                          "nodeType": "Block",
                          "src": "19658:15:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1753,
                                  "name": "swapBack",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2422,
                                  "src": "19660:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19660:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1755,
                              "nodeType": "ExpressionStatement",
                              "src": "19660:10:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1765,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "19747:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1767,
                            "indexExpression": {
                              "id": 1766,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "19757:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19747:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1772,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1703,
                                "src": "19789:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "496e73756666696369656e742042616c616e6365",
                                "id": 1773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19797:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
                                  "typeString": "literal_string \"Insufficient Balance\""
                                },
                                "value": "Insufficient Balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
                                  "typeString": "literal_string \"Insufficient Balance\""
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1768,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "19767:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1770,
                                "indexExpression": {
                                  "id": 1769,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1699,
                                  "src": "19777:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19767:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 82,
                              "src": "19767:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                              }
                            },
                            "id": 1774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19767:53:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19747:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1776,
                        "nodeType": "ExpressionStatement",
                        "src": "19747:73:0"
                      },
                      {
                        "assignments": [
                          1778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1778,
                            "mutability": "mutable",
                            "name": "amountReceived",
                            "nameLocation": "19840:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1873,
                            "src": "19832:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1777,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19832:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1789,
                        "initialValue": {
                          "condition": {
                            "arguments": [
                              {
                                "id": 1780,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1699,
                                "src": "19871:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1779,
                              "name": "shouldTakeFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1951,
                              "src": "19857:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 1781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19857:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 1787,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1703,
                            "src": "19918:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "19857:67:0",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 1783,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1699,
                                "src": "19889:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1784,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "19897:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1785,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1703,
                                "src": "19908:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1782,
                              "name": "takeFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2201,
                              "src": "19881:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,address,uint256) returns (uint256)"
                              }
                            },
                            "id": 1786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19881:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19832:92:0"
                      },
                      {
                        "expression": {
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1790,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "19936:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1792,
                            "indexExpression": {
                              "id": 1791,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1701,
                              "src": "19946:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19936:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1797,
                                "name": "amountReceived",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1778,
                                "src": "19984:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1793,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "19959:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1795,
                                "indexExpression": {
                                  "id": 1794,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1701,
                                  "src": "19969:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19959:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "19959:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19959:40:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19936:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1800,
                        "nodeType": "ExpressionStatement",
                        "src": "19936:63:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1801,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1701,
                            "src": "20012:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1804,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "20033:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              ],
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20025:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1802,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20025:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20025:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "20012:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1815,
                        "nodeType": "IfStatement",
                        "src": "20009:91:0",
                        "trueBody": {
                          "id": 1814,
                          "nodeType": "Block",
                          "src": "20040:60:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1807,
                                  "name": "sellingTaxAccumulated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1267,
                                  "src": "20041:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1810,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1703,
                                      "src": "20091:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1808,
                                      "name": "sellingTaxAccumulated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1267,
                                      "src": "20065:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "20065:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20065:33:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20041:57:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1813,
                              "nodeType": "ExpressionStatement",
                              "src": "20041:57:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 1819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "20230:25:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1816,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "20231:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1818,
                            "indexExpression": {
                              "id": 1817,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "20248:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20231:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev set the new shares of the token holders according to the balances after this transfer has occurred",
                        "id": 1833,
                        "nodeType": "IfStatement",
                        "src": "20227:104:0",
                        "trueBody": {
                          "id": 1832,
                          "nodeType": "Block",
                          "src": "20256:75:0",
                          "statements": [
                            {
                              "clauses": [
                                {
                                  "block": {
                                    "id": 1827,
                                    "nodeType": "Block",
                                    "src": "20318:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 1828,
                                  "nodeType": "TryCatchClause",
                                  "src": "20318:2:0"
                                },
                                {
                                  "block": {
                                    "id": 1829,
                                    "nodeType": "Block",
                                    "src": "20327:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 1830,
                                  "nodeType": "TryCatchClause",
                                  "src": "20321:8:0"
                                }
                              ],
                              "externalCall": {
                                "arguments": [
                                  {
                                    "id": 1822,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1699,
                                    "src": "20291:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1823,
                                      "name": "_balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1203,
                                      "src": "20299:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1825,
                                    "indexExpression": {
                                      "id": 1824,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1699,
                                      "src": "20309:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20299:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1820,
                                    "name": "dividendDistributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "20262:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                      "typeString": "contract DividendDistributor"
                                    }
                                  },
                                  "id": 1821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 659,
                                  "src": "20262:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 1826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20262:55:0",
                                "tryCall": true,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1831,
                              "nodeType": "TryStatement",
                              "src": "20258:71:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 1837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "20343:28:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1834,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "20344:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1836,
                            "indexExpression": {
                              "id": 1835,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1701,
                              "src": "20361:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20344:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1851,
                        "nodeType": "IfStatement",
                        "src": "20340:113:0",
                        "trueBody": {
                          "id": 1850,
                          "nodeType": "Block",
                          "src": "20372:81:0",
                          "statements": [
                            {
                              "clauses": [
                                {
                                  "block": {
                                    "id": 1845,
                                    "nodeType": "Block",
                                    "src": "20440:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 1846,
                                  "nodeType": "TryCatchClause",
                                  "src": "20440:2:0"
                                },
                                {
                                  "block": {
                                    "id": 1847,
                                    "nodeType": "Block",
                                    "src": "20449:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 1848,
                                  "nodeType": "TryCatchClause",
                                  "src": "20443:8:0"
                                }
                              ],
                              "externalCall": {
                                "arguments": [
                                  {
                                    "id": 1840,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1701,
                                    "src": "20407:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1841,
                                      "name": "_balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1203,
                                      "src": "20418:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1843,
                                    "indexExpression": {
                                      "id": 1842,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1701,
                                      "src": "20428:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20418:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1838,
                                    "name": "dividendDistributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "20378:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                      "typeString": "contract DividendDistributor"
                                    }
                                  },
                                  "id": 1839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 659,
                                  "src": "20378:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 1844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20378:61:0",
                                "tryCall": true,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1849,
                              "nodeType": "TryStatement",
                              "src": "20374:77:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1852,
                              "name": "dividendDistributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "20467:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                "typeString": "contract DividendDistributor"
                              }
                            },
                            "id": 1853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isDistributing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 468,
                            "src": "20467:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20467:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1864,
                        "nodeType": "IfStatement",
                        "src": "20464:95:0",
                        "trueBody": {
                          "id": 1863,
                          "nodeType": "Block",
                          "src": "20504:55:0",
                          "statements": [
                            {
                              "clauses": [
                                {
                                  "block": {
                                    "id": 1858,
                                    "nodeType": "Block",
                                    "src": "20547:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 1859,
                                  "nodeType": "TryCatchClause",
                                  "src": "20547:2:0"
                                },
                                {
                                  "block": {
                                    "id": 1860,
                                    "nodeType": "Block",
                                    "src": "20556:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 1861,
                                  "nodeType": "TryCatchClause",
                                  "src": "20550:8:0"
                                }
                              ],
                              "externalCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1855,
                                    "name": "dividendDistributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "20509:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                      "typeString": "contract DividendDistributor"
                                    }
                                  },
                                  "id": 1856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "processDividend",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 854,
                                  "src": "20509:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 1857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20509:37:0",
                                "tryCall": true,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1862,
                              "nodeType": "TryStatement",
                              "src": "20505:53:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1866,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "20584:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1867,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1701,
                              "src": "20592:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1868,
                              "name": "amountReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1778,
                              "src": "20603:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1865,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "20575:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20575:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1870,
                        "nodeType": "EmitStatement",
                        "src": "20570:48:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20635:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1707,
                        "id": 1872,
                        "nodeType": "Return",
                        "src": "20628:11:0"
                      }
                    ]
                  },
                  "id": 1874,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferFrom",
                  "nameLocation": "18612:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1699,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "18634:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1874,
                        "src": "18626:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18626:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "18650:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1874,
                        "src": "18642:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18642:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1703,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "18669:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1874,
                        "src": "18661:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18661:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18625:51:0"
                  },
                  "returnParameters": {
                    "id": 1707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1706,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1874,
                        "src": "18695:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1705,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18695:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18694:6:0"
                  },
                  "scope": 3373,
                  "src": "18603:2043:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1910,
                    "nodeType": "Block",
                    "src": "20752:228:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1885,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "20762:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1887,
                            "indexExpression": {
                              "id": 1886,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1876,
                              "src": "20772:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20762:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1892,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1880,
                                "src": "20804:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "496e73756666696369656e742042616c616e6365",
                                "id": 1893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20812:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
                                  "typeString": "literal_string \"Insufficient Balance\""
                                },
                                "value": "Insufficient Balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
                                  "typeString": "literal_string \"Insufficient Balance\""
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1888,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "20782:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1890,
                                "indexExpression": {
                                  "id": 1889,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1876,
                                  "src": "20792:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20782:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 82,
                              "src": "20782:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                              }
                            },
                            "id": 1894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20782:53:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20762:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1896,
                        "nodeType": "ExpressionStatement",
                        "src": "20762:73:0"
                      },
                      {
                        "expression": {
                          "id": 1906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1897,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "20845:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1899,
                            "indexExpression": {
                              "id": 1898,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1878,
                              "src": "20855:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20845:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1904,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1880,
                                "src": "20893:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 1900,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "20868:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1902,
                                "indexExpression": {
                                  "id": 1901,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1878,
                                  "src": "20878:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20868:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "20868:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20868:32:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20845:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1907,
                        "nodeType": "ExpressionStatement",
                        "src": "20845:55:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20969:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1884,
                        "id": 1909,
                        "nodeType": "Return",
                        "src": "20962:11:0"
                      }
                    ]
                  },
                  "id": 1911,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_basicTransfer",
                  "nameLocation": "20662:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1876,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "20685:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1911,
                        "src": "20677:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20677:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1878,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "20701:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1911,
                        "src": "20693:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1877,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20693:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1880,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "20720:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1911,
                        "src": "20712:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1879,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20712:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20676:51:0"
                  },
                  "returnParameters": {
                    "id": 1884,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1883,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1911,
                        "src": "20746:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1882,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "20746:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20745:6:0"
                  },
                  "scope": 3373,
                  "src": "20653:327:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1929,
                    "nodeType": "Block",
                    "src": "21055:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1919,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1915,
                                  "src": "21073:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 1920,
                                  "name": "_maxTxAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "21083:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21073:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 1922,
                                  "name": "isTxLimitExempt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1217,
                                  "src": "21099:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1924,
                                "indexExpression": {
                                  "id": 1923,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1913,
                                  "src": "21115:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21099:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "21073:49:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5458204c696d6974204578636565646564",
                              "id": 1926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21124:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99",
                                "typeString": "literal_string \"TX Limit Exceeded\""
                              },
                              "value": "TX Limit Exceeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0e0fba3a3e71e7540d6bafb41664325ad5efcc32608bd842abe1276a8de42f99",
                                "typeString": "literal_string \"TX Limit Exceeded\""
                              }
                            ],
                            "id": 1918,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21065:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21065:79:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1928,
                        "nodeType": "ExpressionStatement",
                        "src": "21065:79:0"
                      }
                    ]
                  },
                  "id": 1930,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkTxLimit",
                  "nameLocation": "20996:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1913,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "21017:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1930,
                        "src": "21009:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1912,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21009:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1915,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "21033:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1930,
                        "src": "21025:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1914,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21025:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21008:32:0"
                  },
                  "returnParameters": {
                    "id": 1917,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21055:0:0"
                  },
                  "scope": 3373,
                  "src": "20987:164:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1950,
                    "nodeType": "Block",
                    "src": "21317:118:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1938,
                            "name": "takeFeeActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1281,
                            "src": "21331:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 1939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21348:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "21331:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1944,
                        "nodeType": "IfStatement",
                        "src": "21327:65:0",
                        "trueBody": {
                          "id": 1943,
                          "nodeType": "Block",
                          "src": "21355:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21376:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1937,
                              "id": 1942,
                              "nodeType": "Return",
                              "src": "21369:12:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "21408:20:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1945,
                              "name": "isFeeExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "21409:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1947,
                            "indexExpression": {
                              "id": 1946,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1933,
                              "src": "21421:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21409:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1937,
                        "id": 1949,
                        "nodeType": "Return",
                        "src": "21401:27:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1931,
                    "nodeType": "StructuredDocumentation",
                    "src": "21158:86:0",
                    "text": "@dev check if taking fee is active and if yes if the sender is exempt from the fee"
                  },
                  "id": 1951,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "shouldTakeFee",
                  "nameLocation": "21258:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1934,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1933,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "21280:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1951,
                        "src": "21272:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1932,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21272:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21271:16:0"
                  },
                  "returnParameters": {
                    "id": 1937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1936,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1951,
                        "src": "21311:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1935,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "21311:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21310:6:0"
                  },
                  "scope": 3373,
                  "src": "21249:186:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2002,
                    "nodeType": "Block",
                    "src": "21669:512:0",
                    "statements": [
                      {
                        "assignments": [
                          1958
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1958,
                            "mutability": "mutable",
                            "name": "sellMultiplier",
                            "nameLocation": "21687:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2002,
                            "src": "21679:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1957,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21679:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1962,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1960,
                              "name": "feeDenominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1257,
                              "src": "21723:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1959,
                            "name": "getCurrentGapRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "21704:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21704:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21679:59:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1963,
                            "name": "sellMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1958,
                            "src": "21751:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1964,
                            "name": "feeDenominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1257,
                            "src": "21769:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21751:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1971,
                        "nodeType": "IfStatement",
                        "src": "21748:92:0",
                        "trueBody": {
                          "id": 1970,
                          "nodeType": "Block",
                          "src": "21784:56:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1966,
                                  "name": "sellMultiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1958,
                                  "src": "21798:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1967,
                                  "name": "feeDenominator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1257,
                                  "src": "21815:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21798:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1969,
                              "nodeType": "ExpressionStatement",
                              "src": "21798:31:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1972,
                            "name": "sellMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1958,
                            "src": "21852:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1973,
                            "name": "maxSellMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "21870:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21852:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1980,
                        "nodeType": "IfStatement",
                        "src": "21849:98:0",
                        "trueBody": {
                          "id": 1979,
                          "nodeType": "Block",
                          "src": "21888:59:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1977,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1975,
                                  "name": "sellMultiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1958,
                                  "src": "21902:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1976,
                                  "name": "maxSellMultiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1263,
                                  "src": "21919:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21902:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1978,
                              "nodeType": "ExpressionStatement",
                              "src": "21902:34:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1982
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1982,
                            "mutability": "mutable",
                            "name": "sellFee",
                            "nameLocation": "21964:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2002,
                            "src": "21956:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1981,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21956:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1990,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1988,
                              "name": "feeDenominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1257,
                              "src": "22007:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1985,
                                  "name": "sellMultiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1958,
                                  "src": "21987:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1983,
                                  "name": "totalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1253,
                                  "src": "21974:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "21974:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21974:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "21974:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21974:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21956:66:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1991,
                            "name": "sellFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1982,
                            "src": "22085:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1992,
                            "name": "maxSellFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "22095:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22085:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev allow a maximum sell fee of 5000",
                        "id": 1999,
                        "nodeType": "IfStatement",
                        "src": "22082:69:0",
                        "trueBody": {
                          "id": 1998,
                          "nodeType": "Block",
                          "src": "22106:45:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1994,
                                  "name": "sellFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1982,
                                  "src": "22120:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1995,
                                  "name": "maxSellFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1260,
                                  "src": "22130:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22120:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1997,
                              "nodeType": "ExpressionStatement",
                              "src": "22120:20:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2000,
                          "name": "sellFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1982,
                          "src": "22167:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1956,
                        "id": 2001,
                        "nodeType": "Return",
                        "src": "22160:14:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1952,
                    "nodeType": "StructuredDocumentation",
                    "src": "21442:160:0",
                    "text": "@dev multiply fee by selling multiplier if person is selling the token\n @dev sell multiplier is set depending on the current gap ratio proportionally"
                  },
                  "functionSelector": "2138ce01",
                  "id": 2003,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSellMultipliedFee",
                  "nameLocation": "21616:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21636:2:0"
                  },
                  "returnParameters": {
                    "id": 1956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1955,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2003,
                        "src": "21660:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1954,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21660:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21659:9:0"
                  },
                  "scope": 3373,
                  "src": "21607:574:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2079,
                    "nodeType": "Block",
                    "src": "22365:544:0",
                    "statements": [
                      {
                        "assignments": [
                          2013
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2013,
                            "mutability": "mutable",
                            "name": "routerPair",
                            "nameLocation": "22384:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2079,
                            "src": "22375:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDEXPair_$327",
                              "typeString": "contract IDEXPair"
                            },
                            "typeName": {
                              "id": 2012,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2011,
                                "name": "IDEXPair",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 327,
                                "src": "22375:8:0"
                              },
                              "referencedDeclaration": 327,
                              "src": "22375:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDEXPair_$327",
                                "typeString": "contract IDEXPair"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2017,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2015,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1292,
                              "src": "22406:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2014,
                            "name": "IDEXPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "22397:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDEXPair_$327_$",
                              "typeString": "type(contract IDEXPair)"
                            }
                          },
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22397:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDEXPair_$327",
                            "typeString": "contract IDEXPair"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22375:36:0"
                      },
                      {
                        "assignments": [
                          2019
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2019,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "22429:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2079,
                            "src": "22421:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2018,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22421:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2023,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2020,
                              "name": "routerPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "22438:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDEXPair_$327",
                                "typeString": "contract IDEXPair"
                              }
                            },
                            "id": 2021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 326,
                            "src": "22438:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22438:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22421:36:0"
                      },
                      {
                        "assignments": [
                          2025
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2025,
                            "mutability": "mutable",
                            "name": "reservesBNB",
                            "nameLocation": "22475:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2079,
                            "src": "22467:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2024,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22467:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2026,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22467:19:0"
                      },
                      {
                        "assignments": [
                          2028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2028,
                            "mutability": "mutable",
                            "name": "reservesToken",
                            "nameLocation": "22504:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2079,
                            "src": "22496:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2027,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22496:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2029,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22496:21:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2030,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2019,
                            "src": "22530:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2031,
                            "name": "WBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1167,
                            "src": "22540:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22530:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2042,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2019,
                              "src": "22637:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 2045,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "22655:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                ],
                                "id": 2044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22647:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2043,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22647:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22647:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "22637:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2057,
                          "nodeType": "IfStatement",
                          "src": "22633:110:0",
                          "trueBody": {
                            "id": 2056,
                            "nodeType": "Block",
                            "src": "22662:81:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "components": [
                                      {
                                        "id": 2048,
                                        "name": "reservesToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2028,
                                        "src": "22677:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 2049,
                                        "name": "reservesBNB",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2025,
                                        "src": "22692:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      null
                                    ],
                                    "id": 2050,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "TupleExpression",
                                    "src": "22676:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                                      "typeString": "tuple(uint256,uint256,)"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 2051,
                                        "name": "routerPair",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2013,
                                        "src": "22708:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IDEXPair_$327",
                                          "typeString": "contract IDEXPair"
                                        }
                                      },
                                      "id": 2052,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getReserves",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 321,
                                      "src": "22708:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                                      }
                                    },
                                    "id": 2053,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22708:24:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                      "typeString": "tuple(uint112,uint112,uint32)"
                                    }
                                  },
                                  "src": "22676:56:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2055,
                                "nodeType": "ExpressionStatement",
                                "src": "22676:56:0"
                              }
                            ]
                          }
                        },
                        "id": 2058,
                        "nodeType": "IfStatement",
                        "src": "22527:216:0",
                        "trueBody": {
                          "id": 2041,
                          "nodeType": "Block",
                          "src": "22546:81:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 2039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 2033,
                                      "name": "reservesBNB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2025,
                                      "src": "22561:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 2034,
                                      "name": "reservesToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2028,
                                      "src": "22574:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    null
                                  ],
                                  "id": 2035,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "22560:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                                    "typeString": "tuple(uint256,uint256,)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2036,
                                      "name": "routerPair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2013,
                                      "src": "22592:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IDEXPair_$327",
                                        "typeString": "contract IDEXPair"
                                      }
                                    },
                                    "id": 2037,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getReserves",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 321,
                                    "src": "22592:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                      "typeString": "function () view external returns (uint112,uint112,uint32)"
                                    }
                                  },
                                  "id": 2038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22592:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                                    "typeString": "tuple(uint112,uint112,uint32)"
                                  }
                                },
                                "src": "22560:56:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2040,
                              "nodeType": "ExpressionStatement",
                              "src": "22560:56:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2060
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2060,
                            "mutability": "mutable",
                            "name": "gapRatio",
                            "nameLocation": "22760:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2079,
                            "src": "22752:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2059,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22752:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2076,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2072,
                                    "name": "getAmountBNBInAssetPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3005,
                                    "src": "22850:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 2073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22850:25:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2070,
                                  "name": "reservesToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2028,
                                  "src": "22832:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "22832:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22832:44:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2066,
                                      "name": "reservesBNB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2025,
                                      "src": "22814:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2063,
                                        "name": "getCirculatingSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2932,
                                        "src": "22787:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 2064,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22787:22:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2065,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "22787:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22787:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2061,
                                  "name": "denominator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2006,
                                  "src": "22771:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "22771:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22771:56:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "22771:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22771:106:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22752:125:0"
                      },
                      {
                        "expression": {
                          "id": 2077,
                          "name": "gapRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2060,
                          "src": "22894:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2010,
                        "id": 2078,
                        "nodeType": "Return",
                        "src": "22887:15:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2004,
                    "nodeType": "StructuredDocumentation",
                    "src": "22188:93:0",
                    "text": "@dev check ratio of LP price and the floor price determined by the BNB held in asset pool"
                  },
                  "functionSelector": "c8e02934",
                  "id": 2080,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentGapRatio",
                  "nameLocation": "22295:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2007,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2006,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "22322:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2080,
                        "src": "22314:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2005,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22314:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22313:21:0"
                  },
                  "returnParameters": {
                    "id": 2010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2009,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2080,
                        "src": "22356:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22356:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22355:9:0"
                  },
                  "scope": 3373,
                  "src": "22286:623:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2096,
                    "nodeType": "Block",
                    "src": "23047:86:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 2088,
                          "name": "selling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2083,
                          "src": "23060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2093,
                        "nodeType": "IfStatement",
                        "src": "23057:45:0",
                        "trueBody": {
                          "id": 2092,
                          "nodeType": "Block",
                          "src": "23068:34:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2089,
                                  "name": "getSellMultipliedFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2003,
                                  "src": "23077:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23077:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 2087,
                              "id": 2091,
                              "nodeType": "Return",
                              "src": "23070:29:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2094,
                          "name": "totalFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "23118:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2087,
                        "id": 2095,
                        "nodeType": "Return",
                        "src": "23111:15:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2081,
                    "nodeType": "StructuredDocumentation",
                    "src": "22915:62:0",
                    "text": "@dev calculae the total fee to be taken on the transaction"
                  },
                  "functionSelector": "f1f3bca3",
                  "id": 2097,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalFee",
                  "nameLocation": "22991:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "selling",
                        "nameLocation": "23008:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "23003:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2082,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "23003:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23002:14:0"
                  },
                  "returnParameters": {
                    "id": 2087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2086,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2097,
                        "src": "23038:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23038:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23037:9:0"
                  },
                  "scope": 3373,
                  "src": "22982:151:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2200,
                    "nodeType": "Block",
                    "src": "23339:703:0",
                    "statements": [
                      {
                        "assignments": [
                          2110
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2110,
                            "mutability": "mutable",
                            "name": "selling",
                            "nameLocation": "23354:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2200,
                            "src": "23349:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2109,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "23349:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2114,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2111,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2102,
                            "src": "23364:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2112,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "23376:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "23364:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23349:31:0"
                      },
                      {
                        "assignments": [
                          2116
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2116,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "23398:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2200,
                            "src": "23390:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2115,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23390:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2126,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2124,
                              "name": "feeDenominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1257,
                              "src": "23447:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2120,
                                      "name": "selling",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2110,
                                      "src": "23433:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 2119,
                                    "name": "getTotalFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2097,
                                    "src": "23421:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_uint256_$",
                                      "typeString": "function (bool) view returns (uint256)"
                                    }
                                  },
                                  "id": 2121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23421:20:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2117,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2104,
                                  "src": "23410:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "23410:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23410:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "23410:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23410:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23390:72:0"
                      },
                      {
                        "condition": {
                          "id": 2127,
                          "name": "selling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2110,
                          "src": "23476:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2167,
                          "nodeType": "Block",
                          "src": "23776:83:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 2165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2160,
                                  "name": "baseTaxesAccumulated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1265,
                                  "src": "23790:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2163,
                                      "name": "feeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2116,
                                      "src": "23838:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2161,
                                      "name": "baseTaxesAccumulated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1265,
                                      "src": "23813:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2162,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "23813:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23813:35:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23790:58:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2166,
                              "nodeType": "ExpressionStatement",
                              "src": "23790:58:0"
                            }
                          ]
                        },
                        "id": 2168,
                        "nodeType": "IfStatement",
                        "src": "23472:387:0",
                        "trueBody": {
                          "id": 2159,
                          "nodeType": "Block",
                          "src": "23485:285:0",
                          "statements": [
                            {
                              "assignments": [
                                2129
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2129,
                                  "mutability": "mutable",
                                  "name": "baseFee",
                                  "nameLocation": "23507:7:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2159,
                                  "src": "23499:15:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2128,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23499:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2137,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2135,
                                    "name": "feeDenominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1257,
                                    "src": "23542:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2132,
                                        "name": "totalFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1253,
                                        "src": "23528:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2130,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2104,
                                        "src": "23517:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2131,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 44,
                                      "src": "23517:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2133,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "23517:20:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "23517:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23517:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23499:58:0"
                            },
                            {
                              "assignments": [
                                2139
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2139,
                                  "mutability": "mutable",
                                  "name": "sellingFee",
                                  "nameLocation": "23579:10:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2159,
                                  "src": "23571:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2138,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23571:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2144,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2142,
                                    "name": "baseFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2129,
                                    "src": "23606:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2140,
                                    "name": "feeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2116,
                                    "src": "23592:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30,
                                  "src": "23592:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23592:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23571:43:0"
                            },
                            {
                              "expression": {
                                "id": 2150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2145,
                                  "name": "sellingTaxAccumulated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1267,
                                  "src": "23628:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2148,
                                      "name": "sellingFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2139,
                                      "src": "23678:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2146,
                                      "name": "sellingTaxAccumulated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1267,
                                      "src": "23652:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "23652:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23652:37:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23628:61:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2151,
                              "nodeType": "ExpressionStatement",
                              "src": "23628:61:0"
                            },
                            {
                              "expression": {
                                "id": 2157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2152,
                                  "name": "baseTaxesAccumulated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1265,
                                  "src": "23703:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2155,
                                      "name": "baseFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2129,
                                      "src": "23751:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2153,
                                      "name": "baseTaxesAccumulated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1265,
                                      "src": "23726:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "23726:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2156,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23726:33:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23703:56:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2158,
                              "nodeType": "ExpressionStatement",
                              "src": "23703:56:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2169,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "23870:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2174,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 2172,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "23888:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                ],
                                "id": 2171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23880:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2170,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23880:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23880:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23870:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2182,
                                "name": "feeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2116,
                                "src": "23926:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 2175,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "23897:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2180,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 2178,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "23915:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                        "typeString": "contract TokifyRisingFloor"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                        "typeString": "contract TokifyRisingFloor"
                                      }
                                    ],
                                    "id": 2177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "23907:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2176,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "23907:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "23907:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23897:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "23897:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23897:39:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23870:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2185,
                        "nodeType": "ExpressionStatement",
                        "src": "23870:66:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2187,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2100,
                              "src": "23962:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2190,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "23978:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                ],
                                "id": 2189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23970:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2188,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23970:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23970:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2192,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2116,
                              "src": "23985:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2186,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "23953:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23953:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2194,
                        "nodeType": "EmitStatement",
                        "src": "23948:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2197,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2116,
                              "src": "24025:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2195,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2104,
                              "src": "24014:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "24014:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24014:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2108,
                        "id": 2199,
                        "nodeType": "Return",
                        "src": "24007:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2098,
                    "nodeType": "StructuredDocumentation",
                    "src": "23139:101:0",
                    "text": "@dev figure out the amount transferred when taxes are deducted and add the taxes to this contract"
                  },
                  "id": 2201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "takeFee",
                  "nameLocation": "23254:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2100,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "23270:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2201,
                        "src": "23262:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23262:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2102,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "23286:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2201,
                        "src": "23278:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2101,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23278:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2104,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "23304:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2201,
                        "src": "23296:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23296:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23261:50:0"
                  },
                  "returnParameters": {
                    "id": 2108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2107,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2201,
                        "src": "23330:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23330:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23329:9:0"
                  },
                  "scope": 3373,
                  "src": "23245:797:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2224,
                    "nodeType": "Block",
                    "src": "24104:156:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 2209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2206,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "24121:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "24121:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "id": 2208,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1292,
                                    "src": "24135:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "24121:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 2212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "24151:11:0",
                                  "subExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2210,
                                      "name": "isPaused",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3098,
                                      "src": "24152:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                        "typeString": "function () view returns (bool)"
                                      }
                                    },
                                    "id": 2211,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24152:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "24121:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 2215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "24174:7:0",
                                "subExpression": {
                                  "id": 2214,
                                  "name": "inSwap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1326,
                                  "src": "24175:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "24121:60:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 2217,
                              "name": "swapEnabled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1314,
                              "src": "24193:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "24121:83:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2219,
                              "name": "baseTaxesAccumulated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "24216:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2220,
                              "name": "swapThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1319,
                              "src": "24240:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "24216:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24121:132:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2205,
                        "id": 2223,
                        "nodeType": "Return",
                        "src": "24114:139:0"
                      }
                    ]
                  },
                  "id": 2225,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "shouldSwapBack",
                  "nameLocation": "24058:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24072:2:0"
                  },
                  "returnParameters": {
                    "id": 2205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2225,
                        "src": "24098:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2203,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "24098:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24097:6:0"
                  },
                  "scope": 3373,
                  "src": "24049:211:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2421,
                    "nodeType": "Block",
                    "src": "24516:2186:0",
                    "statements": [
                      {
                        "assignments": [
                          2232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2232,
                            "mutability": "mutable",
                            "name": "dynamicLiquidityFee",
                            "nameLocation": "24534:19:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "24526:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2231,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "24526:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2240,
                        "initialValue": {
                          "condition": {
                            "arguments": [
                              {
                                "id": 2234,
                                "name": "targetLiquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1284,
                                "src": "24572:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2235,
                                "name": "targetLiquidityDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1287,
                                "src": "24589:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2233,
                              "name": "isOverLiquified",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2959,
                              "src": "24556:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256,uint256) view returns (bool)"
                              }
                            },
                            "id": 2236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24556:60:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2238,
                            "name": "liquidityFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "24623:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "24556:79:0",
                          "trueExpression": {
                            "hexValue": "30",
                            "id": 2237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24619:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24526:109:0"
                      },
                      {
                        "assignments": [
                          2242
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2242,
                            "mutability": "mutable",
                            "name": "amountToLiquify",
                            "nameLocation": "24653:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "24645:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2241,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "24645:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2253,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 2251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24728:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2248,
                                  "name": "totalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1253,
                                  "src": "24714:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2245,
                                      "name": "dynamicLiquidityFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2232,
                                      "src": "24689:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2243,
                                      "name": "swapThreshold",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1319,
                                      "src": "24671:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "24671:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "24671:38:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "24671:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24671:52:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "24671:56:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24671:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24645:85:0"
                      },
                      {
                        "assignments": [
                          2255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2255,
                            "mutability": "mutable",
                            "name": "amountToSwap",
                            "nameLocation": "24748:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "24740:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2254,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "24740:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2260,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2258,
                              "name": "amountToLiquify",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2242,
                              "src": "24781:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2256,
                              "name": "swapThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1319,
                              "src": "24763:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "24763:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24763:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24740:57:0"
                      },
                      {
                        "assignments": [
                          2265
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2265,
                            "mutability": "mutable",
                            "name": "path",
                            "nameLocation": "24910:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "24893:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2263,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24893:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2264,
                              "nodeType": "ArrayTypeName",
                              "src": "24893:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev set the path through which the contract exchanges the token to BNB",
                        "id": 2271,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 2269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24931:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "24917:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2266,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24921:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2267,
                              "nodeType": "ArrayTypeName",
                              "src": "24921:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24917:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24893:40:0"
                      },
                      {
                        "expression": {
                          "id": 2279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2272,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "24943:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2274,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 2273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24948:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "24943:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2277,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "24961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              ],
                              "id": 2276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24953:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2275,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24953:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24953:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24943:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2280,
                        "nodeType": "ExpressionStatement",
                        "src": "24943:23:0"
                      },
                      {
                        "expression": {
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2281,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "24976:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2283,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 2282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24981:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "24976:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2284,
                            "name": "WBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1167,
                            "src": "24986:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24976:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2286,
                        "nodeType": "ExpressionStatement",
                        "src": "24976:14:0"
                      },
                      {
                        "assignments": [
                          2288
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2288,
                            "mutability": "mutable",
                            "name": "balanceBefore",
                            "nameLocation": "25008:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "25000:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2287,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25000:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2294,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2291,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "25032:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              ],
                              "id": 2290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25024:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2289,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25024:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25024:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "25024:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25000:45:0"
                      },
                      {
                        "documentation": "@dev exchange the token for BNB",
                        "expression": {
                          "arguments": [
                            {
                              "id": 2298,
                              "name": "amountToSwap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2255,
                              "src": "25172:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25198:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 2300,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "25213:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2303,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "25239:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                ],
                                "id": 2302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25231:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2301,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25231:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25231:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2305,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "25258:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "25258:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2295,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "25101:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                "typeString": "contract IDEXRouter"
                              }
                            },
                            "id": 2297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 384,
                            "src": "25101:57:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 2307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25101:182:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2308,
                        "nodeType": "ExpressionStatement",
                        "src": "25101:182:0"
                      },
                      {
                        "expression": {
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2309,
                            "name": "baseTaxesAccumulated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "25294:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2317,
                                "name": "sellingTaxAccumulated",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1267,
                                "src": "25346:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2313,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "25335:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                          "typeString": "contract TokifyRisingFloor"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                          "typeString": "contract TokifyRisingFloor"
                                        }
                                      ],
                                      "id": 2312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "25327:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2311,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "25327:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "25327:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2310,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1573,
                                  "src": "25317:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25317:24:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30,
                              "src": "25317:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25317:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25294:74:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2320,
                        "nodeType": "ExpressionStatement",
                        "src": "25294:74:0"
                      },
                      {
                        "assignments": [
                          2323
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2323,
                            "mutability": "mutable",
                            "name": "amountBNB",
                            "nameLocation": "25452:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "25444:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2322,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25444:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev caluculate how much new BNB has been converted",
                        "id": 2332,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2330,
                              "name": "balanceBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2288,
                              "src": "25490:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2326,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "25472:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                      "typeString": "contract TokifyRisingFloor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                      "typeString": "contract TokifyRisingFloor"
                                    }
                                  ],
                                  "id": 2325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "25464:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2324,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "25464:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25464:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "25464:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "25464:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25464:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25444:60:0"
                      },
                      {
                        "assignments": [
                          2334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2334,
                            "mutability": "mutable",
                            "name": "totalBNBFee",
                            "nameLocation": "25524:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "25516:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2333,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25516:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2342,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "32",
                                  "id": 2339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "25575:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "expression": {
                                  "id": 2337,
                                  "name": "dynamicLiquidityFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2232,
                                  "src": "25551:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "25551:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25551:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2335,
                              "name": "totalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1253,
                              "src": "25538:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "25538:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25538:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25516:62:0"
                      },
                      {
                        "assignments": [
                          2345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2345,
                            "mutability": "mutable",
                            "name": "amountBNBLiquidity",
                            "nameLocation": "25706:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "25698:26:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2344,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25698:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev since adding to liquidity pool requires both BNB and the token, we only convert half of it",
                        "id": 2356,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 2354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25783:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2351,
                                  "name": "totalBNBFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2334,
                                  "src": "25766:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2348,
                                      "name": "dynamicLiquidityFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2232,
                                      "src": "25741:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2346,
                                      "name": "amountBNB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2323,
                                      "src": "25727:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "25727:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "25727:34:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "25727:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25727:51:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "25727:55:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25727:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25698:87:0"
                      },
                      {
                        "assignments": [
                          2358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2358,
                            "mutability": "mutable",
                            "name": "amountBNBMarketing",
                            "nameLocation": "25803:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "25795:26:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2357,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25795:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2366,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2364,
                              "name": "totalBNBFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2334,
                              "src": "25856:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2361,
                                  "name": "marketingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1241,
                                  "src": "25838:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2359,
                                  "name": "amountBNB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2323,
                                  "src": "25824:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "25824:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25824:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "25824:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25824:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25795:73:0"
                      },
                      {
                        "assignments": [
                          2368
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2368,
                            "mutability": "mutable",
                            "name": "amountBNBReflection",
                            "nameLocation": "25886:19:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2421,
                            "src": "25878:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2367,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25878:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2376,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2374,
                              "name": "totalBNBFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2334,
                              "src": "25938:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2371,
                                  "name": "rewardsFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1233,
                                  "src": "25922:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2369,
                                  "name": "amountBNB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2323,
                                  "src": "25908:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "25908:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25908:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "25908:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25908:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25878:72:0"
                      },
                      {
                        "documentation": "@dev there is no value here for the backing fee in BNB, since it would be in the contract after conversion to BNB anyway",
                        "expression": {
                          "arguments": [
                            {
                              "id": 2378,
                              "name": "amountBNBMarketing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2358,
                              "src": "26110:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2379,
                              "name": "amountBNBReflection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "26130:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2377,
                            "name": "sendSwappedBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2579,
                            "src": "26095:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26095:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2381,
                        "nodeType": "ExpressionStatement",
                        "src": "26095:55:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2382,
                            "name": "amountToLiquify",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "26259:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26277:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "26259:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev transfer the portion of taxes taken for liquidity pool to the liquidity pool",
                        "id": 2420,
                        "nodeType": "IfStatement",
                        "src": "26256:440:0",
                        "trueBody": {
                          "id": 2419,
                          "nodeType": "Block",
                          "src": "26279:417:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2392,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "26368:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                          "typeString": "contract TokifyRisingFloor"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                          "typeString": "contract TokifyRisingFloor"
                                        }
                                      ],
                                      "id": 2391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "26360:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2390,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "26360:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "26360:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2394,
                                    "name": "amountToLiquify",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "26391:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26424:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26443:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 2397,
                                    "name": "autoLiquidityReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1269,
                                    "src": "26462:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2398,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "26501:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "26501:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2385,
                                      "name": "router",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1290,
                                      "src": "26293:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                        "typeString": "contract IDEXRouter"
                                      }
                                    },
                                    "id": 2387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "addLiquidityETH",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 358,
                                    "src": "26293:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                                    }
                                  },
                                  "id": 2389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 2388,
                                      "name": "amountBNBLiquidity",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2345,
                                      "src": "26323:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "26293:49:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
                                    "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                                  }
                                },
                                "id": 2400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26293:237:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256,uint256)"
                                }
                              },
                              "id": 2401,
                              "nodeType": "ExpressionStatement",
                              "src": "26293:237:0"
                            },
                            {
                              "expression": {
                                "id": 2412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2402,
                                  "name": "baseTaxesAccumulated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1265,
                                  "src": "26544:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2410,
                                      "name": "sellingTaxAccumulated",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1267,
                                      "src": "26596:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 2406,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "26585:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                                "typeString": "contract TokifyRisingFloor"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                                "typeString": "contract TokifyRisingFloor"
                                              }
                                            ],
                                            "id": 2405,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "26577:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2404,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "26577:7:0",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2407,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "26577:13:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2403,
                                        "name": "balanceOf",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1573,
                                        "src": "26567:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view returns (uint256)"
                                        }
                                      },
                                      "id": 2408,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "26567:24:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30,
                                    "src": "26567:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26567:51:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26544:74:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2413,
                              "nodeType": "ExpressionStatement",
                              "src": "26544:74:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2415,
                                    "name": "amountBNBLiquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2345,
                                    "src": "26649:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2416,
                                    "name": "amountToLiquify",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2242,
                                    "src": "26669:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2414,
                                  "name": "AutoLiquify",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3372,
                                  "src": "26637:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 2417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26637:48:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2418,
                              "nodeType": "EmitStatement",
                              "src": "26632:53:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2226,
                    "nodeType": "StructuredDocumentation",
                    "src": "24267:206:0",
                    "text": "@dev function to swap the token accumulated in the contract through taxes into BNB\n @dev the BNB is then accordingly distributed into the rewards pool, the liquidity pool and the marketing wallet"
                  },
                  "id": 2422,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2229,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2228,
                        "name": "swapping",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1338,
                        "src": "24507:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "24507:8:0"
                    }
                  ],
                  "name": "swapBack",
                  "nameLocation": "24487:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24495:2:0"
                  },
                  "returnParameters": {
                    "id": 2230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24516:0:0"
                  },
                  "scope": 3373,
                  "src": "24478:2224:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2445,
                    "nodeType": "Block",
                    "src": "26770:164:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 2430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2427,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "26787:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "26787:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "id": 2429,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1292,
                                    "src": "26801:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "26787:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "id": 2433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "26817:11:0",
                                  "subExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2431,
                                      "name": "isPaused",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3098,
                                      "src": "26818:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                        "typeString": "function () view returns (bool)"
                                      }
                                    },
                                    "id": 2432,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "26818:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "26787:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 2436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "26840:7:0",
                                "subExpression": {
                                  "id": 2435,
                                  "name": "inSwap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1326,
                                  "src": "26841:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "26787:60:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 2438,
                              "name": "swapEnabled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1314,
                              "src": "26859:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "26787:83:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2440,
                              "name": "sellingTaxAccumulated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "26882:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2441,
                              "name": "sellingSwapThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "26907:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "26882:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "26787:140:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2426,
                        "id": 2444,
                        "nodeType": "Return",
                        "src": "26780:147:0"
                      }
                    ]
                  },
                  "id": 2446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "shouldSwapBackSelling",
                  "nameLocation": "26717:21:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "26738:2:0"
                  },
                  "returnParameters": {
                    "id": 2426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2425,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2446,
                        "src": "26764:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2424,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "26764:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26763:6:0"
                  },
                  "scope": 3373,
                  "src": "26708:226:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2504,
                    "nodeType": "Block",
                    "src": "27080:531:0",
                    "statements": [
                      {
                        "assignments": [
                          2456
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2456,
                            "mutability": "mutable",
                            "name": "path",
                            "nameLocation": "27193:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2504,
                            "src": "27176:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2454,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "27176:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2455,
                              "nodeType": "ArrayTypeName",
                              "src": "27176:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev set the path through which the contract exchanges the token to BNB",
                        "id": 2462,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 2460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27214:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 2459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "27200:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2457,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "27204:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2458,
                              "nodeType": "ArrayTypeName",
                              "src": "27204:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 2461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27200:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27176:40:0"
                      },
                      {
                        "expression": {
                          "id": 2470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2463,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2456,
                              "src": "27226:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2465,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 2464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27231:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "27226:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2468,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "27244:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              ],
                              "id": 2467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "27236:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2466,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "27236:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27236:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27226:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2471,
                        "nodeType": "ExpressionStatement",
                        "src": "27226:23:0"
                      },
                      {
                        "expression": {
                          "id": 2476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2472,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2456,
                              "src": "27259:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2474,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 2473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27264:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "27259:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2475,
                            "name": "WBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1167,
                            "src": "27269:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27259:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2477,
                        "nodeType": "ExpressionStatement",
                        "src": "27259:14:0"
                      },
                      {
                        "documentation": "@dev exchange the token for BNB",
                        "expression": {
                          "arguments": [
                            {
                              "id": 2481,
                              "name": "sellingSwapThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "27400:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27434:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 2483,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2456,
                              "src": "27449:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2486,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "27475:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                    "typeString": "contract TokifyRisingFloor"
                                  }
                                ],
                                "id": 2485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "27467:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2484,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "27467:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27467:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2488,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "27494:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "27494:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2478,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "27329:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDEXRouter_$385",
                                "typeString": "contract IDEXRouter"
                              }
                            },
                            "id": 2480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 384,
                            "src": "27329:57:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 2490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27329:190:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2491,
                        "nodeType": "ExpressionStatement",
                        "src": "27329:190:0"
                      },
                      {
                        "expression": {
                          "id": 2502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2492,
                            "name": "sellingTaxAccumulated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1267,
                            "src": "27530:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2500,
                                "name": "baseTaxesAccumulated",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1265,
                                "src": "27583:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2496,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "27572:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                          "typeString": "contract TokifyRisingFloor"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                          "typeString": "contract TokifyRisingFloor"
                                        }
                                      ],
                                      "id": 2495,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "27564:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2494,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "27564:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2497,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "27564:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2493,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1573,
                                  "src": "27554:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 2498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27554:24:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30,
                              "src": "27554:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27554:50:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27530:74:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2503,
                        "nodeType": "ExpressionStatement",
                        "src": "27530:74:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2447,
                    "nodeType": "StructuredDocumentation",
                    "src": "26940:90:0",
                    "text": "@dev function to swap the token accumulated in extra selling taxes to go to asset pool"
                  },
                  "id": 2505,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2450,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2449,
                        "name": "swapping",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1338,
                        "src": "27071:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "27071:8:0"
                    }
                  ],
                  "name": "swapBackSelling",
                  "nameLocation": "27044:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "27059:2:0"
                  },
                  "returnParameters": {
                    "id": 2451,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "27080:0:0"
                  },
                  "scope": 3373,
                  "src": "27035:576:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2578,
                    "nodeType": "Block",
                    "src": "27707:824:0",
                    "statements": [
                      {
                        "assignments": [
                          2513,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2513,
                            "mutability": "mutable",
                            "name": "rewardsTransferSuccess",
                            "nameLocation": "27808:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2578,
                            "src": "27803:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2512,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "27803:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "documentation": "@dev transfer the portion of taxes taken for rewards to the rewards pool",
                        "id": 2523,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 2521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27896:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2516,
                                    "name": "rewardsPoolAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1297,
                                    "src": "27843:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "27835:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2514,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "27835:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27835:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "27835:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2519,
                                "name": "amountBNBReflection",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2509,
                                "src": "27875:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "27835:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27835:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27802:97:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2525,
                              "name": "rewardsTransferSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2513,
                              "src": "27917:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2524,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "27909:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27909:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2527,
                        "nodeType": "ExpressionStatement",
                        "src": "27909:31:0"
                      },
                      {
                        "assignments": [
                          2530
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2530,
                            "mutability": "mutable",
                            "name": "generatorAmount",
                            "nameLocation": "28051:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2578,
                            "src": "28043:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2529,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "28043:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev tax on the marketing wallet going towards the contract generator platform",
                        "id": 2538,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2536,
                              "name": "feeDenominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1257,
                              "src": "28123:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2533,
                                  "name": "generatorFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1277,
                                  "src": "28092:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2531,
                                  "name": "amountBNBMarketing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2507,
                                  "src": "28069:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "28069:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28069:36:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "28069:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28069:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28043:104:0"
                      },
                      {
                        "assignments": [
                          2540
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2540,
                            "mutability": "mutable",
                            "name": "marketingAmount",
                            "nameLocation": "28165:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2578,
                            "src": "28157:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2539,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "28157:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2545,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2543,
                              "name": "generatorAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2530,
                              "src": "28206:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2541,
                              "name": "amountBNBMarketing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2507,
                              "src": "28183:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "28183:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28183:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28157:65:0"
                      },
                      {
                        "assignments": [
                          2547,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2547,
                            "mutability": "mutable",
                            "name": "marketingTransferSuccess",
                            "nameLocation": "28240:24:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2578,
                            "src": "28235:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2546,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "28235:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2557,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 2555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28328:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2550,
                                    "name": "marketingFeeReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1271,
                                    "src": "28277:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28269:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2548,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28269:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28269:29:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "28269:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2553,
                                "name": "marketingAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2540,
                                "src": "28311:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "28269:58:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28269:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28234:97:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2559,
                              "name": "marketingTransferSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2547,
                              "src": "28349:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2558,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "28341:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28341:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2561,
                        "nodeType": "ExpressionStatement",
                        "src": "28341:33:0"
                      },
                      {
                        "assignments": [
                          2563,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2563,
                            "mutability": "mutable",
                            "name": "generatorTransferSuccess",
                            "nameLocation": "28390:24:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2578,
                            "src": "28385:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2562,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "28385:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2573,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28478:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2566,
                                    "name": "generatorFeeReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1274,
                                    "src": "28427:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2565,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28419:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2564,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28419:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28419:29:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "28419:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2569,
                                "name": "generatorAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2530,
                                "src": "28461:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "28419:58:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28419:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28384:97:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2575,
                              "name": "generatorTransferSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2563,
                              "src": "28499:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2574,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "28491:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28491:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2577,
                        "nodeType": "ExpressionStatement",
                        "src": "28491:33:0"
                      }
                    ]
                  },
                  "id": 2579,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendSwappedBNB",
                  "nameLocation": "27626:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2507,
                        "mutability": "mutable",
                        "name": "amountBNBMarketing",
                        "nameLocation": "27649:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "27641:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27641:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2509,
                        "mutability": "mutable",
                        "name": "amountBNBReflection",
                        "nameLocation": "27677:19:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "27669:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2508,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27669:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "27640:57:0"
                  },
                  "returnParameters": {
                    "id": 2511,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "27707:0:0"
                  },
                  "scope": 3373,
                  "src": "27617:914:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2599,
                    "nodeType": "Block",
                    "src": "28633:86:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2588,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2582,
                                "src": "28651:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2589,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "28661:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 2590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "28676:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "28661:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "28651:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2587,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "28643:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28643:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2594,
                        "nodeType": "ExpressionStatement",
                        "src": "28643:38:0"
                      },
                      {
                        "expression": {
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2595,
                            "name": "_maxTxAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "28691:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2596,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2582,
                            "src": "28706:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28691:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2598,
                        "nodeType": "ExpressionStatement",
                        "src": "28691:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2580,
                    "nodeType": "StructuredDocumentation",
                    "src": "28538:34:0",
                    "text": "@dev set the transaction limit"
                  },
                  "functionSelector": "5c85974f",
                  "id": 2600,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2585,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2584,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "28622:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "28622:10:0"
                    }
                  ],
                  "name": "setTxLimit",
                  "nameLocation": "28586:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2582,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "28605:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2600,
                        "src": "28597:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28597:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28596:16:0"
                  },
                  "returnParameters": {
                    "id": 2586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "28633:0:0"
                  },
                  "scope": 3373,
                  "src": "28577:142:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2623,
                    "nodeType": "Block",
                    "src": "28954:214:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2609,
                                    "name": "dividendDistributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "28972:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                      "typeString": "contract DividendDistributor"
                                    }
                                  },
                                  "id": 2610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "neverDistributed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 471,
                                  "src": "28972:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                    "typeString": "function () view external returns (bool)"
                                  }
                                },
                                "id": 2611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28972:38:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 2612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29014:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "28972:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616e6765206469766964656e6420746f6b656e2061667465722074686520666972737420646973747269627574696f6e206861732073746172746564",
                              "id": 2614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29020:71:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                                "typeString": "literal_string \"Cannot change dividend token after the first distribution has started\""
                              },
                              "value": "Cannot change dividend token after the first distribution has started"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f12c589ebfb7bca61c9fe2e0ec56e97bd78265a64046c1b6ff68e3d64d9a7475",
                                "typeString": "literal_string \"Cannot change dividend token after the first distribution has started\""
                              }
                            ],
                            "id": 2608,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "28964:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28964:128:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2616,
                        "nodeType": "ExpressionStatement",
                        "src": "28964:128:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2620,
                              "name": "_dividendTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2603,
                              "src": "29139:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2617,
                              "name": "dividendDistributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "29102:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                "typeString": "contract DividendDistributor"
                              }
                            },
                            "id": 2619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setDividendToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 681,
                            "src": "29102:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 2621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29102:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2622,
                        "nodeType": "ExpressionStatement",
                        "src": "29102:59:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2601,
                    "nodeType": "StructuredDocumentation",
                    "src": "28725:147:0",
                    "text": "@dev change the token the dividend distributor distributes. This can only be done before the dividend distributor starts its first distribution"
                  },
                  "functionSelector": "20ffe2fd",
                  "id": 2624,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2606,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2605,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "28943:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "28943:10:0"
                    }
                  ],
                  "name": "setDividendToken",
                  "nameLocation": "28886:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2603,
                        "mutability": "mutable",
                        "name": "_dividendTokenAddress",
                        "nameLocation": "28911:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2624,
                        "src": "28903:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28903:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28902:31:0"
                  },
                  "returnParameters": {
                    "id": 2607,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "28954:0:0"
                  },
                  "scope": 3373,
                  "src": "28877:291:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2650,
                    "nodeType": "Block",
                    "src": "29341:156:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2633,
                                "name": "_maxSellFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "29359:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "35303030",
                                "id": 2634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29374:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5000_by_1",
                                  "typeString": "int_const 5000"
                                },
                                "value": "5000"
                              },
                              "src": "29359:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c756520746f6f2068696768",
                              "id": 2636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29380:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                                "typeString": "literal_string \"Value too high\""
                              },
                              "value": "Value too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                                "typeString": "literal_string \"Value too high\""
                              }
                            ],
                            "id": 2632,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "29351:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29351:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2638,
                        "nodeType": "ExpressionStatement",
                        "src": "29351:46:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2640,
                                "name": "_maxSellFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2627,
                                "src": "29415:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2641,
                                "name": "totalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1253,
                                "src": "29430:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "29415:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c756520746f6f206c6f77",
                              "id": 2643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29440:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297",
                                "typeString": "literal_string \"Value too low\""
                              },
                              "value": "Value too low"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297",
                                "typeString": "literal_string \"Value too low\""
                              }
                            ],
                            "id": 2639,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "29407:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29407:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2645,
                        "nodeType": "ExpressionStatement",
                        "src": "29407:49:0"
                      },
                      {
                        "expression": {
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2646,
                            "name": "maxSellFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "29466:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2647,
                            "name": "_maxSellFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2627,
                            "src": "29479:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29466:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2649,
                        "nodeType": "ExpressionStatement",
                        "src": "29466:24:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2625,
                    "nodeType": "StructuredDocumentation",
                    "src": "29174:82:0",
                    "text": "@dev set the maximum sell fee that can be applied with a denominator of 10,000"
                  },
                  "functionSelector": "19fbe385",
                  "id": 2651,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2630,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2629,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "29330:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "29330:10:0"
                    }
                  ],
                  "name": "setMaxSellFeeDenominator10000",
                  "nameLocation": "29270:29:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2627,
                        "mutability": "mutable",
                        "name": "_maxSellFee",
                        "nameLocation": "29308:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2651,
                        "src": "29300:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "29300:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29299:21:0"
                  },
                  "returnParameters": {
                    "id": 2631,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "29341:0:0"
                  },
                  "scope": 3373,
                  "src": "29261:236:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2677,
                    "nodeType": "Block",
                    "src": "29691:183:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2660,
                                "name": "_maxSellMultiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2654,
                                "src": "29709:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "313030303030",
                                "id": 2661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29731:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100000"
                              },
                              "src": "29709:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c756520746f6f2068696768",
                              "id": 2663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29739:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                                "typeString": "literal_string \"Value too high\""
                              },
                              "value": "Value too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5235fb147686bcfd3bfd0ea602d4be817fe6da64631d8dc1e0d64e02da6f14bb",
                                "typeString": "literal_string \"Value too high\""
                              }
                            ],
                            "id": 2659,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "29701:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29701:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2665,
                        "nodeType": "ExpressionStatement",
                        "src": "29701:55:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2667,
                                "name": "_maxSellMultiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2654,
                                "src": "29774:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "3130303030",
                                "id": 2668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29796:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              },
                              "src": "29774:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c756520746f6f206c6f77",
                              "id": 2670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29803:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297",
                                "typeString": "literal_string \"Value too low\""
                              },
                              "value": "Value too low"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_81fc001507e847e0a462181793879d405feabe0a3854600bca23d665098ee297",
                                "typeString": "literal_string \"Value too low\""
                              }
                            ],
                            "id": 2666,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "29766:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29766:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2672,
                        "nodeType": "ExpressionStatement",
                        "src": "29766:53:0"
                      },
                      {
                        "expression": {
                          "id": 2675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2673,
                            "name": "maxSellMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1263,
                            "src": "29829:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2674,
                            "name": "_maxSellMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2654,
                            "src": "29849:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29829:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2676,
                        "nodeType": "ExpressionStatement",
                        "src": "29829:38:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2652,
                    "nodeType": "StructuredDocumentation",
                    "src": "29503:89:0",
                    "text": "@dev set the maximum sell multiplier that can be applied with a denominator of 10,000"
                  },
                  "functionSelector": "95dab460",
                  "id": 2678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2657,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2656,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "29680:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "29680:10:0"
                    }
                  ],
                  "name": "setMaxSellMultiplierDenominator10000",
                  "nameLocation": "29606:36:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2654,
                        "mutability": "mutable",
                        "name": "_maxSellMultiplier",
                        "nameLocation": "29651:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2678,
                        "src": "29643:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2653,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "29643:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29642:28:0"
                  },
                  "returnParameters": {
                    "id": 2658,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "29691:0:0"
                  },
                  "scope": 3373,
                  "src": "29597:277:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2727,
                    "nodeType": "Block",
                    "src": "30021:277:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2689,
                                  "name": "holder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2681,
                                  "src": "30039:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 2692,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "30057:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                        "typeString": "contract TokifyRisingFloor"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                        "typeString": "contract TokifyRisingFloor"
                                      }
                                    ],
                                    "id": 2691,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "30049:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2690,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "30049:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2693,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "30049:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "30039:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 2697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2695,
                                  "name": "holder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2681,
                                  "src": "30066:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 2696,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1292,
                                  "src": "30076:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "30066:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "30039:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2688,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "30031:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30031:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2700,
                        "nodeType": "ExpressionStatement",
                        "src": "30031:50:0"
                      },
                      {
                        "expression": {
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2701,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "30091:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2703,
                            "indexExpression": {
                              "id": 2702,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2681,
                              "src": "30108:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30091:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2704,
                            "name": "exempt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2683,
                            "src": "30118:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "30091:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2706,
                        "nodeType": "ExpressionStatement",
                        "src": "30091:33:0"
                      },
                      {
                        "condition": {
                          "id": 2707,
                          "name": "exempt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2683,
                          "src": "30137:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2725,
                          "nodeType": "Block",
                          "src": "30212:80:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2719,
                                    "name": "holder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2681,
                                    "src": "30255:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 2720,
                                      "name": "_balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1203,
                                      "src": "30263:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 2722,
                                    "indexExpression": {
                                      "id": 2721,
                                      "name": "holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2681,
                                      "src": "30273:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30263:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2716,
                                    "name": "dividendDistributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "30226:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                      "typeString": "contract DividendDistributor"
                                    }
                                  },
                                  "id": 2718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 659,
                                  "src": "30226:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 2723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30226:55:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2724,
                              "nodeType": "ExpressionStatement",
                              "src": "30226:55:0"
                            }
                          ]
                        },
                        "id": 2726,
                        "nodeType": "IfStatement",
                        "src": "30134:158:0",
                        "trueBody": {
                          "id": 2715,
                          "nodeType": "Block",
                          "src": "30144:64:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2711,
                                    "name": "holder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2681,
                                    "src": "30187:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "30195:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2708,
                                    "name": "dividendDistributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "30158:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                      "typeString": "contract DividendDistributor"
                                    }
                                  },
                                  "id": 2710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 659,
                                  "src": "30158:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 2713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30158:39:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2714,
                              "nodeType": "ExpressionStatement",
                              "src": "30158:39:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2679,
                    "nodeType": "StructuredDocumentation",
                    "src": "29881:57:0",
                    "text": "@dev set whether an address is exempt from the reward"
                  },
                  "functionSelector": "f708a64f",
                  "id": 2728,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2686,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2685,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "30010:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "30010:10:0"
                    }
                  ],
                  "name": "setIsDividendExempt",
                  "nameLocation": "29952:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2681,
                        "mutability": "mutable",
                        "name": "holder",
                        "nameLocation": "29980:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2728,
                        "src": "29972:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "29972:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2683,
                        "mutability": "mutable",
                        "name": "exempt",
                        "nameLocation": "29993:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2728,
                        "src": "29988:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2682,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "29988:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29971:29:0"
                  },
                  "returnParameters": {
                    "id": 2687,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "30021:0:0"
                  },
                  "scope": 3373,
                  "src": "29943:355:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2744,
                    "nodeType": "Block",
                    "src": "30437:45:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2738,
                              "name": "isFeeExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "30447:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2740,
                            "indexExpression": {
                              "id": 2739,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2731,
                              "src": "30459:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30447:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2741,
                            "name": "exempt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2733,
                            "src": "30469:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "30447:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2743,
                        "nodeType": "ExpressionStatement",
                        "src": "30447:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2729,
                    "nodeType": "StructuredDocumentation",
                    "src": "30305:54:0",
                    "text": "@dev set whether an address is exempt from the fee"
                  },
                  "functionSelector": "658d4b7f",
                  "id": 2745,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2736,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2735,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "30426:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "30426:10:0"
                    }
                  ],
                  "name": "setIsFeeExempt",
                  "nameLocation": "30373:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2731,
                        "mutability": "mutable",
                        "name": "holder",
                        "nameLocation": "30396:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2745,
                        "src": "30388:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "30388:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2733,
                        "mutability": "mutable",
                        "name": "exempt",
                        "nameLocation": "30409:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2745,
                        "src": "30404:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2732,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "30404:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "30387:29:0"
                  },
                  "returnParameters": {
                    "id": 2737,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "30437:0:0"
                  },
                  "scope": 3373,
                  "src": "30364:118:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2761,
                    "nodeType": "Block",
                    "src": "30647:49:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2755,
                              "name": "isTxLimitExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1217,
                              "src": "30657:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 2757,
                            "indexExpression": {
                              "id": 2756,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2748,
                              "src": "30673:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30657:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2758,
                            "name": "exempt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2750,
                            "src": "30683:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "30657:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2760,
                        "nodeType": "ExpressionStatement",
                        "src": "30657:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2746,
                    "nodeType": "StructuredDocumentation",
                    "src": "30489:76:0",
                    "text": "@dev set whether an address is exempt from the maximum transaction limit"
                  },
                  "functionSelector": "f84ba65d",
                  "id": 2762,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2753,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2752,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "30636:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "30636:10:0"
                    }
                  ],
                  "name": "setIsTxLimitExempt",
                  "nameLocation": "30579:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2748,
                        "mutability": "mutable",
                        "name": "holder",
                        "nameLocation": "30606:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2762,
                        "src": "30598:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2747,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "30598:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2750,
                        "mutability": "mutable",
                        "name": "exempt",
                        "nameLocation": "30619:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2762,
                        "src": "30614:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2749,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "30614:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "30597:29:0"
                  },
                  "returnParameters": {
                    "id": 2754,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "30647:0:0"
                  },
                  "scope": 3373,
                  "src": "30570:126:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2822,
                    "nodeType": "Block",
                    "src": "30940:367:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2776,
                            "name": "liquidityFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "30950:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2777,
                            "name": "_liquidityFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2765,
                            "src": "30965:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30950:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2779,
                        "nodeType": "ExpressionStatement",
                        "src": "30950:28:0"
                      },
                      {
                        "expression": {
                          "id": 2782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2780,
                            "name": "rewardsFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1233,
                            "src": "30988:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2781,
                            "name": "_rewardsFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2767,
                            "src": "31001:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30988:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2783,
                        "nodeType": "ExpressionStatement",
                        "src": "30988:24:0"
                      },
                      {
                        "expression": {
                          "id": 2786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2784,
                            "name": "backingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "31022:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2785,
                            "name": "_backingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2769,
                            "src": "31035:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31022:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2787,
                        "nodeType": "ExpressionStatement",
                        "src": "31022:24:0"
                      },
                      {
                        "expression": {
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2788,
                            "name": "marketingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1241,
                            "src": "31056:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2789,
                            "name": "_marketingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2771,
                            "src": "31071:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31056:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2791,
                        "nodeType": "ExpressionStatement",
                        "src": "31056:28:0"
                      },
                      {
                        "expression": {
                          "id": 2803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2792,
                            "name": "totalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "31094:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2801,
                                "name": "_marketingFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2771,
                                "src": "31157:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2798,
                                    "name": "_backingFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2769,
                                    "src": "31140:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2795,
                                        "name": "_rewardsFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2767,
                                        "src": "31123:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2793,
                                        "name": "_liquidityFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2765,
                                        "src": "31105:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 16,
                                      "src": "31105:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "31105:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16,
                                  "src": "31105:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "31105:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "31105:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "31105:66:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31094:77:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2804,
                        "nodeType": "ExpressionStatement",
                        "src": "31094:77:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2805,
                            "name": "totalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "31184:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2806,
                            "name": "maxSellFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "31195:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31184:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2813,
                        "nodeType": "IfStatement",
                        "src": "31181:72:0",
                        "trueBody": {
                          "id": 2812,
                          "nodeType": "Block",
                          "src": "31207:46:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 2810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2808,
                                  "name": "maxSellFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1260,
                                  "src": "31221:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2809,
                                  "name": "totalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1253,
                                  "src": "31234:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "31221:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2811,
                              "nodeType": "ExpressionStatement",
                              "src": "31221:21:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2815,
                                "name": "totalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1253,
                                "src": "31270:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2816,
                                  "name": "feeDenominator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1257,
                                  "src": "31281:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 2817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31298:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "31281:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "31270:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2814,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "31262:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31262:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2821,
                        "nodeType": "ExpressionStatement",
                        "src": "31262:38:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2763,
                    "nodeType": "StructuredDocumentation",
                    "src": "30703:49:0",
                    "text": "@dev set the fees with a denominator of 10000"
                  },
                  "functionSelector": "563bf54d",
                  "id": 2823,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2774,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2773,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "30929:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "30929:10:0"
                    }
                  ],
                  "name": "setFeesWithDenominator10000",
                  "nameLocation": "30766:27:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2765,
                        "mutability": "mutable",
                        "name": "_liquidityFee",
                        "nameLocation": "30811:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2823,
                        "src": "30803:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2764,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30803:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2767,
                        "mutability": "mutable",
                        "name": "_rewardsFee",
                        "nameLocation": "30842:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2823,
                        "src": "30834:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30834:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2769,
                        "mutability": "mutable",
                        "name": "_backingFee",
                        "nameLocation": "30871:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2823,
                        "src": "30863:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30863:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2771,
                        "mutability": "mutable",
                        "name": "_marketingFee",
                        "nameLocation": "30900:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2823,
                        "src": "30892:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "30793:126:0"
                  },
                  "returnParameters": {
                    "id": 2775,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "30940:0:0"
                  },
                  "scope": 3373,
                  "src": "30757:550:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2841,
                    "nodeType": "Block",
                    "src": "31526:117:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2833,
                            "name": "autoLiquidityReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1269,
                            "src": "31536:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2834,
                            "name": "_autoLiquidityReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2826,
                            "src": "31560:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "31536:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2836,
                        "nodeType": "ExpressionStatement",
                        "src": "31536:46:0"
                      },
                      {
                        "expression": {
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2837,
                            "name": "marketingFeeReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1271,
                            "src": "31592:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2838,
                            "name": "_marketingFeeReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "31615:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "31592:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2840,
                        "nodeType": "ExpressionStatement",
                        "src": "31592:44:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2824,
                    "nodeType": "StructuredDocumentation",
                    "src": "31314:99:0",
                    "text": "@dev set the addresses that benefit from the marketing fee and those that receive the liquidity"
                  },
                  "functionSelector": "a4b45c00",
                  "id": 2842,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2831,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2830,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "31515:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "31515:10:0"
                    }
                  ],
                  "name": "setFeeReceivers",
                  "nameLocation": "31427:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2826,
                        "mutability": "mutable",
                        "name": "_autoLiquidityReceiver",
                        "nameLocation": "31451:22:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2842,
                        "src": "31443:30:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2825,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "31443:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2828,
                        "mutability": "mutable",
                        "name": "_marketingFeeReceiver",
                        "nameLocation": "31483:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2842,
                        "src": "31475:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "31475:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "31442:63:0"
                  },
                  "returnParameters": {
                    "id": 2832,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "31526:0:0"
                  },
                  "scope": 3373,
                  "src": "31418:225:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2866,
                    "nodeType": "Block",
                    "src": "31869:119:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2854,
                            "name": "swapEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1314,
                            "src": "31879:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2855,
                            "name": "_enabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2845,
                            "src": "31893:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "31879:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2857,
                        "nodeType": "ExpressionStatement",
                        "src": "31879:22:0"
                      },
                      {
                        "expression": {
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2858,
                            "name": "swapThreshold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1319,
                            "src": "31911:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2859,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2847,
                            "src": "31927:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31911:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2861,
                        "nodeType": "ExpressionStatement",
                        "src": "31911:23:0"
                      },
                      {
                        "expression": {
                          "id": 2864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2862,
                            "name": "sellingSwapThreshold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "31944:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2863,
                            "name": "_sellingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2849,
                            "src": "31967:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31944:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2865,
                        "nodeType": "ExpressionStatement",
                        "src": "31944:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2843,
                    "nodeType": "StructuredDocumentation",
                    "src": "31650:109:0",
                    "text": "@dev set whether the contract can swap back its accumulated token into BNB and set the threshold for this"
                  },
                  "functionSelector": "d0889358",
                  "id": 2867,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2852,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2851,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "31858:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "31858:10:0"
                    }
                  ],
                  "name": "setSwapBackSettings",
                  "nameLocation": "31773:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2845,
                        "mutability": "mutable",
                        "name": "_enabled",
                        "nameLocation": "31798:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2867,
                        "src": "31793:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2844,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "31793:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2847,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "31816:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2867,
                        "src": "31808:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "31808:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2849,
                        "mutability": "mutable",
                        "name": "_sellingAmount",
                        "nameLocation": "31833:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2867,
                        "src": "31825:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2848,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "31825:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "31792:56:0"
                  },
                  "returnParameters": {
                    "id": 2853,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "31869:0:0"
                  },
                  "scope": 3373,
                  "src": "31764:224:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2885,
                    "nodeType": "Block",
                    "src": "32176:93:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2877,
                            "name": "targetLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "32186:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2878,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2870,
                            "src": "32204:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32186:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2880,
                        "nodeType": "ExpressionStatement",
                        "src": "32186:25:0"
                      },
                      {
                        "expression": {
                          "id": 2883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2881,
                            "name": "targetLiquidityDenominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "32221:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2882,
                            "name": "_denominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2872,
                            "src": "32250:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32221:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2884,
                        "nodeType": "ExpressionStatement",
                        "src": "32221:41:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2868,
                    "nodeType": "StructuredDocumentation",
                    "src": "31994:90:0",
                    "text": "@dev set the maximum amount of liquidity up to which taxes keep being sent to the pool"
                  },
                  "functionSelector": "201e7991",
                  "id": 2886,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2875,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2874,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "32165:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "32165:10:0"
                    }
                  ],
                  "name": "setTargetLiquidity",
                  "nameLocation": "32098:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2870,
                        "mutability": "mutable",
                        "name": "_target",
                        "nameLocation": "32125:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2886,
                        "src": "32117:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2869,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32117:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2872,
                        "mutability": "mutable",
                        "name": "_denominator",
                        "nameLocation": "32142:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2886,
                        "src": "32134:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2871,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32134:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32116:39:0"
                  },
                  "returnParameters": {
                    "id": 2876,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32176:0:0"
                  },
                  "scope": 3373,
                  "src": "32089:180:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2898,
                    "nodeType": "Block",
                    "src": "32379:49:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2894,
                            "name": "takeFeeActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1281,
                            "src": "32389:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2895,
                            "name": "setTakeFeeActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2889,
                            "src": "32405:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "32389:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2897,
                        "nodeType": "ExpressionStatement",
                        "src": "32389:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2887,
                    "nodeType": "StructuredDocumentation",
                    "src": "32275:34:0",
                    "text": "@dev enable or disable the fee"
                  },
                  "functionSelector": "b7bfff65",
                  "id": 2899,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2892,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2891,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "32368:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "32368:10:0"
                    }
                  ],
                  "name": "setFeeActive",
                  "nameLocation": "32323:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2890,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2889,
                        "mutability": "mutable",
                        "name": "setTakeFeeActive",
                        "nameLocation": "32341:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2899,
                        "src": "32336:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2888,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "32336:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32335:23:0"
                  },
                  "returnParameters": {
                    "id": 2893,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32379:0:0"
                  },
                  "scope": 3373,
                  "src": "32314:114:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2912,
                    "nodeType": "Block",
                    "src": "32514:78:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2909,
                              "name": "_minDistribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2901,
                              "src": "32568:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2906,
                              "name": "dividendDistributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "32524:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                "typeString": "contract DividendDistributor"
                              }
                            },
                            "id": 2908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setDistributionCriteria",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 572,
                            "src": "32524:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32524:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2911,
                        "nodeType": "ExpressionStatement",
                        "src": "32524:61:0"
                      }
                    ]
                  },
                  "functionSelector": "98e5bfee",
                  "id": 2913,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2904,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2903,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "32503:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "32503:10:0"
                    }
                  ],
                  "name": "setDistributionCriteria",
                  "nameLocation": "32444:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2901,
                        "mutability": "mutable",
                        "name": "_minDistribution",
                        "nameLocation": "32476:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2913,
                        "src": "32468:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2900,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32468:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32467:26:0"
                  },
                  "returnParameters": {
                    "id": 2905,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32514:0:0"
                  },
                  "scope": 3373,
                  "src": "32435:157:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2931,
                    "nodeType": "Block",
                    "src": "32726:78:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2927,
                                  "name": "ZERO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1173,
                                  "src": "32791:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2926,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1573,
                                "src": "32781:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 2928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32781:15:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2922,
                                      "name": "DEAD",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1170,
                                      "src": "32770:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2921,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1573,
                                    "src": "32760:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view returns (uint256)"
                                    }
                                  },
                                  "id": 2923,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "32760:15:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2919,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "32743:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30,
                                "src": "32743:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32743:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "32743:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32743:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2918,
                        "id": 2930,
                        "nodeType": "Return",
                        "src": "32736:61:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2914,
                    "nodeType": "StructuredDocumentation",
                    "src": "32599:60:0",
                    "text": "@dev get the token supply not stored in the burn wallets"
                  },
                  "functionSelector": "2b112e49",
                  "id": 2932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCirculatingSupply",
                  "nameLocation": "32673:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2915,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32693:2:0"
                  },
                  "returnParameters": {
                    "id": 2918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2917,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2932,
                        "src": "32717:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2916,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32717:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32716:9:0"
                  },
                  "scope": 3373,
                  "src": "32664:140:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2958,
                    "nodeType": "Block",
                    "src": "32971:97:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2952,
                                  "name": "getCirculatingSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2932,
                                  "src": "33029:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "33029:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "32",
                                        "id": 2948,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "33021:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 2945,
                                            "name": "pair",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1292,
                                            "src": "33011:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2944,
                                          "name": "balanceOf",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1573,
                                          "src": "33001:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view returns (uint256)"
                                          }
                                        },
                                        "id": 2946,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "33001:15:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2947,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 44,
                                      "src": "33001:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2949,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "33001:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2942,
                                    "name": "accuracy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2937,
                                    "src": "32988:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 44,
                                  "src": "32988:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "32988:36:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "32988:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32988:64:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 2955,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2935,
                            "src": "33055:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32988:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2941,
                        "id": 2957,
                        "nodeType": "Return",
                        "src": "32981:80:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2933,
                    "nodeType": "StructuredDocumentation",
                    "src": "32811:69:0",
                    "text": "@dev check whether too much of the token is in the liquidity pool"
                  },
                  "functionSelector": "1161ae39",
                  "id": 2959,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOverLiquified",
                  "nameLocation": "32894:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2935,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "32918:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2959,
                        "src": "32910:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2934,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32910:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2937,
                        "mutability": "mutable",
                        "name": "accuracy",
                        "nameLocation": "32934:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2959,
                        "src": "32926:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2936,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "32926:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32909:34:0"
                  },
                  "returnParameters": {
                    "id": 2941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2940,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2959,
                        "src": "32965:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2939,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "32965:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32964:6:0"
                  },
                  "scope": 3373,
                  "src": "32885:183:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2991,
                    "nodeType": "Block",
                    "src": "33264:239:0",
                    "statements": [
                      {
                        "assignments": [
                          2970
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2970,
                            "mutability": "mutable",
                            "name": "rewardsPoolBalance",
                            "nameLocation": "33282:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2991,
                            "src": "33274:26:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2969,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "33274:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2973,
                        "initialValue": {
                          "expression": {
                            "id": 2971,
                            "name": "rewardsPoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "33303:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "33303:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "33274:55:0"
                      },
                      {
                        "assignments": [
                          2975
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2975,
                            "mutability": "mutable",
                            "name": "toDistribute",
                            "nameLocation": "33347:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2991,
                            "src": "33339:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2974,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "33339:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2983,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2981,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2964,
                              "src": "33400:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2978,
                                  "name": "numerator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2962,
                                  "src": "33385:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2976,
                                  "name": "rewardsPoolBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2970,
                                  "src": "33362:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2977,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "33362:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "33362:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "33362:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33362:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "33339:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2987,
                              "name": "dividendDistributorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "33455:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2988,
                              "name": "toDistribute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2975,
                              "src": "33483:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2984,
                              "name": "rewardsPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1295,
                              "src": "33422:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardsPool_$1149",
                                "typeString": "contract RewardsPool"
                              }
                            },
                            "id": 2986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferBNBToAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1148,
                            "src": "33422:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 2989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33422:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2990,
                        "nodeType": "ExpressionStatement",
                        "src": "33422:74:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2960,
                    "nodeType": "StructuredDocumentation",
                    "src": "33075:87:0",
                    "text": "@dev pay out a fraction of the BNB stored in the reward pool contract (RewardsPool)"
                  },
                  "functionSelector": "d717c918",
                  "id": 2992,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2967,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2966,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "33253:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "33253:10:0"
                    }
                  ],
                  "name": "payoutFractionOfRewardsPool",
                  "nameLocation": "33176:27:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2965,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2962,
                        "mutability": "mutable",
                        "name": "numerator",
                        "nameLocation": "33212:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2992,
                        "src": "33204:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2961,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "33204:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2964,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "33231:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2992,
                        "src": "33223:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2963,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "33223:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "33203:40:0"
                  },
                  "returnParameters": {
                    "id": 2968,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "33264:0:0"
                  },
                  "scope": 3373,
                  "src": "33167:336:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3004,
                    "nodeType": "Block",
                    "src": "33647:45:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3000,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "33672:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              ],
                              "id": 2999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "33664:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2998,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "33664:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "33664:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "33664:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2997,
                        "id": 3003,
                        "nodeType": "Return",
                        "src": "33657:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2993,
                    "nodeType": "StructuredDocumentation",
                    "src": "33510:67:0",
                    "text": "@dev get amount of BNB stored in the asset pool (this contract)"
                  },
                  "functionSelector": "75ead12b",
                  "id": 3005,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountBNBInAssetPool",
                  "nameLocation": "33591:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "33614:2:0"
                  },
                  "returnParameters": {
                    "id": 2997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2996,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3005,
                        "src": "33638:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2995,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "33638:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "33637:9:0"
                  },
                  "scope": 3373,
                  "src": "33582:110:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3014,
                    "nodeType": "Block",
                    "src": "33847:50:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 3011,
                            "name": "rewardsPoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "33864:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "33864:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3010,
                        "id": 3013,
                        "nodeType": "Return",
                        "src": "33857:33:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3006,
                    "nodeType": "StructuredDocumentation",
                    "src": "33699:76:0",
                    "text": "@dev get amount of BNB stored in the rewards pool (RewardsPool contract)"
                  },
                  "functionSelector": "a69c17e0",
                  "id": 3015,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountBNBInRewardsPool",
                  "nameLocation": "33789:25:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3007,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "33814:2:0"
                  },
                  "returnParameters": {
                    "id": 3010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3009,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3015,
                        "src": "33838:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "33838:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "33837:9:0"
                  },
                  "scope": 3373,
                  "src": "33780:117:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3024,
                    "nodeType": "Block",
                    "src": "33969:70:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3020,
                              "name": "dividendDistributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "33986:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                "typeString": "contract DividendDistributor"
                              }
                            },
                            "id": 3021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "viewDividendTokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1063,
                            "src": "33986:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33986:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 3019,
                        "id": 3023,
                        "nodeType": "Return",
                        "src": "33979:53:0"
                      }
                    ]
                  },
                  "functionSelector": "9e061b48",
                  "id": 3025,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDividendTokenAddress",
                  "nameLocation": "33913:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3016,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "33936:2:0"
                  },
                  "returnParameters": {
                    "id": 3019,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3018,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3025,
                        "src": "33960:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3017,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "33960:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "33959:9:0"
                  },
                  "scope": 3373,
                  "src": "33904:135:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3044,
                    "nodeType": "Block",
                    "src": "34117:112:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 3035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3032,
                            "name": "assetPoolLockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "34127:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3033,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "34152:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "34152:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "34127:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3036,
                        "nodeType": "ExpressionStatement",
                        "src": "34127:40:0"
                      },
                      {
                        "expression": {
                          "id": 3042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3037,
                            "name": "assetPoolLockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "34177:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 3040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "34215:6:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              ],
                              "expression": {
                                "id": 3038,
                                "name": "_numberOfDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3027,
                                "src": "34197:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44,
                              "src": "34197:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34197:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "34177:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3043,
                        "nodeType": "ExpressionStatement",
                        "src": "34177:45:0"
                      }
                    ]
                  },
                  "functionSelector": "af7a2458",
                  "id": 3045,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3030,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3029,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 205,
                        "src": "34107:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "34107:9:0"
                    }
                  ],
                  "name": "lockAssetRewardPools",
                  "nameLocation": "34054:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3028,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3027,
                        "mutability": "mutable",
                        "name": "_numberOfDays",
                        "nameLocation": "34083:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3045,
                        "src": "34075:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3026,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "34075:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "34074:23:0"
                  },
                  "returnParameters": {
                    "id": 3031,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "34117:0:0"
                  },
                  "scope": 3373,
                  "src": "34045:184:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3084,
                    "nodeType": "Block",
                    "src": "34375:276:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3054,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "34393:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "34393:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3058,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3056,
                                    "name": "pauseTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1308,
                                    "src": "34412:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 3057,
                                    "name": "pauseTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1310,
                                    "src": "34429:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "34412:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 3059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "34441:7:0",
                                  "subdenomination": "days",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_864000_by_1",
                                    "typeString": "int_const 864000"
                                  },
                                  "value": "10"
                                },
                                "src": "34412:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "34393:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682064617973207061737365642073696e6365206c617374207061757365",
                              "id": 3062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34450:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29",
                                "typeString": "literal_string \"Not enough days passed since last pause\""
                              },
                              "value": "Not enough days passed since last pause"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2b581099976d698efd8c408a641f8c2c7c6f29f84f80370e5871af925dc64b29",
                                "typeString": "literal_string \"Not enough days passed since last pause\""
                              }
                            ],
                            "id": 3053,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "34385:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34385:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3064,
                        "nodeType": "ExpressionStatement",
                        "src": "34385:107:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3066,
                                "name": "_numberOfDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3048,
                                "src": "34510:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 3067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "34527:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "34510:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4465736972656420706175736520746f6f206c6f6e67",
                              "id": 3069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34530:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6",
                                "typeString": "literal_string \"Desired pause too long\""
                              },
                              "value": "Desired pause too long"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_67ba18382de143062b069bfee94d013e5808f5de0aa083011404411b9b34a8b6",
                                "typeString": "literal_string \"Desired pause too long\""
                              }
                            ],
                            "id": 3065,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "34502:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34502:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3071,
                        "nodeType": "ExpressionStatement",
                        "src": "34502:53:0"
                      },
                      {
                        "expression": {
                          "id": 3075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3072,
                            "name": "pauseTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "34565:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3073,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "34582:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "34582:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "34565:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3076,
                        "nodeType": "ExpressionStatement",
                        "src": "34565:32:0"
                      },
                      {
                        "expression": {
                          "id": 3082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3077,
                            "name": "pauseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1310,
                            "src": "34607:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 3080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "34637:6:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              ],
                              "expression": {
                                "id": 3078,
                                "name": "_numberOfDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3048,
                                "src": "34619:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44,
                              "src": "34619:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34619:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "34607:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3083,
                        "nodeType": "ExpressionStatement",
                        "src": "34607:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3046,
                    "nodeType": "StructuredDocumentation",
                    "src": "34235:70:0",
                    "text": "@dev necessary for contract upgrades. Can do at most every 10 days"
                  },
                  "functionSelector": "c2852f38",
                  "id": 3085,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3051,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3050,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 205,
                        "src": "34365:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "34365:9:0"
                    }
                  ],
                  "name": "pauseContract",
                  "nameLocation": "34319:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3048,
                        "mutability": "mutable",
                        "name": "_numberOfDays",
                        "nameLocation": "34341:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3085,
                        "src": "34333:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "34333:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "34332:23:0"
                  },
                  "returnParameters": {
                    "id": 3052,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "34375:0:0"
                  },
                  "scope": 3373,
                  "src": "34310:341:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3097,
                    "nodeType": "Block",
                    "src": "34704:68:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3090,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "34721:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "34721:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3092,
                              "name": "pauseTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1308,
                              "src": "34739:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3093,
                              "name": "pauseTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "34756:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "34739:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "34721:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3089,
                        "id": 3096,
                        "nodeType": "Return",
                        "src": "34714:51:0"
                      }
                    ]
                  },
                  "functionSelector": "b187bd26",
                  "id": 3098,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isPaused",
                  "nameLocation": "34666:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "34674:2:0"
                  },
                  "returnParameters": {
                    "id": 3089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3088,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3098,
                        "src": "34698:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3087,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "34698:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "34697:6:0"
                  },
                  "scope": 3373,
                  "src": "34657:115:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3112,
                    "nodeType": "Block",
                    "src": "34892:52:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 3110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3106,
                              "name": "isExcludedFromPause",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "34902:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3108,
                            "indexExpression": {
                              "id": 3107,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3101,
                              "src": "34922:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "34902:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34933:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "34902:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3111,
                        "nodeType": "ExpressionStatement",
                        "src": "34902:35:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3099,
                    "nodeType": "StructuredDocumentation",
                    "src": "34778:48:0",
                    "text": "@dev exclude specific wallets from the pause"
                  },
                  "functionSelector": "885bd9ee",
                  "id": 3113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3103,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "34881:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "34881:10:0"
                    }
                  ],
                  "name": "excludeFromPause",
                  "nameLocation": "34840:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3101,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "34865:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3113,
                        "src": "34857:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "34857:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "34856:17:0"
                  },
                  "returnParameters": {
                    "id": 3105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "34892:0:0"
                  },
                  "scope": 3373,
                  "src": "34831:113:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3136,
                    "nodeType": "Block",
                    "src": "35055:129:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 3123,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3116,
                                    "src": "35081:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3122,
                                  "name": "isOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "35073:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 3124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35073:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 3125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "35093:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "35073:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552523a206f776e65722063616e277420626520696e636c75646564",
                              "id": 3127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35100:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5",
                                "typeString": "literal_string \"ERR: owner can't be included\""
                              },
                              "value": "ERR: owner can't be included"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f2fe3deb7ec9ba042b5ef23162a523af022b4f5fde5212da22754d8612d8f8c5",
                                "typeString": "literal_string \"ERR: owner can't be included\""
                              }
                            ],
                            "id": 3121,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "35065:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35065:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3129,
                        "nodeType": "ExpressionStatement",
                        "src": "35065:66:0"
                      },
                      {
                        "expression": {
                          "id": 3134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3130,
                              "name": "isExcludedFromPause",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "35141:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3132,
                            "indexExpression": {
                              "id": 3131,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3116,
                              "src": "35161:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "35141:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 3133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "35172:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "35141:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3135,
                        "nodeType": "ExpressionStatement",
                        "src": "35141:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3114,
                    "nodeType": "StructuredDocumentation",
                    "src": "34950:41:0",
                    "text": "@dev include and address in the pause"
                  },
                  "functionSelector": "e2482606",
                  "id": 3137,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3119,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3118,
                        "name": "authorized",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 218,
                        "src": "35044:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "35044:10:0"
                    }
                  ],
                  "name": "includeInPause",
                  "nameLocation": "35005:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3116,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "35028:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3137,
                        "src": "35020:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "35020:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "35019:17:0"
                  },
                  "returnParameters": {
                    "id": 3120,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "35055:0:0"
                  },
                  "scope": 3373,
                  "src": "34996:188:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3179,
                    "nodeType": "Block",
                    "src": "35297:306:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3146,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "35315:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "35315:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3148,
                                  "name": "assetPoolLockTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1304,
                                  "src": "35334:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 3149,
                                  "name": "assetPoolLockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1306,
                                  "src": "35359:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "35334:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "35315:61:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417373657420706f6f6c2063757272656e746c79206c6f636b6564",
                              "id": 3152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35378:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d",
                                "typeString": "literal_string \"Asset pool currently locked\""
                              },
                              "value": "Asset pool currently locked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fea7a41649cce073909da278000fd83fd22b592a0ff70a833c895361090e028d",
                                "typeString": "literal_string \"Asset pool currently locked\""
                              }
                            ],
                            "id": 3145,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "35307:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35307:101:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3154,
                        "nodeType": "ExpressionStatement",
                        "src": "35307:101:0"
                      },
                      {
                        "assignments": [
                          3156
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3156,
                            "mutability": "mutable",
                            "name": "amountAssetPoolBNBToTransfer",
                            "nameLocation": "35426:28:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 3179,
                            "src": "35418:36:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3155,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "35418:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3162,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3159,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "35465:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokifyRisingFloor_$3373",
                                  "typeString": "contract TokifyRisingFloor"
                                }
                              ],
                              "id": 3158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "35457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3157,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "35457:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35457:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "35457:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35418:60:0"
                      },
                      {
                        "assignments": [
                          3164,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3164,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "35494:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 3179,
                            "src": "35489:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3163,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "35489:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 3174,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 3172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35567:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3167,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3140,
                                    "src": "35514:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "35506:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3165,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "35506:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35506:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "35506:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 3171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 3170,
                                "name": "amountAssetPoolBNBToTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3156,
                                "src": "35537:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "35506:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 3173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35506:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35488:82:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3176,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3164,
                              "src": "35588:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3175,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "35580:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35580:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3178,
                        "nodeType": "ExpressionStatement",
                        "src": "35580:16:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3138,
                    "nodeType": "StructuredDocumentation",
                    "src": "35191:40:0",
                    "text": "@dev necessary for contract upgrades"
                  },
                  "functionSelector": "fb4193be",
                  "id": 3180,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3143,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3142,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 205,
                        "src": "35287:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "35287:9:0"
                    }
                  ],
                  "name": "moveAssetPool",
                  "nameLocation": "35245:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3140,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "35267:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3180,
                        "src": "35259:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "35259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "35258:19:0"
                  },
                  "returnParameters": {
                    "id": 3144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "35297:0:0"
                  },
                  "scope": 3373,
                  "src": "35236:367:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3210,
                    "nodeType": "Block",
                    "src": "35716:258:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3189,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "35734:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "35734:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3191,
                                  "name": "assetPoolLockTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1304,
                                  "src": "35753:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 3192,
                                  "name": "assetPoolLockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1306,
                                  "src": "35778:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "35753:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "35734:61:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265776172647320706f6f6c2063757272656e746c79206c6f636b6564",
                              "id": 3195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35797:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2",
                                "typeString": "literal_string \"Rewards pool currently locked\""
                              },
                              "value": "Rewards pool currently locked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_60d391252712454af5bd24518c684eec548ec8a1c890b86d74f558b6235310f2",
                                "typeString": "literal_string \"Rewards pool currently locked\""
                              }
                            ],
                            "id": 3188,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "35726:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35726:103:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3197,
                        "nodeType": "ExpressionStatement",
                        "src": "35726:103:0"
                      },
                      {
                        "assignments": [
                          3199
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3199,
                            "mutability": "mutable",
                            "name": "rewardsPoolBalance",
                            "nameLocation": "35847:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 3210,
                            "src": "35839:26:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3198,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "35839:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3202,
                        "initialValue": {
                          "expression": {
                            "id": 3200,
                            "name": "rewardsPoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "35868:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "35868:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35839:55:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3206,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3183,
                              "src": "35937:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3207,
                              "name": "rewardsPoolBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3199,
                              "src": "35948:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3203,
                              "name": "rewardsPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1295,
                              "src": "35904:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardsPool_$1149",
                                "typeString": "contract RewardsPool"
                              }
                            },
                            "id": 3205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferBNBToAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1148,
                            "src": "35904:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35904:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3209,
                        "nodeType": "ExpressionStatement",
                        "src": "35904:63:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3181,
                    "nodeType": "StructuredDocumentation",
                    "src": "35609:40:0",
                    "text": "@dev necessary for contract upgrades"
                  },
                  "functionSelector": "09cfc486",
                  "id": 3211,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3186,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3185,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 205,
                        "src": "35706:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "35706:9:0"
                    }
                  ],
                  "name": "moveRewardPool",
                  "nameLocation": "35663:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3183,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "35686:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3211,
                        "src": "35678:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "35678:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "35677:19:0"
                  },
                  "returnParameters": {
                    "id": 3187,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "35716:0:0"
                  },
                  "scope": 3373,
                  "src": "35654:320:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3229,
                    "nodeType": "Block",
                    "src": "36145:90:0",
                    "statements": [
                      {
                        "assignments": [
                          3220
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3220,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "36165:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 3229,
                            "src": "36157:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3219,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36157:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3223,
                        "initialValue": {
                          "expression": {
                            "id": 3221,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "36174:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "36174:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36157:27:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3225,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3220,
                              "src": "36213:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3226,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3214,
                              "src": "36221:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3224,
                            "name": "_burnForBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3366,
                            "src": "36201:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 3227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36201:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3218,
                        "id": 3228,
                        "nodeType": "Return",
                        "src": "36194:34:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3212,
                    "nodeType": "StructuredDocumentation",
                    "src": "35981:99:0",
                    "text": "@dev allow holders to burn their token in exchange for BNB stored in the asset and rewards pool"
                  },
                  "functionSelector": "51d016f5",
                  "id": 3230,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnForBNB",
                  "nameLocation": "36094:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3214,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "36113:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3230,
                        "src": "36105:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "36105:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "36104:16:0"
                  },
                  "returnParameters": {
                    "id": 3218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3217,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3230,
                        "src": "36139:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3216,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "36139:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "36138:6:0"
                  },
                  "scope": 3373,
                  "src": "36085:150:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3365,
                    "nodeType": "Block",
                    "src": "36399:1878:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3240,
                            "name": "isPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "36412:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 3241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36412:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3252,
                        "nodeType": "IfStatement",
                        "src": "36409:125:0",
                        "trueBody": {
                          "id": 3251,
                          "nodeType": "Block",
                          "src": "36423:111:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 3247,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 3243,
                                        "name": "isExcludedFromPause",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1225,
                                        "src": "36443:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                          "typeString": "mapping(address => bool)"
                                        }
                                      },
                                      "id": 3245,
                                      "indexExpression": {
                                        "id": 3244,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3233,
                                        "src": "36463:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "36443:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "74727565",
                                      "id": 3246,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "36474:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "36443:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5741524e494e473a20636f6e747261637420697320696e20706175736520666f722075706772616465",
                                    "id": 3248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "36479:43:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118",
                                      "typeString": "literal_string \"WARNING: contract is in pause for upgrade\""
                                    },
                                    "value": "WARNING: contract is in pause for upgrade"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_8cc4729827798fe1103e1eb5123d16f1b74a58790b63101807688b3951ef0118",
                                      "typeString": "literal_string \"WARNING: contract is in pause for upgrade\""
                                    }
                                  ],
                                  "id": 3242,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "36435:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 3249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36435:88:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3250,
                              "nodeType": "ExpressionStatement",
                              "src": "36435:88:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3255,
                            "mutability": "mutable",
                            "name": "amountBNBToTransfer",
                            "nameLocation": "36778:19:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 3365,
                            "src": "36770:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3254,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "36770:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@dev calculate amount BNB to transfer to wallet burning the token\n @dev this is done by taking the fraction of the circulating supply being burned and multiplying it with the BNB stored in the asset pool",
                        "id": 3265,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3262,
                                "name": "getCirculatingSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2932,
                                "src": "36842:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 3263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36842:22:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3259,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3235,
                                  "src": "36830:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3256,
                                    "name": "getAmountBNBInAssetPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3005,
                                    "src": "36800:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 3257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "36800:25:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44,
                                "src": "36800:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 3260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36800:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "36800:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36800:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36770:95:0"
                      },
                      {
                        "assignments": [
                          3267
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3267,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "36885:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 3365,
                            "src": "36877:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3266,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36877:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3269,
                        "initialValue": {
                          "id": 3268,
                          "name": "DEAD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "36897:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36877:24:0"
                      },
                      {
                        "documentation": "@dev if not enough token to burn then transaction will be reverted and BNB will not be sent",
                        "expression": {
                          "id": 3280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3270,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "37015:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3272,
                            "indexExpression": {
                              "id": 3271,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3233,
                              "src": "37025:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "37015:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3277,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3235,
                                "src": "37057:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "496e73756666696369656e742042616c616e6365",
                                "id": 3278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "37065:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
                                  "typeString": "literal_string \"Insufficient Balance\""
                                },
                                "value": "Insufficient Balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82",
                                  "typeString": "literal_string \"Insufficient Balance\""
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 3273,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "37035:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 3275,
                                "indexExpression": {
                                  "id": 3274,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3233,
                                  "src": "37045:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "37035:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 82,
                              "src": "37035:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                              }
                            },
                            "id": 3279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37035:53:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "37015:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3281,
                        "nodeType": "ExpressionStatement",
                        "src": "37015:73:0"
                      },
                      {
                        "expression": {
                          "id": 3291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3282,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "37098:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3284,
                            "indexExpression": {
                              "id": 3283,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3267,
                              "src": "37108:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "37098:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3289,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3235,
                                "src": "37146:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 3285,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "37121:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 3287,
                                "indexExpression": {
                                  "id": 3286,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3267,
                                  "src": "37131:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "37121:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16,
                              "src": "37121:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37121:32:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "37098:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3292,
                        "nodeType": "ExpressionStatement",
                        "src": "37098:55:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3293,
                              "name": "getAmountBNBInRewardsPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3015,
                              "src": "37550:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 3294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37550:27:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 3295,
                            "name": "amountBNBToTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3255,
                            "src": "37581:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "37550:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev when sending BNB, first the BNB from the rewards pool is sent according to amount calculated\n @dev if there is not enough BNB in the rewards pool then the rest is covered by BNB in the asset pool\n @dev this ensurees that the floor price rises when a holder burns the token as the asset pool decreases at a slower rate than the token is burned",
                        "falseBody": {
                          "id": 3337,
                          "nodeType": "Block",
                          "src": "37694:322:0",
                          "statements": [
                            {
                              "assignments": [
                                3306
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3306,
                                  "mutability": "mutable",
                                  "name": "amountAssetPoolBNBToTransfer",
                                  "nameLocation": "37716:28:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3337,
                                  "src": "37708:36:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3305,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "37708:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3312,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 3309,
                                      "name": "getAmountBNBInRewardsPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3015,
                                      "src": "37771:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 3310,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "37771:27:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3307,
                                    "name": "amountBNBToTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3255,
                                    "src": "37747:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30,
                                  "src": "37747:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37747:52:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "37708:91:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3316,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3233,
                                    "src": "37846:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 3317,
                                      "name": "getAmountBNBInRewardsPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3015,
                                      "src": "37854:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 3318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "37854:27:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3313,
                                    "name": "rewardsPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1295,
                                    "src": "37813:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RewardsPool_$1149",
                                      "typeString": "contract RewardsPool"
                                    }
                                  },
                                  "id": 3315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferBNBToAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1148,
                                  "src": "37813:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 3319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37813:69:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3320,
                              "nodeType": "ExpressionStatement",
                              "src": "37813:69:0"
                            },
                            {
                              "assignments": [
                                3322,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3322,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nameLocation": "37902:7:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3337,
                                  "src": "37897:12:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 3321,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "37897:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 3332,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 3330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "37972:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3325,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3233,
                                          "src": "37922:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3324,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "37914:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3323,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "37914:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3326,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "37914:15:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 3327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "37914:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 3329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 3328,
                                      "name": "amountAssetPoolBNBToTransfer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3306,
                                      "src": "37942:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "37914:57:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 3331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37914:61:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "37896:79:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3334,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3322,
                                    "src": "37997:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 3333,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "37989:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 3335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37989:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3336,
                              "nodeType": "ExpressionStatement",
                              "src": "37989:16:0"
                            }
                          ]
                        },
                        "id": 3338,
                        "nodeType": "IfStatement",
                        "src": "37547:469:0",
                        "trueBody": {
                          "id": 3304,
                          "nodeType": "Block",
                          "src": "37602:86:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3300,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3233,
                                    "src": "37649:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3301,
                                    "name": "amountBNBToTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3255,
                                    "src": "37657:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3297,
                                    "name": "rewardsPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1295,
                                    "src": "37616:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RewardsPool_$1149",
                                      "typeString": "contract RewardsPool"
                                    }
                                  },
                                  "id": 3299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferBNBToAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1148,
                                  "src": "37616:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 3302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37616:61:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3303,
                              "nodeType": "ExpressionStatement",
                              "src": "37616:61:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 3342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "38097:25:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 3339,
                              "name": "isDividendExempt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1221,
                              "src": "38098:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3341,
                            "indexExpression": {
                              "id": 3340,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3233,
                              "src": "38115:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "38098:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": "@dev set the new share of the wallet burning the token",
                        "id": 3356,
                        "nodeType": "IfStatement",
                        "src": "38094:104:0",
                        "trueBody": {
                          "id": 3355,
                          "nodeType": "Block",
                          "src": "38123:75:0",
                          "statements": [
                            {
                              "clauses": [
                                {
                                  "block": {
                                    "id": 3350,
                                    "nodeType": "Block",
                                    "src": "38185:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 3351,
                                  "nodeType": "TryCatchClause",
                                  "src": "38185:2:0"
                                },
                                {
                                  "block": {
                                    "id": 3352,
                                    "nodeType": "Block",
                                    "src": "38194:2:0",
                                    "statements": []
                                  },
                                  "errorName": "",
                                  "id": 3353,
                                  "nodeType": "TryCatchClause",
                                  "src": "38188:8:0"
                                }
                              ],
                              "externalCall": {
                                "arguments": [
                                  {
                                    "id": 3345,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3233,
                                    "src": "38158:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 3346,
                                      "name": "_balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1203,
                                      "src": "38166:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 3348,
                                    "indexExpression": {
                                      "id": 3347,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3233,
                                      "src": "38176:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "38166:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3343,
                                    "name": "dividendDistributor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "38129:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DividendDistributor_$1064",
                                      "typeString": "contract DividendDistributor"
                                    }
                                  },
                                  "id": 3344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 659,
                                  "src": "38129:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 3349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "38129:55:0",
                                "tryCall": true,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3354,
                              "nodeType": "TryStatement",
                              "src": "38125:71:0"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3358,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3233,
                              "src": "38223:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3359,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3267,
                              "src": "38231:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3360,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3235,
                              "src": "38242:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3357,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "38214:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 3361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38214:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3362,
                        "nodeType": "EmitStatement",
                        "src": "38209:40:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "38266:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3239,
                        "id": 3364,
                        "nodeType": "Return",
                        "src": "38259:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3231,
                    "nodeType": "StructuredDocumentation",
                    "src": "36242:75:0",
                    "text": "@dev function to process the sending of BNB to person burning the token"
                  },
                  "id": 3366,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burnForBNB",
                  "nameLocation": "36331:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3233,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "36351:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3366,
                        "src": "36343:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "36343:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3235,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "36367:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3366,
                        "src": "36359:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "36359:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "36342:32:0"
                  },
                  "returnParameters": {
                    "id": 3239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3238,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3366,
                        "src": "36393:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3237,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "36393:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "36392:6:0"
                  },
                  "scope": 3373,
                  "src": "36322:1955:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 3372,
                  "name": "AutoLiquify",
                  "nameLocation": "38290:11:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3368,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountBNB",
                        "nameLocation": "38310:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3372,
                        "src": "38302:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "38302:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3370,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountBOG",
                        "nameLocation": "38329:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 3372,
                        "src": "38321:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3369,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "38321:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "38301:38:0"
                  },
                  "src": "38284:56:0"
                }
              ],
              "scope": 3374,
              "src": "12618:25724:0",
              "usedErrors": []
            }
          ],
          "src": "38:38304:0"
        },
        "id": 0
      }
    }
  }
}
